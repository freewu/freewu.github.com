{"version":3,"file":"9803.renderer.js","mappings":"+JAEA,QADwB,CAAE,KAAQ,CAAE,IAAO,MAAO,MAAS,CAAE,QAAW,gBAAiB,UAAa,SAAW,SAAY,CAAC,CAAE,IAAO,OAAQ,MAAS,CAAE,EAAK,wRAA4R,KAAQ,eAAgB,MAAS,U,eCKxd,EAAoB,SAA2BA,EAAOC,GACxD,OAAoB,gBAAoBC,EAAA,GAAU,QAAc,OAAc,CAAC,EAAGF,GAAQ,CAAC,EAAG,CAC5FC,IAAKA,EACLE,KAAM,IAEV,EAIA,QAA4B,aAAiB,E,4DCb7C,QAD8B,CAAE,KAAQ,CAAE,IAAO,MAAO,MAAS,CAAE,QAAW,gBAAiB,UAAa,SAAW,SAAY,CAAC,CAAE,IAAO,OAAQ,MAAS,CAAE,EAAK,uOAA2O,KAAQ,qBAAsB,MAAS,U,eCKnb,EAA0B,SAAiCH,EAAOC,GACpE,OAAoB,gBAAoBC,EAAA,GAAU,QAAc,OAAc,CAAC,EAAGF,GAAQ,CAAC,EAAG,CAC5FC,IAAKA,EACLE,KAAM,IAEV,EAIA,QAA4B,aAAiB,E,iDCdtC,MAAMC,EAAY,CACvB,MACA,S,iICHF,MAAMC,EAAoB,0BAGnB,SAASC,IACd,MAAMC,EAAOC,aAAaC,QAAQJ,GAClC,OAAiB,OAATE,EAAgB,SAAWA,CACrC,CAGO,SAASG,EAAeH,GAC7BC,aAAaG,QAAQN,EAAkBE,EACzC,CAEA,MAAMK,EAA0B,gCAGzB,SAASC,IACd,MAAMC,EAAaN,aAAaC,QAAQG,GACxC,OAAuB,OAAfE,EAAsB,GAAKA,CACrC,CAGO,SAASC,EAAqBD,GACnCN,aAAaG,QAAQC,EAAwBE,EAC/C,C,iKCjBA,MAsCA,EAtC4B,KAE1B,MAAQP,EAAMS,IAAY,IAAAC,WAAS,IAAAX,oBAC3BQ,EAAYI,IAAkB,IAAAD,WAAS,IAAAJ,yBAS/C,OACE,iCACE,SAAC,IAAO,CAACM,YAAY,OAAOC,OAAK,wBACjC,SAAC,SAAS,CAACC,MAAM,OAAM,UACrB,SAAC,IAAM,CACLC,MAAQf,EACRgB,MAAO,CAAEC,MAAO,KAChBC,SAAYC,IAAgBV,EAAQU,IAAI,IAAAhB,gBAAegB,EAAE,EACzDC,SAAU,OAAe,EAAAvB,eAG7B,SAAC,SAAS,CAACiB,MAAM,OAAM,UACrB,SAAC,IAAK,WACJ,SAAC,UAAK,CACJO,WAAS,EACTC,UAAa,IACbC,YAAU,EACVP,MAAQ,CAAEC,MAAO,SACjBC,SAxBkBM,IAC1B,MAAML,EAAIK,EAAEC,OAAOV,MAAMW,OACzBf,EAAcQ,IACd,IAAAX,sBAAqBW,EAAE,EAsBfJ,MAASR,UAIlB,C,kBCzCI,SAASoB,EAAeC,GAC7B,OAAOA,EAAIC,KAAK,CAACC,EAAMC,KAAmB,CAAEjB,MAAOgB,EAAMf,MAAMe,KACjE,C","sources":["webpack://magic-tools/./node_modules/@ant-design/icons-svg/es/asn/CheckCircleFilled.js","webpack://magic-tools/./node_modules/@ant-design/icons/es/icons/CheckCircleFilled.js","webpack://magic-tools/./node_modules/@ant-design/icons-svg/es/asn/ExclamationCircleFilled.js","webpack://magic-tools/./node_modules/@ant-design/icons/es/icons/ExclamationCircleFilled.js","webpack://magic-tools/./src/renderer/App/RC4Crypto/data.ts","webpack://magic-tools/./src/renderer/App/RC4Crypto/lib.ts","webpack://magic-tools/./src/renderer/App/RC4Crypto/setting.tsx","webpack://magic-tools/./src/renderer/lib/array.ts"],"sourcesContent":["// This icon file is generated automatically.\nvar CheckCircleFilled = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm193.5 301.7l-210.6 292a31.8 31.8 0 01-51.7 0L318.5 484.9c-3.8-5.3 0-12.7 6.5-12.7h46.9c10.2 0 19.9 4.9 25.9 13.3l71.2 98.8 157.2-218c6-8.3 15.6-13.3 25.9-13.3H699c6.5 0 10.3 7.4 6.5 12.7z\" } }] }, \"name\": \"check-circle\", \"theme\": \"filled\" };\nexport default CheckCircleFilled;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport CheckCircleFilledSvg from \"@ant-design/icons-svg/es/asn/CheckCircleFilled\";\nimport AntdIcon from '../components/AntdIcon';\nvar CheckCircleFilled = function CheckCircleFilled(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: CheckCircleFilledSvg\n  }));\n};\nif (process.env.NODE_ENV !== 'production') {\n  CheckCircleFilled.displayName = 'CheckCircleFilled';\n}\nexport default /*#__PURE__*/React.forwardRef(CheckCircleFilled);","// This icon file is generated automatically.\nvar ExclamationCircleFilled = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm-32 232c0-4.4 3.6-8 8-8h48c4.4 0 8 3.6 8 8v272c0 4.4-3.6 8-8 8h-48c-4.4 0-8-3.6-8-8V296zm32 440a48.01 48.01 0 010-96 48.01 48.01 0 010 96z\" } }] }, \"name\": \"exclamation-circle\", \"theme\": \"filled\" };\nexport default ExclamationCircleFilled;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport ExclamationCircleFilledSvg from \"@ant-design/icons-svg/es/asn/ExclamationCircleFilled\";\nimport AntdIcon from '../components/AntdIcon';\nvar ExclamationCircleFilled = function ExclamationCircleFilled(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: ExclamationCircleFilledSvg\n  }));\n};\nif (process.env.NODE_ENV !== 'production') {\n  ExclamationCircleFilled.displayName = 'ExclamationCircleFilled';\n}\nexport default /*#__PURE__*/React.forwardRef(ExclamationCircleFilled);","// 输出/输入数据编码列表\nexport const codeList  = [\n  \"HEX\",\n  \"Base64\"\n];","const DEFAULT_CODE_ITEM = 'rc4-crypto:default-code';\n\n// 获取默认编码 HEX / Base64\nexport function getDefaultCode() :string  {\n  const code = localStorage.getItem(DEFAULT_CODE_ITEM);\n  return (code === null)? \"Base64\" : code;\n}\n\n// 设置默认编码 HEX / Base64\nexport function setDefaultCode(code: string) : void  {\n  localStorage.setItem(DEFAULT_CODE_ITEM,code);\n}\n\nconst DEFAULT_PASSPHRASE_ITEM = 'rc4-crypto:default-passphrase';\n\n// 获取默认密钥\nexport function getDefaultPassphrase() :string  {\n  const passphrase = localStorage.getItem(DEFAULT_PASSPHRASE_ITEM);\n  return (passphrase === null)? \"\" : passphrase;\n}\n\n// 设置默认密钥\nexport function setDefaultPassphrase(passphrase: string) : void  {\n  localStorage.setItem(DEFAULT_PASSPHRASE_ITEM,passphrase);\n}","import { Select, Form, Divider, Input, Space } from \"antd\";\nimport React,{ useState } from \"react\";\nimport { arrayToOptions } from \"../../lib/array\"\nimport { codeList } from \"./data\";\nimport { getDefaultCode, setDefaultCode } from \"./lib\";\nimport { getDefaultPassphrase, setDefaultPassphrase } from \"./lib\";\n\nconst RabbitCryptoSetting = () => {\n\n  const [ code, setCode ] = useState(getDefaultCode()); // 默认编码\n  const [ passphrase, setPassphrase ] = useState(getDefaultPassphrase()); // 默认密钥\n\n  // 密钥 Passphrase 输入处理\n  const onPassphraseChange = (e :React.ChangeEvent<HTMLInputElement>) => {\n    const v = e.target.value.trim();\n    setPassphrase(v);\n    setDefaultPassphrase(v);\n  }\n\n  return (\n    <>\n      <Divider orientation=\"left\" plain>RC4 加解密</Divider>\n      <Form.Item label=\"默认编码\">\n        <Select\n          value={ code }\n          style={{ width: 240 }}\n          onChange={ (v :string) => { setCode(v); setDefaultCode(v); } }\n          options={ arrayToOptions(codeList) }\n        />\n      </Form.Item>\n      <Form.Item label=\"默认密钥\">\n        <Space>\n          <Input\n            showCount\n            maxLength= { 256 }\n            allowClear\n            style={ { width: \"520px\" } }\n            onChange={ onPassphraseChange }\n            value= { passphrase } />\n        </Space>\n      </Form.Item>\n    </>\n  );\n}\n\nexport default RabbitCryptoSetting;","// 数据转成 AntD Select 支持的数据格式 { label: \"xxx\", value: \"xxx\" }\r\nexport function arrayToOptions(arr :Array<any>) :Array<{label :string,value :string}> {\r\n  return arr.map( (item ,index) => { return { label: item ,value:item} });\r\n}"],"names":["props","ref","AntdIcon","icon","codeList","DEFAULT_CODE_ITEM","getDefaultCode","code","localStorage","getItem","setDefaultCode","setItem","DEFAULT_PASSPHRASE_ITEM","getDefaultPassphrase","passphrase","setDefaultPassphrase","setCode","useState","setPassphrase","orientation","plain","label","value","style","width","onChange","v","options","showCount","maxLength","allowClear","e","target","trim","arrayToOptions","arr","map","item","index"],"sourceRoot":""}