{"version":3,"file":"7681.renderer.js","mappings":"4IACO,MAAMA,EAAiBC,IAC5B,GAAqB,KAAjBA,EAAMC,OACR,MAAO,GAET,IAAIC,EAAS,GACb,IAAK,IAAIC,EAAI,EAAGA,EAAIH,EAAMI,OAAQD,IAChCD,EAAOG,KAAK,KAAOL,EAAMM,WAAWH,GAAK,KAE3C,OAAOD,EAAOK,KAAK,GAAG,EAIXC,EAAiBR,IAC5B,GAAqB,KAAjBA,EAAMC,OACR,MAAO,GAET,IAAIQ,EAAMT,EAAMU,MAAM,aACtB,GAAG,OAASD,EAAK,MAAO,GACxB,IAAIP,EAAS,GACb,IAAK,IAAIC,EAAI,EAAGA,EAAIM,EAAIL,OAAQD,IAE9BD,EAAOG,KAAKM,OAAOC,aAAcC,SAASJ,EAAIN,GAAGW,QAAQ,SAAU,OAErE,OAAOZ,EAAOK,KAAK,GAAG,C","sources":["webpack:///./src/renderer/App/Unicode/lib.ts"],"sourcesContent":["// ASCII 转换 Unicode\r\nexport const ascii2Unicode = (value: string) :string => {\r\n  if (value.trim() === '') {\r\n    return '';\r\n  }\r\n  let reuslt = [];\r\n  for (let i = 0; i < value.length; i++) {\r\n    reuslt.push('&#' + value.charCodeAt(i) + ';');\r\n  }\r\n  return reuslt.join('');\r\n}\r\n\r\n// Unicode 转换 ASCII\r\nexport const unicode2Ascii = (value: string) :string => {\r\n  if (value.trim() === '') {\r\n    return '';\r\n  }\r\n  let arr = value.match(/&#(\\d+);/g);\r\n  if(null === arr) return '';\r\n  let reuslt = [];\r\n  for (let i = 0; i < arr.length; i++) {\r\n    // String.fromCharCode( value[i].replace(/[&#;]/g, '') )\r\n    reuslt.push(String.fromCharCode( parseInt(arr[i].replace(/[&#;]/g, '')) ));\r\n  }\r\n  return reuslt.join('');\r\n}"],"names":["ascii2Unicode","value","trim","reuslt","i","length","push","charCodeAt","join","unicode2Ascii","arr","match","String","fromCharCode","parseInt","replace"],"sourceRoot":""}