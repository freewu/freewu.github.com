{"version":3,"file":"5439.renderer.js","mappings":"0JAEA,QADmB,CAAE,KAAQ,CAAE,IAAO,MAAO,MAAS,CAAE,QAAW,gBAAiB,UAAa,SAAW,SAAY,CAAC,CAAE,IAAO,OAAQ,MAAS,CAAE,EAAK,gMAAoM,KAAQ,OAAQ,MAAS,Y,eCKnX,EAAe,SAAsBA,EAAOC,GAC9C,OAAoB,gBAAoBC,EAAA,GAAU,QAAc,OAAc,CAAC,EAAGF,GAAQ,CAAC,EAAG,CAC5FC,IAAKA,EACLE,KAAM,IAEV,EAIA,QAA4B,aAAiB,E,8SCZtC,MAAMC,EAAeC,IAC1B,OAAOA,GACL,IAAK,MAAO,OAAO,WACnB,IAAK,OAAQ,OAAO,YACpB,IAAK,OAAQ,OAAO,YACpB,IAAK,SAAU,OAAO,cACtB,IAAK,SAAU,OAAO,cACtB,IAAK,SAAU,OAAO,cACtB,IAAK,SAAU,OAAO,cACtB,IAAK,YAAa,OAAO,iBAE3B,OAAO,aAAoB,EAGvBC,EAAoB,gCAGbC,EAAqB,KAChC,MAAMC,EAAOC,aAAaC,QAAQJ,GAClC,OAAiB,OAATE,EAAgB,SAAWA,CAAI,EAIlC,SAASG,EAAmBH,GACjCC,aAAaG,QAAQN,EAAkBE,EACzC,CAEA,MAAMK,EAAe,2BAGd,SAASC,IACd,MAAMC,EAAON,aAAaC,QAAQG,GAClC,OAAiB,OAATE,EAAgB,GAAKA,CAC/B,CAGO,SAASC,EAAeD,GAC7BN,aAAaG,QAAQC,EAAcE,EACrC,CAEA,MAAME,EAAoB,gCAGnB,SAASC,IACd,MAAMC,EAAOV,aAAaC,QAAQO,GAClC,OAAiB,OAATE,EAAgB,IAAOC,SAASD,EAC1C,CAGO,SAASE,EAAoBF,GAClCV,aAAaG,QAAQK,EAAmBE,EAAKG,WAC/C,CAEA,MAAMC,EAAqB,iCAGpB,SAASC,IACd,MAAMC,EAAMhB,aAAaC,QAAQa,GACjC,OAAgB,OAARE,EAAe,IAAML,SAASK,EACxC,CAGO,SAASC,EAAoBD,GAClChB,aAAaG,QAAQW,EAAoBE,EAAIH,WAC/C,CAEO,MAAMK,EAAuBnB,GAC3B,iBAAmBA,EAAO,mB,wJC5D5B,MAAMoB,EAAoB,KAE/B,MAAQpB,EAAMqB,IAAY,IAAAC,WAAS,IAAAvB,wBAC3BQ,EAAMgB,IAAY,IAAAD,WAAS,IAAAhB,oBAC3BK,EAAMa,IAAY,IAAAF,WAAS,IAAAZ,yBAC3Be,EAAWC,IAAiB,IAAAJ,WAAS,IAAAN,wBAE7C,OACE,iCACE,SAAC,IAAO,CAACW,YAAY,OAAOC,OAAK,2BASjC,SAAC,SAAS,CAACC,MAAM,aAAY,UAC3B,SAAC,UAAK,CACJC,WAAS,EACTC,YAAU,EACVC,MAAQ,CAAEC,MAAO,KACjBC,SAAYC,IAAQZ,EAAQY,EAAEC,OAAOC,QAAQ,IAAA7B,gBAAe2B,EAAEC,OAAOC,MAAM,EAC3EA,MAAS9B,OAEb,SAAC,SAAS,CAACsB,MAAM,OAAM,UACrB,SAAC,IAAW,CACVS,WAAW,IACXC,IAAQ,EACRC,IAAQ,IACRR,MAAQ,CAAEC,MAAO,KACjBC,SAAYO,IACF,MAALA,GACEA,GAAK,GAAKA,GAAK,OAChB,IAAA5B,qBAAoB4B,GACpBjB,EAAQiB,G,EAIdJ,MAAS1B,OAEb,SAAC,SAAS,CAACkB,MAAM,SAAQ,UACvB,SAAC,IAAW,CACVS,WAAW,IACXI,YAAa,qBACbC,MAAO,qBACPJ,IAAQ,GACRC,IAAQ,KACRR,MAAQ,CAAEC,MAAO,KACjBC,SAAYO,IACF,MAALA,GACEA,GAAK,IAAMA,GAAK,QACjB,IAAAvB,qBAAoBuB,GACpBf,EAAae,G,EAInBJ,MAASZ,QAGhB,C","sources":["webpack://magic-tools/./node_modules/@ant-design/icons-svg/es/asn/DownOutlined.js","webpack://magic-tools/./node_modules/@ant-design/icons/es/icons/DownOutlined.js","webpack://magic-tools/./src/renderer/App/PBKDF2Calc/lib.ts","webpack://magic-tools/./src/renderer/App/PBKDF2Calc/setting.tsx"],"sourcesContent":["// This icon file is generated automatically.\nvar DownOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z\" } }] }, \"name\": \"down\", \"theme\": \"outlined\" };\nexport default DownOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport DownOutlinedSvg from \"@ant-design/icons-svg/es/asn/DownOutlined\";\nimport AntdIcon from '../components/AntdIcon';\nvar DownOutlined = function DownOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: DownOutlinedSvg\n  }));\n};\nif (process.env.NODE_ENV !== 'production') {\n  DownOutlined.displayName = 'DownOutlined';\n}\nexport default /*#__PURE__*/React.forwardRef(DownOutlined);","import * as CryptoJS from 'crypto-js';\n\n// 获取指定的 Hash 算法\nexport const getHashAlgo = (hash :string) => {\n  switch(hash) {\n    case 'MD5': return CryptoJS.algo.MD5;\n    case 'SHA1': return CryptoJS.algo.SHA1;\n    case 'SHA3': return CryptoJS.algo.SHA3;\n    case 'SHA224': return CryptoJS.algo.SHA224;\n    case 'SHA256': return CryptoJS.algo.SHA256;\n    case 'SHA384': return CryptoJS.algo.SHA384;\n    case 'SHA512': return CryptoJS.algo.SHA512;\n    case 'RIPEMD160': return CryptoJS.algo.RIPEMD160;\n  }\n  return CryptoJS.algo.SHA256;\n}\n\nconst DEFAULT_HASH_ALGO = 'pbkdf2-calc:default-hash-algo';\n\n// 获取默认 Hash 算法\nexport const getDefaultHashAlgo = () :string => {\n  const algo = localStorage.getItem(DEFAULT_HASH_ALGO);\n  return (algo === null)? \"SHA256\" : algo;\n}\n\n// 设置默认 Hash 算法\nexport function setDefaultHashAlgo(algo: string) :void  {\n  localStorage.setItem(DEFAULT_HASH_ALGO,algo);\n}\n\nconst DEFAULT_SALT = 'pbkdf2-calc:default-salt';\n\n// 获取默认盐值\nexport function getDefaultSalt() :string {\n  const salt = localStorage.getItem(DEFAULT_SALT);\n  return (salt === null)? \"\" : salt;\n}\n\n// 设置默认偏移量\nexport function setDefaultSalt(salt: string) :void  {\n  localStorage.setItem(DEFAULT_SALT, salt);\n}\n\nconst DEFAULT_ITERATION = 'pbkdf2-calc:default-iteration';\n\n// 获取默认迭代次数\nexport function getDefaultIteration() :number {\n  const iter = localStorage.getItem(DEFAULT_ITERATION);\n  return (iter === null)? 1000 : parseInt(iter); // 推荐 1000 + \n}\n\n// 设置默认迭代次数\nexport function setDefaultIteration(iter: number) :void {\n  localStorage.setItem(DEFAULT_ITERATION, iter.toString());\n}\n\nconst DEFAULT_KEY_LENGTH = 'pbkdf2-calc:default-key-length';\n\n// 获取默认推导密钥的长度 \nexport function getDefaultKeyLength() :number {\n  const len = localStorage.getItem(DEFAULT_KEY_LENGTH);\n  return (len === null)? 128 : parseInt(len); // 建议  128 / 256 / 512\n}\n\n// 设置默认推导密钥的长度\nexport function setDefaultKeyLength(len: number) :void {\n  localStorage.setItem(DEFAULT_KEY_LENGTH, len.toString());\n}\n\nexport const genValuePlaceholder = (algo :string) => {\n  return \"输入需要计算 PBKDF2-\" + algo + \" 值的内容 或 拖拽文件到框内打开\";\n}","import { Select, Form, Divider, Input, InputNumber } from \"antd\";\nimport React,{ useState } from \"react\";\nimport { arrayToOptions } from \"../../lib/array\"\nimport { hashAlgoList } from \"./data\";\nimport { getDefaultHashAlgo, setDefaultHashAlgo } from \"./lib\";\nimport { getDefaultSalt, setDefaultSalt } from \"./lib\";\nimport { getDefaultIteration, setDefaultIteration } from \"./lib\";\nimport { getDefaultKeyLength, setDefaultKeyLength } from \"./lib\";\nimport type { InputStatus } from \"antd/es/_util/statusUtils\";\n\nexport const PBKDF2CalcSetting = () => {\n\n  const [ algo, setAlgo ] = useState(getDefaultHashAlgo()); //  Hash 算法\n  const [ salt, setSalt ] = useState(getDefaultSalt()); // 盐值\n  const [ iter, setIter ] = useState(getDefaultIteration()); // 迭代次数\n  const [ keyLength, setKeyLength ] = useState(getDefaultKeyLength()); // 推导密钥的长度\n\n  return (\n    <>\n      <Divider orientation=\"left\" plain>PBKDF2 值计算</Divider>\n      {/* <Form.Item label=\"默认 Hash 算法\">\n        <Select\n          value={ algo }\n          style={{ width: 240 }}\n          onChange={ (v :string) => { setAlgo(v); setDefaultHashAlgo(v); } }\n          options={ arrayToOptions(hashAlgoList) }\n        />\n      </Form.Item> */}\n      <Form.Item label=\"默认盐值(Salt)\">\n        <Input \n          showCount\n          allowClear\n          style={ { width: 520 } }\n          onChange={ (e) => { setSalt(e.target.value); setDefaultSalt(e.target.value); } }\n          value= { salt } />\n      </Form.Item>\n      <Form.Item label=\"迭代次数\">\n        <InputNumber\n          addonAfter=\"次\"\n          min = { 1 }\n          max = { 100000 }\n          style={ { width: 200 } }\n          onChange={ (v :number | null) => { \n            if(v != null) {\n              if(v >= 1 && v <= 100000) {\n                setDefaultIteration(v);\n                setIter(v);\n              }\n            } \n          } }\n          value= { iter } />\n      </Form.Item>\n      <Form.Item label=\"推导密钥长度\">\n        <InputNumber\n          addonAfter=\"位\"\n          placeholder= \"推荐 128 / 256 / 512\"\n          title= \"推荐 128 / 256 / 512\"\n          min = { 16 }\n          max = { 2048 }\n          style={ { width: 200 } }\n          onChange={ (v :number | null) => { \n            if(v != null) {\n              if(v >= 16 && v <= 1024) {\n                setDefaultKeyLength(v);\n                setKeyLength(v);\n              }\n            } \n          } }\n          value= { keyLength } />\n      </Form.Item>\n    </>\n  );\n}"],"names":["props","ref","AntdIcon","icon","getHashAlgo","hash","DEFAULT_HASH_ALGO","getDefaultHashAlgo","algo","localStorage","getItem","setDefaultHashAlgo","setItem","DEFAULT_SALT","getDefaultSalt","salt","setDefaultSalt","DEFAULT_ITERATION","getDefaultIteration","iter","parseInt","setDefaultIteration","toString","DEFAULT_KEY_LENGTH","getDefaultKeyLength","len","setDefaultKeyLength","genValuePlaceholder","PBKDF2CalcSetting","setAlgo","useState","setSalt","setIter","keyLength","setKeyLength","orientation","plain","label","showCount","allowClear","style","width","onChange","e","target","value","addonAfter","min","max","v","placeholder","title"],"sourceRoot":""}