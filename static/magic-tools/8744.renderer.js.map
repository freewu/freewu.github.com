{"version":3,"file":"8744.renderer.js","mappings":"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","sources":["webpack:///./node_modules/@ant-design/icons-svg/es/asn/CheckCircleFilled.js","webpack:///./node_modules/@ant-design/icons/es/icons/CheckCircleFilled.js","webpack:///./node_modules/@ant-design/icons-svg/es/asn/ExclamationCircleFilled.js","webpack:///./node_modules/@ant-design/icons/es/icons/ExclamationCircleFilled.js","webpack:///./src/renderer/App/AESCrypto/data.ts","webpack:///./src/renderer/App/AESCrypto/lib.ts","webpack:///./src/renderer/App/AESCrypto/setting.tsx","webpack:///./src/renderer/lib/array.ts"],"sourcesContent":["// This icon file is generated automatically.\nvar CheckCircleFilled = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm193.5 301.7l-210.6 292a31.8 31.8 0 01-51.7 0L318.5 484.9c-3.8-5.3 0-12.7 6.5-12.7h46.9c10.2 0 19.9 4.9 25.9 13.3l71.2 98.8 157.2-218c6-8.3 15.6-13.3 25.9-13.3H699c6.5 0 10.3 7.4 6.5 12.7z\" } }] }, \"name\": \"check-circle\", \"theme\": \"filled\" };\nexport default CheckCircleFilled;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport CheckCircleFilledSvg from \"@ant-design/icons-svg/es/asn/CheckCircleFilled\";\nimport AntdIcon from '../components/AntdIcon';\nvar CheckCircleFilled = function CheckCircleFilled(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: CheckCircleFilledSvg\n  }));\n};\nif (process.env.NODE_ENV !== 'production') {\n  CheckCircleFilled.displayName = 'CheckCircleFilled';\n}\nexport default /*#__PURE__*/React.forwardRef(CheckCircleFilled);","// This icon file is generated automatically.\nvar ExclamationCircleFilled = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm-32 232c0-4.4 3.6-8 8-8h48c4.4 0 8 3.6 8 8v272c0 4.4-3.6 8-8 8h-48c-4.4 0-8-3.6-8-8V296zm32 440a48.01 48.01 0 010-96 48.01 48.01 0 010 96z\" } }] }, \"name\": \"exclamation-circle\", \"theme\": \"filled\" };\nexport default ExclamationCircleFilled;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport ExclamationCircleFilledSvg from \"@ant-design/icons-svg/es/asn/ExclamationCircleFilled\";\nimport AntdIcon from '../components/AntdIcon';\nvar ExclamationCircleFilled = function ExclamationCircleFilled(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: ExclamationCircleFilledSvg\n  }));\n};\nif (process.env.NODE_ENV !== 'production') {\n  ExclamationCircleFilled.displayName = 'ExclamationCircleFilled';\n}\nexport default /*#__PURE__*/React.forwardRef(ExclamationCircleFilled);","// 加密模式列表\r\nexport const modeList = [\r\n  \"CBC\",\r\n  \"CFB\",\r\n  \"CTR\",\r\n  \"OFB\",\r\n  \"ECB\", // 不需要 IV\r\n];\r\n\r\n// 填充模式列表\r\nexport const paddingList = [\r\n  \"Pkcs7\",\r\n  \"AnsiX923\",\r\n  \"Iso10126\",\r\n  \"Iso97971\",\r\n  \"ZeroPadding\",\r\n  \"NoPadding\",\r\n];\r\n\r\n// 输出/输入数据编码列表\r\nexport const codeList  = [\r\n  \"HEX\",\r\n  \"Base64\"\r\n];\r\n\r\n// 位数\r\nexport const capacityList = [\r\n  128,\r\n  192,\r\n  256,\r\n];","const DEFAULT_MODE_ITEM = 'aes-crypto:default-mode';\r\n\r\n// 获取默认模式\r\nexport function getDefaultMode() :string  {\r\n  const mode = localStorage.getItem(DEFAULT_MODE_ITEM);\r\n  return (mode === null)? \"CBC\" : mode;\r\n}\r\n\r\n// 设置默认模式\r\nexport function setDefaultMode(mode: string) : void  {\r\n  localStorage.setItem(DEFAULT_MODE_ITEM,mode);\r\n}\r\n\r\nconst DEFAULT_PADDING_ITEM = 'aes-crypto:default-padding';\r\n\r\n// 获取默认填充\r\nexport function getDefaultPadding() :string  {\r\n  const padding = localStorage.getItem(DEFAULT_PADDING_ITEM);\r\n  return (padding === null)? \"Pkcs7\" : padding;\r\n}\r\n\r\n// 设置默认填充\r\nexport function setDefaultPadding(padding: string) : void  {\r\n  localStorage.setItem(DEFAULT_PADDING_ITEM,padding);\r\n}\r\n\r\nconst DEFAULT_CODE_ITEM = 'aes-crypto:default-code';\r\n\r\n// 获取默认编码 HEX / Base64\r\nexport function getDefaultCode() :string  {\r\n  const code = localStorage.getItem(DEFAULT_CODE_ITEM);\r\n  return (code === null)? \"Base64\" : code;\r\n}\r\n\r\n// 设置默认编码 HEX / Base64\r\nexport function setDefaultCode(code: string) : void  {\r\n  localStorage.setItem(DEFAULT_CODE_ITEM,code);\r\n}\r\n\r\nconst DEFAULT_IV_ITEM = 'aes-crypto:default-iv';\r\n\r\n// 获取默认偏移量\r\nexport function getDefaultIV() :string  {\r\n  const iv = localStorage.getItem(DEFAULT_IV_ITEM);\r\n  return (iv === null)? \"\" : iv;\r\n}\r\n\r\n// 设置默认偏移量\r\nexport function setDefaultIV(iv: string) : void  {\r\n  localStorage.setItem(DEFAULT_IV_ITEM,iv);\r\n}\r\n\r\n\r\nconst DEFAULT_PASSPHRASE_ITEM = 'aes-crypto:default-passphrase';\r\n\r\n// 获取默认密钥\r\nexport function getDefaultPassphrase() :string  {\r\n  const passphrase = localStorage.getItem(DEFAULT_PASSPHRASE_ITEM);\r\n  return (passphrase === null)? \"\" : passphrase;\r\n}\r\n\r\n// 设置默认密钥\r\nexport function setDefaultPassphrase(passphrase: string) : void  {\r\n  localStorage.setItem(DEFAULT_PASSPHRASE_ITEM,passphrase);\r\n}\r\n\r\n// 根据输入的密钥长度生成密钥长度提示\r\nexport const genPassphraseLimitLength = (length :number) :number => {\r\n  if(length >= 30) return 32; // 都 30 位了说明需要是 32 位的密钥 (AES-256)\r\n  if(length >= 20) return 24; // 都 24 位了说明需要是 24 位的密钥 (AES-2192)\r\n  return 16; // 默认 AES-128\r\n}\r\n\r\n// 根据密钥长度生成位数\r\nexport const genCapacity = (length: number) :number => {\r\n  if(length == 24) return 192;\r\n  if(length == 32) return 256;\r\n  return 128;\r\n}\r\n\r\nimport * as CryptoJS from 'crypto-js';\r\n// import { BlockCipherMode } from 'crypto-js/';\r\n\r\n// 获取模式\r\nexport const getMode = (mode :string) => {\r\n  switch(mode) {\r\n    case \"CFB\": return CryptoJS.mode.CFB;\r\n    case \"OFB\": return CryptoJS.mode.OFB;\r\n    case \"ECB\": return CryptoJS.mode.ECB;\r\n    case \"CTR\": return CryptoJS.mode.CTR;\r\n    case \"CTRGladman\": return CryptoJS.mode.CTRGladman;\r\n  }\r\n  return CryptoJS.mode.CBC\r\n}\r\n\r\n// 获取填充\r\nexport const getPadding = (padding :string) => {\r\n  switch(padding) {\r\n    case \"AnsiX923\": return CryptoJS.pad.AnsiX923;\r\n    case \"Iso10126\": return CryptoJS.pad.Iso10126;\r\n    case \"Iso97971\": return CryptoJS.pad.Iso97971;\r\n    case \"ZeroPadding\": return CryptoJS.pad.ZeroPadding;\r\n    case \"NoPadding\": return CryptoJS.pad.NoPadding;\r\n  }\r\n  return CryptoJS.pad.Pkcs7\r\n}\r\n\r\n\r\n\r\n","import { Select, Form, Divider, Input, Space } from \"antd\";\r\nimport React,{ useState } from \"react\";\r\nimport { arrayToOptions } from \"../../lib/array\"\r\nimport { modeList, paddingList, codeList } from \"./data\";\r\nimport { getDefaultMode, setDefaultMode } from \"./lib\";\r\nimport { getDefaultPadding, setDefaultPadding } from \"./lib\";\r\nimport { getDefaultCode, setDefaultCode } from \"./lib\";\r\nimport { getDefaultIV, setDefaultIV } from \"./lib\";\r\nimport { getDefaultPassphrase, setDefaultPassphrase, genPassphraseLimitLength } from \"./lib\";\r\nimport type { InputStatus } from \"antd/es/_util/statusUtils\";\r\n\r\nconst AppStoreSetting = () => {\r\n\r\n  const [ mode, setMode ] = useState(getDefaultMode()); // 默认 mode\r\n  const [ padding, setPadding ] = useState(getDefaultPadding()); // 默认填充\r\n  const [ code, setCode ] = useState(getDefaultCode()); // 默认编码\r\n  const [ iv, setIV ] = useState(getDefaultIV()); // 默认偏移量\r\n  const [ ivStatus, setIVStatus ] = useState('' as InputStatus); // 偏移量提醒\r\n  const [ passphrase, setPassphrase ] = useState(getDefaultPassphrase()); // 默认密钥\r\n  const [ passphraseStatus, setPassphraseStatus ] = useState('' as InputStatus); // 密钥提醒\r\n  const [ passphraseLimitLength, setPassphraseLimitLength ] = useState(genPassphraseLimitLength(getDefaultPassphrase().length)); // 密钥长度要求 16 / 24 / 32 \r\n \r\n  // 偏移量 IV 输入处理\r\n  const onIVChange = (e :React.ChangeEvent<HTMLInputElement>) => {\r\n    const v = e.target.value;\r\n    setIV(v); \r\n    if(v.length === 0 || v.length == 16) { // IV长度必须为 0 \r\n      setDefaultIV(v);\r\n      setIVStatus(\"\");\r\n    } else {\r\n      setIVStatus(\"error\");\r\n    }\r\n  }\r\n\r\n  // 密钥 Passphrase 输入处理\r\n  const onPassphraseChange = (e :React.ChangeEvent<HTMLInputElement>) => {\r\n    const v = e.target.value.trim();\r\n    setPassphrase(v); \r\n    // Passphrase 长度必须为 0 / 16 (128位) / 24(192位) / 32(256位)\r\n    if(v.length === 0 || v.length == 16 || v.length == 24 || v.length == 32) {\r\n      setDefaultPassphrase(v);\r\n      setPassphraseStatus(\"\");\r\n    } else {\r\n      setPassphraseStatus(\"error\");\r\n    }\r\n    // 根据密钥长度变化需要变量密钥长度提示\r\n    setPassphraseLimitLength(genPassphraseLimitLength(v.length));\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Divider orientation=\"left\" plain>AES 加解密</Divider>\r\n      <Form.Item label=\"默认模式\">\r\n        <Select\r\n          value={ mode }\r\n          style={{ width: 240 }}\r\n          onChange={ (v :string) => { setMode(v); setDefaultMode(v); } }\r\n          options={ arrayToOptions(modeList) }\r\n        />\r\n      </Form.Item>\r\n      <Form.Item label=\"默认填充\">\r\n        <Select\r\n          value={ padding }\r\n          style={{ width: 240 }}\r\n          onChange={ (v :string) => { setPadding(v); setDefaultPadding(v); } }\r\n          options={ arrayToOptions(paddingList) }\r\n        />\r\n      </Form.Item>\r\n      <Form.Item label=\"默认编码\">\r\n        <Select\r\n          value={ code }\r\n          style={{ width: 240 }}\r\n          onChange={ (v :string) => { setCode(v); setDefaultCode(v); } }\r\n          options={ arrayToOptions(codeList) }\r\n        />\r\n      </Form.Item>\r\n      <Form.Item label=\"默认偏移量(IV)\">\r\n        <Space>\r\n          <Input \r\n            status= { ivStatus }\r\n            maxLength = { 16 }\r\n            allowClear\r\n            style={ { width: \"520px\" } }\r\n            onChange={ onIVChange }\r\n            value= { iv } />\r\n          { iv.length? iv.length + \" / 16\" : null }\r\n        </Space>\r\n      </Form.Item>\r\n      <Form.Item label=\"默认密钥\">\r\n        <Space>\r\n          <Input \r\n            status= { passphraseStatus }\r\n            maxLength= { 32 }\r\n            allowClear\r\n            style={ { width: \"520px\" } }\r\n            onChange={ onPassphraseChange }\r\n            value= { passphrase } />\r\n          { passphrase.length? passphrase.length + \" / \" + passphraseLimitLength  : null }\r\n        </Space>\r\n      </Form.Item>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default AppStoreSetting;","// 数据转成 AntD Select 支持的数据格式 { label: \"xxx\", value: \"xxx\" }\r\nexport function arrayToOptions(arr :Array<any>) :Array<{label :string,value :string}> {\r\n  return arr.map( (item ,index) => { return { label: item ,value:item} });\r\n}"],"names":["props","ref","AntdIcon","icon","modeList","paddingList","codeList","capacityList","DEFAULT_MODE_ITEM","getDefaultMode","mode","localStorage","getItem","setDefaultMode","setItem","DEFAULT_PADDING_ITEM","getDefaultPadding","padding","setDefaultPadding","DEFAULT_CODE_ITEM","getDefaultCode","code","setDefaultCode","DEFAULT_IV_ITEM","getDefaultIV","iv","setDefaultIV","DEFAULT_PASSPHRASE_ITEM","getDefaultPassphrase","passphrase","setDefaultPassphrase","genPassphraseLimitLength","length","genCapacity","getMode","getPadding","setMode","useState","setPadding","setCode","setIV","ivStatus","setIVStatus","setPassphrase","passphraseStatus","setPassphraseStatus","passphraseLimitLength","setPassphraseLimitLength","orientation","plain","label","value","style","width","onChange","v","options","status","maxLength","allowClear","e","target","trim","arrayToOptions","arr","map","item","index"],"sourceRoot":""}