{"version":3,"file":"8191.renderer.js","mappings":"+NAKIA,EAAY,CAAC,YAAa,YAAa,QAAS,UAAW,WAAY,iBAAkB,OAAQ,YA2ErG,SAtEmC,IAAAC,aAAW,SAAUC,EAAOC,GAC7D,IAAIC,EACAC,EAAmBH,EAAMI,UAC3BA,OAAiC,IAArBD,EAA8B,cAAgBA,EAC1DE,EAAYL,EAAMK,UAClBC,EAAQN,EAAMM,MACdC,EAAUP,EAAMO,QAChBC,EAAWR,EAAMQ,SACjBC,EAAwBT,EAAMU,eAC9BA,OAA2C,IAA1BD,GAA2CA,EAC5DE,EAAcX,EAAMY,KACpBA,OAAuB,IAAhBD,EAAyB,WAAaA,EAC7CE,EAAWb,EAAMa,SACjBC,GAAa,OAAyBd,EAAOF,GAC3CiB,GAAW,IAAAC,QAAO,MAClBC,GAAkB,OAAeP,EAAgB,CACjDQ,MAAOX,IAETY,GAAmB,OAAeF,EAAiB,GACnDG,EAAWD,EAAiB,GAC5BE,EAAcF,EAAiB,IACjC,IAAAG,qBAAoBrB,GAAK,WACvB,MAAO,CACLsB,MAAO,WACL,IAAIC,EACuC,QAA1CA,EAAoBT,EAASU,eAA2C,IAAtBD,GAAwCA,EAAkBD,OAC/G,EACAG,KAAM,WACJ,IAAIC,EACwC,QAA3CA,EAAqBZ,EAASU,eAA4C,IAAvBE,GAAyCA,EAAmBD,MAClH,EACAE,MAAOb,EAASU,QAEpB,IACA,IAAII,EAAc,IAAWzB,EAAWC,GAAYH,EAAc,CAAC,GAAG,OAAgBA,EAAa,GAAG4B,OAAO1B,EAAW,YAAagB,IAAW,OAAgBlB,EAAa,GAAG4B,OAAO1B,EAAW,aAAcI,GAAWN,IAsB3N,OAAoB,gBAAoB,OAAQ,CAC9CG,UAAWwB,EACXvB,MAAOA,GACO,gBAAoB,SAAS,OAAS,CAAC,EAAGQ,EAAY,CACpET,UAAW,GAAGyB,OAAO1B,EAAW,UAChCH,IAAKc,EACLF,SA3BiB,SAAsBkB,GACnCvB,IAGE,YAAaR,GACjBqB,EAAYU,EAAEC,OAAOzB,SAEvBM,SAAoDA,EAAS,CAC3DmB,QAAQ,QAAc,OAAc,CAAC,EAAGhC,GAAQ,CAAC,EAAG,CAClDY,KAAMA,EACNL,QAASwB,EAAEC,OAAOzB,UAEpB0B,gBAAiB,WACfF,EAAEE,iBACJ,EACAC,eAAgB,WACdH,EAAEG,gBACJ,EACAC,YAAaJ,EAAEI,cAEnB,EAQE3B,SAAUA,EACVD,UAAWa,EACXR,KAAMA,KACU,gBAAoB,OAAQ,CAC5CP,UAAW,GAAGyB,OAAO1B,EAAW,YAEpC,G,gGC3EA,MA0CA,EA1CsB,EAAGgC,YAAWC,OAAMC,kBAAiBC,sBAgBvD,gBAAKlC,UAAU,iBAAgB,UAC7B,SAAC,IAAK,CAACmC,MAAQJ,GAAWK,OAAM,UAC9B,iBAAKpC,UAAU,yBAAwB,WACrC,SAAC,IAAO,CAACqC,UAAU,OAAOC,MAAQ,aAAY,UAC5C,SAAC,IAAQ,CAACjC,eAAkB2B,EAAOxB,SAlBrB,KACtByB,GAAiBD,GACdA,GACDE,EAAgB,G,EAemD,qBAEjE,wBAEIH,EAAUQ,KAAKC,IAEb,eAEEC,cAAgB,KAlBV,CAACC,IACnB,MAAMC,EAAOZ,EAAUa,QAAQJ,GAAkBA,EAAKE,QAAUA,IAChER,EAAgBS,EAAK,EAgBeE,CAAYL,EAAKE,MAAM,EAC/CzC,MAAQ,CAAE6C,gBAAiBN,EAAKE,OAChCJ,MAAUE,EAAKO,OAHTP,EAAKE,iB","sources":["webpack://magic-tools/./node_modules/rc-checkbox/es/index.js","webpack://magic-tools/./src/renderer/App/Color/levitation-box.tsx"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _excluded = [\"prefixCls\", \"className\", \"style\", \"checked\", \"disabled\", \"defaultChecked\", \"type\", \"onChange\"];\nimport classNames from 'classnames';\nimport useMergedState from \"rc-util/es/hooks/useMergedState\";\nimport * as React from 'react';\nimport { forwardRef, useImperativeHandle, useRef } from 'react';\nexport var Checkbox = /*#__PURE__*/forwardRef(function (props, ref) {\n  var _classNames;\n  var _props$prefixCls = props.prefixCls,\n    prefixCls = _props$prefixCls === void 0 ? 'rc-checkbox' : _props$prefixCls,\n    className = props.className,\n    style = props.style,\n    checked = props.checked,\n    disabled = props.disabled,\n    _props$defaultChecked = props.defaultChecked,\n    defaultChecked = _props$defaultChecked === void 0 ? false : _props$defaultChecked,\n    _props$type = props.type,\n    type = _props$type === void 0 ? 'checkbox' : _props$type,\n    onChange = props.onChange,\n    inputProps = _objectWithoutProperties(props, _excluded);\n  var inputRef = useRef(null);\n  var _useMergedState = useMergedState(defaultChecked, {\n      value: checked\n    }),\n    _useMergedState2 = _slicedToArray(_useMergedState, 2),\n    rawValue = _useMergedState2[0],\n    setRawValue = _useMergedState2[1];\n  useImperativeHandle(ref, function () {\n    return {\n      focus: function focus() {\n        var _inputRef$current;\n        (_inputRef$current = inputRef.current) === null || _inputRef$current === void 0 ? void 0 : _inputRef$current.focus();\n      },\n      blur: function blur() {\n        var _inputRef$current2;\n        (_inputRef$current2 = inputRef.current) === null || _inputRef$current2 === void 0 ? void 0 : _inputRef$current2.blur();\n      },\n      input: inputRef.current\n    };\n  });\n  var classString = classNames(prefixCls, className, (_classNames = {}, _defineProperty(_classNames, \"\".concat(prefixCls, \"-checked\"), rawValue), _defineProperty(_classNames, \"\".concat(prefixCls, \"-disabled\"), disabled), _classNames));\n  var handleChange = function handleChange(e) {\n    if (disabled) {\n      return;\n    }\n    if (!('checked' in props)) {\n      setRawValue(e.target.checked);\n    }\n    onChange === null || onChange === void 0 ? void 0 : onChange({\n      target: _objectSpread(_objectSpread({}, props), {}, {\n        type: type,\n        checked: e.target.checked\n      }),\n      stopPropagation: function stopPropagation() {\n        e.stopPropagation();\n      },\n      preventDefault: function preventDefault() {\n        e.preventDefault();\n      },\n      nativeEvent: e.nativeEvent\n    });\n  };\n  return /*#__PURE__*/React.createElement(\"span\", {\n    className: classString,\n    style: style\n  }, /*#__PURE__*/React.createElement(\"input\", _extends({}, inputProps, {\n    className: \"\".concat(prefixCls, \"-input\"),\n    ref: inputRef,\n    onChange: handleChange,\n    disabled: disabled,\n    checked: !!rawValue,\n    type: type\n  })), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"\".concat(prefixCls, \"-inner\")\n  }));\n});\nexport default Checkbox;","import { Checkbox, Tooltip, Badge } from \"antd\";\nimport type { BatchPickColorProps } from \"./interface\"\n\n// 悬浮框\nconst LevitationBox = ({ colorList, flag, flagChangeEvent, colorListChange } :BatchPickColorProps ) => {\n\n  const switchBatchPick = () => {\n    flagChangeEvent(!flag);\n    if(flag) { // true => false 即关闭时,清空颜色列表\n      colorListChange([])\n    }\n  };\n\n  // 移除选择的元素\n  const removeColor = (color :string) => {\n    const list = colorList.filter((item) => { return item.color !== color});\n    colorListChange(list);\n  }\n\n  return (\n    <div className=\"levitation-box\">\n      <Badge count={ colorList?.length }>\n        <div className=\"levitation-box-content\">\n          <Tooltip placement=\"left\" title={ \"双击剔除不需要的颜色\" }>\n            <Checkbox defaultChecked= { flag } onChange={ switchBatchPick }>批量取色</Checkbox>\n          </Tooltip>\n        <ul>\n          {\n            colorList.map((item) => {\n              return (\n              <li \n                key={ item.color }\n                onDoubleClick={ () => { removeColor(item.color) } }\n                style={ { backgroundColor: item.color } } \n                title = { item.label }  \n              >\n                {/* { item.label } */}\n              </li>)\n            })\n          }\n        </ul>\n        </div>\n      </Badge>\n    </div>\n  )\n}\nexport default LevitationBox;"],"names":["_excluded","forwardRef","props","ref","_classNames","_props$prefixCls","prefixCls","className","style","checked","disabled","_props$defaultChecked","defaultChecked","_props$type","type","onChange","inputProps","inputRef","useRef","_useMergedState","value","_useMergedState2","rawValue","setRawValue","useImperativeHandle","focus","_inputRef$current","current","blur","_inputRef$current2","input","classString","concat","e","target","stopPropagation","preventDefault","nativeEvent","colorList","flag","flagChangeEvent","colorListChange","count","length","placement","title","map","item","onDoubleClick","color","list","filter","removeColor","backgroundColor","label"],"sourceRoot":""}