{"version":3,"file":"703.renderer.js","mappings":"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","sources":["webpack://magic-tools/./node_modules/antd/es/divider/style/index.js","webpack://magic-tools/./node_modules/antd/es/divider/index.js","webpack://magic-tools/./src/renderer/App/Color/color-card.tsx","webpack://magic-tools/./src/renderer/App/Color/color-pad.tsx","webpack://magic-tools/./src/renderer/App/Color/data.ts","webpack://magic-tools/./src/renderer/App/Color/index.tsx","webpack://magic-tools/./src/renderer/App/Color/levitation-box.tsx","webpack://magic-tools/./src/renderer/App/Color/lib.ts","webpack://magic-tools/./src/renderer/lib/index.ts"],"sourcesContent":["import { resetComponent } from '../../style';\nimport { genComponentStyleHook, mergeToken } from '../../theme/internal';\n// ============================== Shared ==============================\nconst genSharedDividerStyle = token => {\n  const {\n    componentCls,\n    sizePaddingEdgeHorizontal,\n    colorSplit,\n    lineWidth\n  } = token;\n  return {\n    [componentCls]: Object.assign(Object.assign({}, resetComponent(token)), {\n      borderBlockStart: `${lineWidth}px solid ${colorSplit}`,\n      // vertical\n      '&-vertical': {\n        position: 'relative',\n        top: '-0.06em',\n        display: 'inline-block',\n        height: '0.9em',\n        margin: `0 ${token.dividerVerticalGutterMargin}px`,\n        verticalAlign: 'middle',\n        borderTop: 0,\n        borderInlineStart: `${lineWidth}px solid ${colorSplit}`\n      },\n      '&-horizontal': {\n        display: 'flex',\n        clear: 'both',\n        width: '100%',\n        minWidth: '100%',\n        margin: `${token.dividerHorizontalGutterMargin}px 0`\n      },\n      [`&-horizontal${componentCls}-with-text`]: {\n        display: 'flex',\n        alignItems: 'center',\n        margin: `${token.dividerHorizontalWithTextGutterMargin}px 0`,\n        color: token.colorTextHeading,\n        fontWeight: 500,\n        fontSize: token.fontSizeLG,\n        whiteSpace: 'nowrap',\n        textAlign: 'center',\n        borderBlockStart: `0 ${colorSplit}`,\n        '&::before, &::after': {\n          position: 'relative',\n          width: '50%',\n          borderBlockStart: `${lineWidth}px solid transparent`,\n          // Chrome not accept `inherit` in `border-top`\n          borderBlockStartColor: 'inherit',\n          borderBlockEnd: 0,\n          transform: 'translateY(50%)',\n          content: \"''\"\n        }\n      },\n      [`&-horizontal${componentCls}-with-text-left`]: {\n        '&::before': {\n          width: '5%'\n        },\n        '&::after': {\n          width: '95%'\n        }\n      },\n      [`&-horizontal${componentCls}-with-text-right`]: {\n        '&::before': {\n          width: '95%'\n        },\n        '&::after': {\n          width: '5%'\n        }\n      },\n      [`${componentCls}-inner-text`]: {\n        display: 'inline-block',\n        padding: '0 1em'\n      },\n      '&-dashed': {\n        background: 'none',\n        borderColor: colorSplit,\n        borderStyle: 'dashed',\n        borderWidth: `${lineWidth}px 0 0`\n      },\n      [`&-horizontal${componentCls}-with-text${componentCls}-dashed`]: {\n        '&::before, &::after': {\n          borderStyle: 'dashed none none'\n        }\n      },\n      [`&-vertical${componentCls}-dashed`]: {\n        borderInlineStartWidth: lineWidth,\n        borderInlineEnd: 0,\n        borderBlockStart: 0,\n        borderBlockEnd: 0\n      },\n      [`&-plain${componentCls}-with-text`]: {\n        color: token.colorText,\n        fontWeight: 'normal',\n        fontSize: token.fontSize\n      },\n      [`&-horizontal${componentCls}-with-text-left${componentCls}-no-default-orientation-margin-left`]: {\n        '&::before': {\n          width: 0\n        },\n        '&::after': {\n          width: '100%'\n        },\n        [`${componentCls}-inner-text`]: {\n          paddingInlineStart: sizePaddingEdgeHorizontal\n        }\n      },\n      [`&-horizontal${componentCls}-with-text-right${componentCls}-no-default-orientation-margin-right`]: {\n        '&::before': {\n          width: '100%'\n        },\n        '&::after': {\n          width: 0\n        },\n        [`${componentCls}-inner-text`]: {\n          paddingInlineEnd: sizePaddingEdgeHorizontal\n        }\n      }\n    })\n  };\n};\n// ============================== Export ==============================\nexport default genComponentStyleHook('Divider', token => {\n  const dividerToken = mergeToken(token, {\n    dividerVerticalGutterMargin: token.marginXS,\n    dividerHorizontalWithTextGutterMargin: token.margin,\n    dividerHorizontalGutterMargin: token.marginLG\n  });\n  return [genSharedDividerStyle(dividerToken)];\n}, {\n  sizePaddingEdgeHorizontal: 0\n});","var __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { ConfigContext } from '../config-provider';\nimport warning from '../_util/warning';\nimport useStyle from './style';\nconst Divider = props => {\n  const {\n    getPrefixCls,\n    direction\n  } = React.useContext(ConfigContext);\n  const {\n      prefixCls: customizePrefixCls,\n      type = 'horizontal',\n      orientation = 'center',\n      orientationMargin,\n      className,\n      rootClassName,\n      children,\n      dashed,\n      plain\n    } = props,\n    restProps = __rest(props, [\"prefixCls\", \"type\", \"orientation\", \"orientationMargin\", \"className\", \"rootClassName\", \"children\", \"dashed\", \"plain\"]);\n  const prefixCls = getPrefixCls('divider', customizePrefixCls);\n  const [wrapSSR, hashId] = useStyle(prefixCls);\n  const orientationPrefix = orientation.length > 0 ? `-${orientation}` : orientation;\n  const hasChildren = !!children;\n  const hasCustomMarginLeft = orientation === 'left' && orientationMargin != null;\n  const hasCustomMarginRight = orientation === 'right' && orientationMargin != null;\n  const classString = classNames(prefixCls, hashId, `${prefixCls}-${type}`, {\n    [`${prefixCls}-with-text`]: hasChildren,\n    [`${prefixCls}-with-text${orientationPrefix}`]: hasChildren,\n    [`${prefixCls}-dashed`]: !!dashed,\n    [`${prefixCls}-plain`]: !!plain,\n    [`${prefixCls}-rtl`]: direction === 'rtl',\n    [`${prefixCls}-no-default-orientation-margin-left`]: hasCustomMarginLeft,\n    [`${prefixCls}-no-default-orientation-margin-right`]: hasCustomMarginRight\n  }, className, rootClassName);\n  const innerStyle = Object.assign(Object.assign({}, hasCustomMarginLeft && {\n    marginLeft: orientationMargin\n  }), hasCustomMarginRight && {\n    marginRight: orientationMargin\n  });\n  // Warning children not work in vertical mode\n  if (process.env.NODE_ENV !== 'production') {\n    process.env.NODE_ENV !== \"production\" ? warning(!children || type !== 'vertical', 'Divider', '`children` not working in `vertical` mode.') : void 0;\n  }\n  return wrapSSR( /*#__PURE__*/React.createElement(\"div\", Object.assign({\n    className: classString\n  }, restProps, {\n    role: \"separator\"\n  }), children && type !== 'vertical' && /*#__PURE__*/React.createElement(\"span\", {\n    className: `${prefixCls}-inner-text`,\n    style: innerStyle\n  }, children)));\n};\nif (process.env.NODE_ENV !== 'production') {\n  Divider.displayName = 'Divider';\n}\nexport default Divider;","import type { ColorCardProps } from \"./interface\"\nimport { calcComplementaryColor } from \"./lib\"\n\n// 颜色卡\nconst ColorCard = ({ color, label, title, colorClickEvent } :ColorCardProps ) => {\n  \n  return (\n    <div \n      onClick={ () => { colorClickEvent(color,label) } }\n      className='color-card' \n      title={ title? title : label } \n      style={ { backgroundColor: color } }\n      //style={ { backgroundColor: color, color: calcComplementaryColor(color) } }\n    >\n      { (label.length <= 10)? label : label.substring(0,8) + \"..\"} \n      ( {color} )\n    </div>\n  );\n}\nexport default ColorCard;","import { Divider } from \"antd\";\r\nimport { default as ColorCard } from \"./color-card\"\r\nimport type { ColorPadProps } from \"./interface\"\r\n\r\nconst ColorPad = ({ colorList, height, colorClickEvent } :ColorPadProps ) => {\r\n\r\n  return (\r\n    <div className=\"color-pad\" style={ { height: height} }>\r\n    {\r\n      colorList?.map( (item,index) => {\r\n        // 如果代码为空 说明需要插入一个分割行\r\n        if(item.code == \"\") {\r\n          return (\r\n            <Divider key={ item.label + index } orientation=\"left\" plain>{ item.label }</Divider>\r\n          );\r\n        } else {\r\n          return (\r\n            <ColorCard key={ item.code + index } color={ item.code } label={ item.label } colorClickEvent={ colorClickEvent } />\r\n          );\r\n        }\r\n      })\r\n    }\r\n    </div>\r\n  );\r\n}\r\nexport default ColorPad;","// 颜色类型列表\r\nconst colorTypeList = [\r\n  { label: '#HEX', value: 'HEX1' },\r\n  { label: 'HEX', value: 'HEX' },\r\n  { label: 'RGB', value: 'RGB' },\r\n  { label: 'RGBA', value: 'RGBA' },\r\n\r\n  { label: 'HSL', value: 'HSL' },\r\n  { label: 'HSLA', value: 'HSLA' },\r\n  { label: 'CMYK', value: 'CMYK' },\r\n  \r\n  { label: 'HSV', value: 'HSV' },\r\n  { label: 'LAB', value: 'LAB' },\r\n  { label: 'LCH', value: 'LCH' },\r\n  { label: 'XYZ', value: 'XYZ' },\r\n\r\n  { label: '颜色名称', value: 'TEXT' },\r\n];\r\n\r\nimport { \r\n  ChinesePainting, \r\n  ChineseTraditional, \r\n  JapaneseColor,\r\n  RalClassic,\r\n  CSSColor, \r\n} from \"./data/index\"\r\n\r\n// 颜色数据\r\nconst colorDataList = [\r\n  {\r\n    key: 'chinese-traditional',\r\n    label: `中国传统色彩`,\r\n    data: ChineseTraditional\r\n  },\r\n  {\r\n    key: 'chinese-painting',\r\n    label: `国画常用色彩`,\r\n    data: ChinesePainting\r\n  },\r\n  {\r\n    key: 'japanese-color',\r\n    label: `日式配色`,\r\n    data: JapaneseColor\r\n  },\r\n  {\r\n    key: 'ral-classic',\r\n    label: `Ral Classic`,\r\n    data: RalClassic\r\n  },\r\n  {\r\n    key: 'css-color',\r\n    label: `CSS颜色表`,\r\n    data: CSSColor\r\n  },\r\n];\r\n\r\nexport { colorTypeList, colorDataList };","import { Tabs, message, Radio, Tooltip, Slider, Space, Badge } from \"antd\";\nimport { default as ColorPad } from \"./color-pad\"\nimport { default as LevitationBox } from \"./levitation-box\"\nimport { useState } from \"react\";\nimport type { RadioChangeEvent } from 'antd';\nimport { copyTextToClipboard, debounce } from \"../../lib\";\nimport { getColorString, pickColorTypeList,} from \"./lib\";\nimport { getDefaultColorPad, getDefaultBatchSwitch, getDefaultOpacity, getDefaultPickMax } from \"./lib\";\nimport \"./color.css\"\nimport { colorDataList } from \"./data\"\nimport type { PickColorEntity } from \"./interface\"\n\nconst Color = () => {\n  // 颜色板的调度,窗口调整,颜色板高度也需要调整\n  const genColorPadHeight = () => {\n    return (window.innerHeight - 180) + \"px\";\n  };\n\n  const [ notice, contextHolder ] = message.useMessage(); // 消息提醒\n  const [ height, setHeight ] = useState(genColorPadHeight()); // 颜色板高度\n  const [ colorType, setColorType ] = useState('HEX1'); // 选中择颜色类型\n  const [ opacityDisabled, setOpacityDisabled ] = useState(true); // 不透明度不可用 开启/关闭透明度选择器 \n  const [ opacity, setOpacity ] = useState(getDefaultOpacity()); // // 不透明度\n  const [ typeList, setTypeList ] = useState(pickColorTypeList()); // 颜色类型列表\n  const [ batchPickFlag, setBatchPickFlag ] = useState(getDefaultBatchSwitch()); // 是否开启批量取色\n  const [ pickColorList, setPickColorList ] = useState(Array<PickColorEntity>); // 批量取色列表\n  const [ colorPad, setColorPad ] = useState(getDefaultColorPad()); // 默认显示的颜色板\n\n  const pickMax = getDefaultPickMax();\n\n  // 窗体大小发生变化,改变窗口大小\n  window.addEventListener('resize',\n    debounce(() => {\n      // 改变色板展示高度\n      setHeight(genColorPadHeight()) \n      // 改变转换颜色类型 ( 为了美观 小窗口不展示那么多)\n      setTypeList(pickColorTypeList())\n    },100)\n  );\n  \n  // 切换颜色板 \n  const onTabChange = (key: string) => {\n    setColorPad(key);\n  };\n\n  const onColorTypeChange = ({ target: { value } }: RadioChangeEvent) => {\n    setOpacityDisabled( !(value == \"RGBA\" || value == \"HSLA\" )); // 需要展示不透明度\n    setColorType(value);\n    // 如果开启了批量取色,需要粘贴板需要生成新的格式\n    if (batchPickFlag) {\n      updateClipboard(pickColorList, value);\n    }\n  };\n\n  const onOpacityChange = (value :number) => {\n    setOpacity(value);\n  }\n\n  const cardClick = (color :string , label :string) => {\n    // 开启了批量取色\n    if(batchPickFlag) {\n      // 把颜色存入列表中\n      addPickColor({color: color,label:label});\n    } else {\n      copyTextToClipboard(getColorString(color, label, colorType, opacity ));\n      notice.success(\"复制到粘贴板成功！！！\");\n    }\n  };\n\n  const addPickColor = ({color,label} :PickColorEntity) => {\n    // 判断颜色是否已存在列表中,存在不做处理\n    if( pickColorList.findIndex((item: PickColorEntity) => item.color === color) >= 0) {\n      return ;\n    }\n    // 列表大于  pickMax 个时, `shift` 出第一个数据\n    if(pickColorList.length >= pickMax) pickColorList.shift();\n    updatePickColorList([...pickColorList,{color,label}]);\n  }\n\n  // 更新粘贴板的数据const UICard = (color: string, label: string, colorType: string, opa: number) => {  // 创建一个 \n  const updateClipboard = (list: Array<PickColorEntity>,colorType :string) => {\n    // 更新粘贴板\n    const arr :Array<string> = [];\n    list.forEach((item: PickColorEntity) => {\n      arr.push(getColorString(item.color, item.label, colorType, opacity));\n    });\n    copyTextToClipboard(arr.toString());\n  }\n\n  // 更新选中的颜色列表并更新粘贴板\n  const updatePickColorList = (list: Array<PickColorEntity>) => {\n    // 更新列表\n    setPickColorList(list);\n    // 把批量选中的颜色写入到粘贴板中\n    updateClipboard(list,colorType);\n  }\n\n  // 生成颜色板\n  const items = colorDataList.map ((item) => {\n    return {\n      key : item.key,\n      label : item.label,\n      children: <ColorPad colorList={ item.data } height = { height } colorClickEvent={ cardClick } />,\n    }\n  });\n\n  return (\n    <>\n    { contextHolder }\n    <Space>\n      <Tooltip placement=\"top\" title={ \"单击色块复制到粘贴板的内容\" }>\n        <Radio.Group \n          optionType = \"button\" buttonStyle=\"solid\"\n          options = { typeList } \n          onChange={ onColorTypeChange } \n          value={ colorType } \n        />\n      </Tooltip>\n      &nbsp;Opacity:&nbsp;{ ( opacity / 10 ) }\n      <div style={ { width: \"120px\"} }>\n      <Slider\n        tooltip={{ formatter: null }} \n        disabled = { opacityDisabled }\n        min={0}\n        max={10}\n        value = { opacity }\n        onChange={ onOpacityChange }\n      />\n      </div>\n    </Space>\n    <Tabs activeKey={ colorPad } items={ items } onChange={ onTabChange } />\n    {/* 悬浮框 */}\n    <LevitationBox colorList={ pickColorList } flag={ batchPickFlag } flagChangeEvent={ setBatchPickFlag } colorListChange={ updatePickColorList } />\n    </>\n  );\n}\n\nexport default Color;","import { Checkbox, Tooltip, Badge } from \"antd\";\nimport type { BatchPickColorProps } from \"./interface\"\n\n// 悬浮框\nconst LevitationBox = ({ colorList, flag, flagChangeEvent, colorListChange } :BatchPickColorProps ) => {\n\n  const switchBatchPick = () => {\n    flagChangeEvent(!flag);\n    if(flag) { // true => false 即关闭时,清空颜色列表\n      colorListChange([])\n    }\n  };\n\n  // 移除选择的元素\n  const removeColor = (color :string) => {\n    const list = colorList.filter((item) => { return item.color !== color});\n    colorListChange(list);\n  }\n\n  return (\n    <div className=\"levitation-box\">\n      <Badge count={ colorList?.length }>\n        <div className=\"levitation-box-content\">\n          <Tooltip placement=\"left\" title={ \"双击剔除不需要的颜色\" }>\n            <Checkbox defaultChecked= { flag } onChange={ switchBatchPick }>批量取色</Checkbox>\n          </Tooltip>\n        <ul>\n          {\n            colorList.map((item) => {\n              return (\n              <li \n                key={ item.color }\n                onDoubleClick={ () => { removeColor(item.color) } }\n                style={ { backgroundColor: item.color } } \n                title = { item.label }  \n              >\n                {/* { item.label } */}\n              </li>)\n            })\n          }\n        </ul>\n        </div>\n      </Badge>\n    </div>\n  )\n}\nexport default LevitationBox;","import { hex, rgb } from \"color-convert\"\nimport { colorTypeList } from \"./data\"\n\n// 获取 传入的 hex 的互补色的 hex #FF0000 => #00FFFF\nexport const calcComplementaryColor = (color: string) :string => {\n  color = color.replace(\"#\",\"\").trim();\n  const colorRGB = hex.rgb(color);\n\n  return \"#\" + rgb.hex([255 - colorRGB[0],255 - colorRGB[1],255 - colorRGB[2]]);\n}\n\n// 获取要写入到粘贴板的数据\nconst getColorString = (color :string,label :string,colorType :string, opacity :number) :string => {\n  switch(colorType) {\n    case 'TEXT': \n      return label;\n    case 'HEX': \n      return color.replace(\"#\",\"\");\n    case 'RGB': \n      const rgb = hex.rgb(color.replace(\"#\",\"\"));\n      return `rgb(${rgb[0]}, ${rgb[1]}, ${rgb[2]})`;\n    case 'RGBA': \n      const rgba = hex.rgb(color.replace(\"#\",\"\"));\n      return `rgba(${rgba[0]}, ${rgba[1]}, ${rgba[2]}, ${ opacity / 10 })`;\n    case 'HSL': \n      const hsl = hex.hsl(color.replace(\"#\",\"\"));\n      return `hsl(${hsl[0]}, ${hsl[1]}, ${hsl[2]})`;\n    case 'HSLA': \n      const hsla = hex.hsl(color.replace(\"#\",\"\"));\n      return `hsla(${hsla[0]}, ${hsla[1]}, ${hsla[2]}, ${ opacity / 10 })`;\n    case 'HSV': \n      const hsv = hex.hsv(color.replace(\"#\",\"\"));\n      return `hsv(${hsv[0]}, ${hsv[1]}, ${hsv[2]})`;\n    case 'CMYK': \n      const cmyk = hex.cmyk(color.replace(\"#\",\"\"));\n      return `cmyk(${cmyk[0]}, ${cmyk[1]}, ${cmyk[2]}, ${cmyk[3]})`;\n    case 'LAB': \n      const lab = hex.lab(color.replace(\"#\",\"\"));\n      return `lab(${lab[0]}, ${lab[1]}, ${lab[2]})`;\n    case 'LCH': \n      const lch = hex.lch(color.replace(\"#\",\"\"));\n      return `lch(${lch[0]}, ${lch[1]}, ${lch[2]})`;\n    case 'XYZ': \n      const xyz = hex.xyz(color.replace(\"#\",\"\"));\n      return `xyz(${xyz[0]}, ${xyz[1]}, ${xyz[2]})`;\n  }\n  return color;\n};\n\n// 选择颜色类型, 为了展示美观 小窗口不展示那么多颜色类型\nconst pickColorTypeList = () => {\n  //return colorTypeList;\n  // 缩放卡顿，先注释\n  if (window.innerWidth > 1200) return colorTypeList;\n  const a = colorTypeList.filter((v) => {\n    if(v.label == 'LAB' || v.label == 'LCH' || v.label == 'XYZ' || v.label == 'HSV') return false\n    return true;\n  });\n  return a;\n}\n\nconst DEFAULT_COLORPAD_ITEM = 'color:default-color-pad';\n\n// 获取默认显示的颜色板\nexport function getDefaultColorPad() :string  {\n  const defaultColorPad = localStorage.getItem(DEFAULT_COLORPAD_ITEM);\n  // 如果没有设置默认展示的颜色板，默认显示 chinese-traditional\n  return (defaultColorPad === null)? \"chinese-traditional\" : defaultColorPad;\n}\n\n// 设置默认显示的颜色板\nexport function setDefaultColorPad(pad: string) : void  {\n  localStorage.setItem(DEFAULT_COLORPAD_ITEM,pad);\n}\n\nconst DEFAULT_BATCHSWITCH_ITEM = 'color:default-batch-switch';\n\n// 获取是否默认打开批量取色\nexport function getDefaultBatchSwitch() :boolean  {\n  const flag = localStorage.getItem(DEFAULT_BATCHSWITCH_ITEM);\n  // 如果没有设置是否默认打开批量取色，默认 false\n  let a = (flag === null)? false : flag === \"true\";\n  return a;\n}\n\n// 设置是否默认打开批量取色\nexport function setDefaultBatchSwitch(flag: boolean) : void  {\n  localStorage.setItem(DEFAULT_BATCHSWITCH_ITEM, flag.toString());\n}\n\nconst DEFAULT_OPACITY_ITEM = 'color:default-opacity';\n\n// 获取默认不透明度\nexport function getDefaultOpacity() :number {\n  const opacity = localStorage.getItem(DEFAULT_OPACITY_ITEM);\n  // 如果没有设置默认不透明度，默认 0.9\n  if (null === opacity) return 9;\n  let num = parseInt(opacity);\n  if(num > 10 || num < 0) return 9;\n  return num;\n}\n\n// 设置默认不透明度\nexport function setDefaultOpacity(opacity :number) : void  {\n  localStorage.setItem(DEFAULT_OPACITY_ITEM, opacity.toString());\n}\n\nconst DEFAULT_PICK_MAX_ITEM = 'color:pick-max';\n\n// 获取默认最大取色个数\nexport function getDefaultPickMax() :number {\n  const max = localStorage.getItem(DEFAULT_PICK_MAX_ITEM);\n  // 如果没有设置默最大取色个数，默认 10\n  if (null === max) return 10;\n  let num = parseInt(max);\n  if(num > 20 || num < 5) return 10;\n  return num;\n}\n\n// 设置默认最大取色个数\nexport function setDefaultPickMax(max :number) : void  {\n  localStorage.setItem(DEFAULT_PICK_MAX_ITEM, max.toString());\n}\n\nexport {\n  getColorString,\n  pickColorTypeList\n}","// 复制到粘贴板\r\nexport async function copyTextToClipboard(text: string) {\r\n  if (\"clipboard\" in navigator) {\r\n    return await navigator.clipboard.writeText(text);\r\n  } else {\r\n    return document.execCommand('copy', true, text);\r\n  }\r\n}\r\n\r\n// 防抖函数\r\nexport function debounce(operate:Function, delay:number) {\r\n  let time :any = null\r\n  let timer :any = null\r\n  let newTime = null\r\n  function task() {\r\n    newTime =+ new Date()\r\n    if(newTime - time < delay) {\r\n      timer = setTimeout(task, delay)\r\n    } else {\r\n      operate()\r\n      timer = null\r\n    }\r\n    time = newTime\r\n  }\r\n  return function () {\r\n    // 更新时间戳\r\n    time =+ new Date();\r\n    if(!timer) {\r\n      timer = setTimeout(task, delay)\r\n    }\r\n  }\r\n}\r\n\r\n// 每间隔多少字符插入指定了符\r\nexport function insertIntervalString(str :string, disNum :number = 4, insertStr:string  = \" \") {\r\n  return str.replace(new RegExp(\"(.{\" + disNum + \"})\", \"g\"), \"$1\" + insertStr);\r\n}\r\n"],"names":["genSharedDividerStyle","token","componentCls","sizePaddingEdgeHorizontal","colorSplit","lineWidth","Object","assign","borderBlockStart","position","top","display","height","margin","dividerVerticalGutterMargin","verticalAlign","borderTop","borderInlineStart","clear","width","minWidth","dividerHorizontalGutterMargin","alignItems","dividerHorizontalWithTextGutterMargin","color","colorTextHeading","fontWeight","fontSize","fontSizeLG","whiteSpace","textAlign","borderBlockStartColor","borderBlockEnd","transform","content","padding","background","borderColor","borderStyle","borderWidth","borderInlineStartWidth","borderInlineEnd","colorText","paddingInlineStart","paddingInlineEnd","genComponentStyleHook","dividerToken","marginXS","marginLG","__rest","s","e","t","p","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","i","length","propertyIsEnumerable","props","getPrefixCls","direction","prefixCls","customizePrefixCls","type","orientation","orientationMargin","className","rootClassName","children","dashed","plain","restProps","wrapSSR","hashId","orientationPrefix","hasChildren","hasCustomMarginLeft","hasCustomMarginRight","classString","innerStyle","marginLeft","marginRight","role","style","label","title","colorClickEvent","onClick","backgroundColor","substring","colorList","map","item","index","code","colorTypeList","value","colorDataList","key","data","ChineseTraditional","ChinesePainting","JapaneseColor","RalClassic","CSSColor","genColorPadHeight","window","innerHeight","notice","contextHolder","setHeight","useState","colorType","setColorType","opacityDisabled","setOpacityDisabled","opacity","setOpacity","getDefaultOpacity","typeList","setTypeList","pickColorTypeList","batchPickFlag","setBatchPickFlag","getDefaultBatchSwitch","pickColorList","setPickColorList","colorPad","setColorPad","getDefaultColorPad","pickMax","getDefaultPickMax","addEventListener","cardClick","addPickColor","getColorString","success","findIndex","shift","updatePickColorList","updateClipboard","list","arr","forEach","push","toString","items","placement","optionType","buttonStyle","options","onChange","target","tooltip","formatter","disabled","min","max","activeKey","flag","flagChangeEvent","colorListChange","count","defaultChecked","onDoubleClick","filter","removeColor","calcComplementaryColor","replace","trim","colorRGB","hex","rgb","rgba","hsl","hsla","hsv","cmyk","lab","lch","xyz","innerWidth","v","DEFAULT_COLORPAD_ITEM","defaultColorPad","localStorage","getItem","setDefaultColorPad","pad","setItem","DEFAULT_BATCHSWITCH_ITEM","setDefaultBatchSwitch","DEFAULT_OPACITY_ITEM","num","parseInt","setDefaultOpacity","DEFAULT_PICK_MAX_ITEM","setDefaultPickMax","async","copyTextToClipboard","text","navigator","clipboard","writeText","document","execCommand","debounce","operate","delay","time","timer","newTime","task","Date","setTimeout","insertIntervalString","str","disNum","insertStr","RegExp"],"sourceRoot":""}