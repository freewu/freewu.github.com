{"version":3,"file":"8417.renderer.js","mappings":"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","sources":["webpack://magic-tools/./src/renderer/App/DESCrypto/data.ts","webpack://magic-tools/./src/renderer/App/DESCrypto/lib.ts","webpack://magic-tools/./src/renderer/App/DESCrypto/setting.tsx","webpack://magic-tools/./src/renderer/lib/array.ts"],"sourcesContent":["// 加密模式列表\nexport const modeList = [\n  \"CBC\",\n  \"CFB\",\n  \"CTR\",\n  \"OFB\",\n  \"ECB\", // 不需要 IV\n];\n\n// 填充模式列表\nexport const paddingList = [\n  \"Pkcs7\",\n  \"AnsiX923\",\n  \"Iso10126\",\n  \"Iso97971\",\n  \"ZeroPadding\",\n  // \"NoPadding\",\n];\n\n// 输出/输入数据编码列表\nexport const codeList  = [\n  \"HEX\",\n  \"Base64\"\n];\n","const DEFAULT_MODE_ITEM = 'des-crypto:default-mode';\n\n// 获取默认模式\nexport function getDefaultMode() :string  {\n  const mode = localStorage.getItem(DEFAULT_MODE_ITEM);\n  return (mode === null)? \"CBC\" : mode;\n}\n\n// 设置默认模式\nexport function setDefaultMode(mode: string) : void  {\n  localStorage.setItem(DEFAULT_MODE_ITEM,mode);\n}\n\nconst DEFAULT_PADDING_ITEM = 'des-crypto:default-padding';\n\n// 获取默认填充\nexport function getDefaultPadding() :string  {\n  const padding = localStorage.getItem(DEFAULT_PADDING_ITEM);\n  return (padding === null)? \"Pkcs7\" : padding;\n}\n\n// 设置默认填充\nexport function setDefaultPadding(padding: string) : void  {\n  localStorage.setItem(DEFAULT_PADDING_ITEM,padding);\n}\n\nconst DEFAULT_CODE_ITEM = 'des-crypto:default-code';\n\n// 获取默认编码 HEX / Base64\nexport function getDefaultCode() :string  {\n  const code = localStorage.getItem(DEFAULT_CODE_ITEM);\n  return (code === null)? \"Base64\" : code;\n}\n\n// 设置默认编码 HEX / Base64\nexport function setDefaultCode(code: string) : void  {\n  localStorage.setItem(DEFAULT_CODE_ITEM,code);\n}\n\nconst DEFAULT_IV_ITEM = 'des-crypto:default-iv';\n\n// 获取默认偏移量\nexport function getDefaultIV() :string  {\n  const iv = localStorage.getItem(DEFAULT_IV_ITEM);\n  return (iv === null)? \"\" : iv;\n}\n\n// 设置默认偏移量\nexport function setDefaultIV(iv: string) : void  {\n  localStorage.setItem(DEFAULT_IV_ITEM,iv);\n}\n\n\nconst DEFAULT_PASSPHRASE_ITEM = 'des-crypto:default-passphrase';\n\n// 获取默认密钥\nexport function getDefaultPassphrase() :string  {\n  const passphrase = localStorage.getItem(DEFAULT_PASSPHRASE_ITEM);\n  return (passphrase === null)? \"\" : passphrase;\n}\n\n// 设置默认密钥\nexport function setDefaultPassphrase(passphrase: string) : void  {\n  localStorage.setItem(DEFAULT_PASSPHRASE_ITEM,passphrase);\n}\n\n// 根据输入的密钥长度生成密钥长度提示\nexport const genPassphraseLimitLength = (length :number) :number => {\n  return 8; // DES 密钥长度 8位\n}\n\n\nimport * as CryptoJS from 'crypto-js';\n// import { BlockCipherMode } from 'crypto-js/';\n\n// 获取模式\nexport const getMode = (mode :string) => {\n  switch(mode) {\n    case \"CFB\": return CryptoJS.mode.CFB;\n    case \"OFB\": return CryptoJS.mode.OFB;\n    case \"ECB\": return CryptoJS.mode.ECB;\n    case \"CTR\": return CryptoJS.mode.CTR;\n    case \"CTRGladman\": return CryptoJS.mode.CTRGladman;\n  }\n  return CryptoJS.mode.CBC\n}\n\n// 获取填充\nexport const getPadding = (padding :string) => {\n  switch(padding) {\n    case \"AnsiX923\": return CryptoJS.pad.AnsiX923;\n    case \"Iso10126\": return CryptoJS.pad.Iso10126;\n    case \"Iso97971\": return CryptoJS.pad.Iso97971;\n    case \"ZeroPadding\": return CryptoJS.pad.ZeroPadding;\n    case \"NoPadding\": return CryptoJS.pad.NoPadding;\n  }\n  return CryptoJS.pad.Pkcs7\n}\n\n\n\n","import { Select, Form, Divider, Input, Space } from \"antd\";\nimport React,{ useState } from \"react\";\nimport { arrayToOptions } from \"../../lib/array\"\nimport { modeList, paddingList, codeList } from \"./data\";\nimport { getDefaultMode, setDefaultMode } from \"./lib\";\nimport { getDefaultPadding, setDefaultPadding } from \"./lib\";\nimport { getDefaultCode, setDefaultCode } from \"./lib\";\nimport { getDefaultIV, setDefaultIV } from \"./lib\";\nimport { getDefaultPassphrase, setDefaultPassphrase, genPassphraseLimitLength } from \"./lib\";\nimport type { InputStatus } from \"antd/es/_util/statusUtils\";\n\nexport const DESCryptoSetting = () => {\n\n  const [ mode, setMode ] = useState(getDefaultMode()); // 默认 mode\n  const [ padding, setPadding ] = useState(getDefaultPadding()); // 默认填充\n  const [ code, setCode ] = useState(getDefaultCode()); // 默认编码\n  const [ iv, setIV ] = useState(getDefaultIV()); // 默认偏移量\n  const [ ivStatus, setIVStatus ] = useState('' as InputStatus); // 偏移量提醒\n  const [ passphrase, setPassphrase ] = useState(getDefaultPassphrase()); // 默认密钥\n  const [ passphraseStatus, setPassphraseStatus ] = useState('' as InputStatus); // 密钥提醒\n  const [ passphraseLimitLength, setPassphraseLimitLength ] = useState(genPassphraseLimitLength(getDefaultPassphrase().length)); // 密钥长度要求 16 / 24 / 32 \n \n  // 偏移量 IV 输入处理\n  const onIVChange = (e :React.ChangeEvent<HTMLInputElement>) => {\n    const v = e.target.value;\n    setIV(v); \n    if(v.length === 0 || v.length == 8) { // IV长度必须为 0 \n      setDefaultIV(v);\n      setIVStatus(\"\");\n    } else {\n      setIVStatus(\"error\");\n    }\n  }\n\n  // 密钥 Passphrase 输入处理\n  const onPassphraseChange = (e :React.ChangeEvent<HTMLInputElement>) => {\n    const v = e.target.value.trim();\n    setPassphrase(v); \n    // Passphrase 长度必须为 0 / 8\n    if(v.length === 0 || v.length == 8) {\n      setDefaultPassphrase(v);\n      setPassphraseStatus(\"\");\n    } else {\n      setPassphraseStatus(\"error\");\n    }\n    // 根据密钥长度变化需要变量密钥长度提示\n    setPassphraseLimitLength(genPassphraseLimitLength(v.length));\n  }\n\n  return (\n    <>\n      <Divider orientation=\"left\" plain>DES 加解密</Divider>\n      <Form.Item label=\"默认模式\">\n        <Select\n          value={ mode }\n          style={{ width: 240 }}\n          onChange={ (v :string) => { setMode(v); setDefaultMode(v); } }\n          options={ arrayToOptions(modeList) }\n        />\n      </Form.Item>\n      <Form.Item label=\"默认填充\">\n        <Select\n          value={ padding }\n          style={{ width: 240 }}\n          onChange={ (v :string) => { setPadding(v); setDefaultPadding(v); } }\n          options={ arrayToOptions(paddingList) }\n        />\n      </Form.Item>\n      <Form.Item label=\"默认编码\">\n        <Select\n          value={ code }\n          style={{ width: 240 }}\n          onChange={ (v :string) => { setCode(v); setDefaultCode(v); } }\n          options={ arrayToOptions(codeList) }\n        />\n      </Form.Item>\n      <Form.Item label=\"默认偏移量(IV)\">\n        <Space>\n          <Input \n            status= { ivStatus }\n            maxLength = { 8 }\n            allowClear\n            style={ { width: \"520px\" } }\n            onChange={ onIVChange }\n            value= { iv } />\n          { iv.length? iv.length + \" / 8\" : null }\n        </Space>\n      </Form.Item>\n      <Form.Item label=\"默认密钥\">\n        <Space>\n          <Input \n            status= { passphraseStatus }\n            maxLength= { 8 }\n            allowClear\n            style={ { width: \"520px\" } }\n            onChange={ onPassphraseChange }\n            value= { passphrase } />\n          { passphrase.length? passphrase.length + \" / \" + 8  : null }\n        </Space>\n      </Form.Item>\n    </>\n  );\n}\n\nexport default DESCryptoSetting;","// 数据转成 AntD Select 支持的数据格式 { label: \"xxx\", value: \"xxx\" }\r\nexport function arrayToOptions(arr :Array<any>) :Array<{label :string,value :string}> {\r\n  return arr.map( (item ,index) => { return { label: item ,value:item} });\r\n}"],"names":["modeList","paddingList","codeList","DEFAULT_MODE_ITEM","getDefaultMode","mode","localStorage","getItem","setDefaultMode","setItem","DEFAULT_PADDING_ITEM","getDefaultPadding","padding","setDefaultPadding","DEFAULT_CODE_ITEM","getDefaultCode","code","setDefaultCode","DEFAULT_IV_ITEM","getDefaultIV","iv","setDefaultIV","DEFAULT_PASSPHRASE_ITEM","getDefaultPassphrase","passphrase","setDefaultPassphrase","genPassphraseLimitLength","length","getMode","getPadding","DESCryptoSetting","setMode","useState","setPadding","setCode","setIV","ivStatus","setIVStatus","setPassphrase","passphraseStatus","setPassphraseStatus","passphraseLimitLength","setPassphraseLimitLength","orientation","plain","label","value","style","width","onChange","v","options","status","maxLength","allowClear","e","target","trim","arrayToOptions","arr","map","item","index"],"sourceRoot":""}