{"version":3,"file":"7732.renderer.js","mappings":"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","sources":["webpack://magic-tools/./node_modules/antd/es/col/index.js","webpack://magic-tools/./node_modules/antd/es/locale/useLocale.js","webpack://magic-tools/./node_modules/antd/es/row/index.js","webpack://magic-tools/./node_modules/rc-checkbox/es/index.js","webpack://magic-tools/./src/renderer/App/ByteConvert/data.ts","webpack://magic-tools/./src/renderer/App/ByteConvert/index.tsx","webpack://magic-tools/./src/renderer/App/ByteConvert/lib.ts","webpack://magic-tools/./src/renderer/lib/index.ts"],"sourcesContent":["import { Col } from '../grid';\nexport default Col;","import * as React from 'react';\nimport LocaleContext from './context';\nimport defaultLocaleData from './en_US';\nconst useLocale = (componentName, defaultLocale) => {\n  const fullLocale = React.useContext(LocaleContext);\n  const getLocale = React.useMemo(() => {\n    var _a;\n    const locale = defaultLocale || defaultLocaleData[componentName];\n    const localeFromContext = (_a = fullLocale === null || fullLocale === void 0 ? void 0 : fullLocale[componentName]) !== null && _a !== void 0 ? _a : {};\n    return Object.assign(Object.assign({}, typeof locale === 'function' ? locale() : locale), localeFromContext || {});\n  }, [componentName, defaultLocale, fullLocale]);\n  const getLocaleCode = React.useMemo(() => {\n    const localeCode = fullLocale === null || fullLocale === void 0 ? void 0 : fullLocale.locale;\n    // Had use LocaleProvide but didn't set locale\n    if ((fullLocale === null || fullLocale === void 0 ? void 0 : fullLocale.exist) && !localeCode) {\n      return defaultLocaleData.locale;\n    }\n    return localeCode;\n  }, [fullLocale]);\n  return [getLocale, getLocaleCode];\n};\nexport default useLocale;","import { Row } from '../grid';\nexport default Row;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _excluded = [\"prefixCls\", \"className\", \"style\", \"checked\", \"disabled\", \"defaultChecked\", \"type\", \"onChange\"];\nimport classNames from 'classnames';\nimport useMergedState from \"rc-util/es/hooks/useMergedState\";\nimport * as React from 'react';\nimport { forwardRef, useImperativeHandle, useRef } from 'react';\nexport var Checkbox = /*#__PURE__*/forwardRef(function (props, ref) {\n  var _classNames;\n  var _props$prefixCls = props.prefixCls,\n    prefixCls = _props$prefixCls === void 0 ? 'rc-checkbox' : _props$prefixCls,\n    className = props.className,\n    style = props.style,\n    checked = props.checked,\n    disabled = props.disabled,\n    _props$defaultChecked = props.defaultChecked,\n    defaultChecked = _props$defaultChecked === void 0 ? false : _props$defaultChecked,\n    _props$type = props.type,\n    type = _props$type === void 0 ? 'checkbox' : _props$type,\n    onChange = props.onChange,\n    inputProps = _objectWithoutProperties(props, _excluded);\n  var inputRef = useRef(null);\n  var _useMergedState = useMergedState(defaultChecked, {\n      value: checked\n    }),\n    _useMergedState2 = _slicedToArray(_useMergedState, 2),\n    rawValue = _useMergedState2[0],\n    setRawValue = _useMergedState2[1];\n  useImperativeHandle(ref, function () {\n    return {\n      focus: function focus() {\n        var _inputRef$current;\n        (_inputRef$current = inputRef.current) === null || _inputRef$current === void 0 ? void 0 : _inputRef$current.focus();\n      },\n      blur: function blur() {\n        var _inputRef$current2;\n        (_inputRef$current2 = inputRef.current) === null || _inputRef$current2 === void 0 ? void 0 : _inputRef$current2.blur();\n      },\n      input: inputRef.current\n    };\n  });\n  var classString = classNames(prefixCls, className, (_classNames = {}, _defineProperty(_classNames, \"\".concat(prefixCls, \"-checked\"), rawValue), _defineProperty(_classNames, \"\".concat(prefixCls, \"-disabled\"), disabled), _classNames));\n  var handleChange = function handleChange(e) {\n    if (disabled) {\n      return;\n    }\n    if (!('checked' in props)) {\n      setRawValue(e.target.checked);\n    }\n    onChange === null || onChange === void 0 ? void 0 : onChange({\n      target: _objectSpread(_objectSpread({}, props), {}, {\n        type: type,\n        checked: e.target.checked\n      }),\n      stopPropagation: function stopPropagation() {\n        e.stopPropagation();\n      },\n      preventDefault: function preventDefault() {\n        e.preventDefault();\n      },\n      nativeEvent: e.nativeEvent\n    });\n  };\n  return /*#__PURE__*/React.createElement(\"span\", {\n    className: classString,\n    style: style\n  }, /*#__PURE__*/React.createElement(\"input\", _extends({}, inputProps, {\n    className: \"\".concat(prefixCls, \"-input\"),\n    ref: inputRef,\n    onChange: handleChange,\n    disabled: disabled,\n    checked: !!rawValue,\n    type: type\n  })), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"\".concat(prefixCls, \"-inner\")\n  }));\n});\nexport default Checkbox;","export const typeList = [\r\n  { label: 'B', value: 'B', placeholder: '字节 byte' },\r\n  { label: 'KB', value: 'KB', placeholder: '千字节 Kilo Byte' },\r\n  { label: 'MB', value: 'MB', placeholder: '兆字节 Mega Byte' },\r\n  { label: 'GB', value: 'GB', placeholder: '吉字节 Giga Byte' },\r\n  { label: 'TB', value: 'TB', placeholder: '太字节 Trillion Byte' },\r\n  { label: 'PB', value: 'PB', placeholder: '拍字节 Peta Byte' },\r\n  { label: 'EB', value: 'EB', placeholder: '艾字节 Exa Byte' },\r\n  { label: 'ZB', value: 'ZB', placeholder: '泽字节 Zetta Byte' },\r\n  { label: 'YB', value: 'YB', placeholder: '尧字节 Yotta Byte' },\r\n];\r\n\r\nexport const emptyResult :ByteConvertResult = {\r\n  \"b\": \"\",\r\n  \"kb\": \"\",\r\n  \"mb\": \"\",\r\n  \"gb\": \"\",\r\n  \"tb\": \"\",\r\n  \"pb\": \"\",\r\n  \"eb\": \"\",\r\n  \"zb\": \"\",\r\n  \"yb\": \"\",\r\n};\r\n\r\nexport type ByteConvertResult = {\r\n  \"b\": string,\r\n  \"kb\": string,\r\n  \"mb\": string,\r\n  \"gb\": string,\r\n  \"tb\": string,\r\n  \"pb\": string,\r\n  \"eb\": string,\r\n  \"zb\": string,\r\n  \"yb\": string,\r\n}\r\n","import { Checkbox, Form, Input, Divider, message, Space, Radio, Button, Row, Col } from \"antd\";\r\nimport { useState } from \"react\";\r\nconst { TextArea } = Input;\r\nimport { copyTextToClipboard } from \"./../../lib\"\r\nimport { } from \"./lib\"\r\nimport { typeList, emptyResult, ByteConvertResult } from \"./data\"\r\nimport type { RadioChangeEvent } from 'antd';\r\nimport { convertToByte, convertFromByte, getDefaultType } from \"./lib\"\r\nimport { InputStatus } from \"antd/es/_util/statusUtils\";\r\n\r\nconst ByteConvert = () => {\r\n  const t = getDefaultType();\r\n  const getPlaceholder = (type :string) :string | undefined => {\r\n    return typeList.find(item => item.value === type)?.placeholder;\r\n  }\r\n\r\n  const [ value, setValue ] = useState(''); // 输入数量\r\n  const [ status, setStatus ] = useState(''); // 输入是否合法\r\n  const [ b, setB ] = useState(0); // 数量\r\n  const [ type, setType ] = useState(t); // 类型,\r\n  const [ placeholder, setPlaceholder ] = useState(getPlaceholder(t)); // 数字类型的输入提示\r\n  const [ data, setData ] = useState(emptyResult); // 转换的结果\r\n  const [ notice, contextHolder] = message.useMessage();\r\n\r\n  const inputStyle = { cursor: \"pointer\" };\r\n\r\n  // 切换类型\r\n  const onTypeChange = ({ target: { value : t } }: RadioChangeEvent) => {\r\n    setType(t);\r\n    setPlaceholder(getPlaceholder(t));\r\n    if( value !== \"\" && /^\\d+$/.test(value)) setB(convertToByte(parseInt(value), t));\r\n  };\r\n\r\n  // 点击结果框,把结果复制到粘贴板\r\n  const inputClick = (e :React.MouseEvent<HTMLElement>) => {\r\n    const txt = (e.target as HTMLInputElement).value.trim();\r\n    if(txt != \"\") {\r\n      copyTextToClipboard(txt);\r\n      notice.success(\"复制到粘贴板成功！！！\");\r\n    }\r\n  };\r\n\r\n  const textAreaChange = (e :React.ChangeEvent<HTMLTextAreaElement>) => {\r\n    const value = e.target.value.trim();\r\n    setValue(value);\r\n    if(\"\" == value) {\r\n      setStatus('');\r\n      return ; // 没有内家直接返回不做下面的处理\r\n    }\r\n    if(/^\\d+$/.test(value)) {\r\n      setB(convertToByte(parseInt(value), type));\r\n      setStatus('')\r\n    } else {\r\n      setB(0);\r\n      setStatus('error');\r\n    }\r\n  }\r\n\r\n  const f = (v :number) :string => {\r\n    if(0 === v) return '';\r\n    return v.toString();\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {contextHolder}\r\n\r\n      <Space>\r\n        <Radio.Group\r\n          optionType = \"button\" buttonStyle=\"solid\"\r\n          options = { typeList } \r\n          onChange={ onTypeChange } \r\n          value={ type } \r\n        />\r\n        <Button \r\n          onClick={ () => { setValue(''); setB(0); setStatus(''); } }\r\n          style={ {\"backgroundColor\" : \"#dc3545\",\"color\": \"#fff\" }} \r\n        >清除</Button>\r\n      </Space>\r\n\r\n      <TextArea\r\n        status= { status as InputStatus }\r\n        style={ { margin: \"5px 0 5px 0\" }}\r\n        value= { value }\r\n        onChange={ textAreaChange }\r\n        placeholder={ placeholder }\r\n        autoSize={{ minRows: 3, maxRows: 3 }}\r\n      />\r\n\r\n      <Divider dashed />\r\n\r\n      <Row wrap>\r\n        <Col span={12}>\r\n          <Form name=\"basic1\" labelCol={{ span: 8 }} autoComplete=\"off\">\r\n            <Form.Item label=\"B (Byte)\">\r\n              <Input readOnly style={ inputStyle } onClick={ inputClick } value= { f(convertFromByte(b,'')) } />\r\n            </Form.Item>\r\n            <Form.Item label=\"KB (Kilo Byte)\">\r\n              <Input readOnly style={ inputStyle } onClick={ inputClick } value= { f(convertFromByte(b,'KB')) } />\r\n            </Form.Item>\r\n            <Form.Item label=\"MB (Mega Byte)\">\r\n              <Input readOnly style={ inputStyle } onClick={ inputClick } value= { f(convertFromByte(b,'MB')) } />\r\n            </Form.Item>\r\n            <Form.Item label=\"GB (Giga Byte)\">\r\n              <Input readOnly style={ inputStyle } onClick={ inputClick } value= { f(convertFromByte(b,'GB')) }/>\r\n            </Form.Item>\r\n            <Form.Item label=\"TB (Trillion Byte)\">\r\n              <Input readOnly style={ inputStyle } onClick={ inputClick } value= { f(convertFromByte(b,'TB')) } />\r\n            </Form.Item>\r\n            <Form.Item label=\"PB (Peta Byte)\">\r\n              <Input readOnly style={ inputStyle } onClick={ inputClick } value= { f(convertFromByte(b,'PB')) } />\r\n            </Form.Item>\r\n            <Form.Item label=\"EB (Exa Byte)\">\r\n              <Input readOnly style={ inputStyle } onClick={ inputClick } value= { f(convertFromByte(b,'EB')) } />\r\n            </Form.Item>\r\n            <Form.Item label=\"ZB (Zetta Byte)\">\r\n              <Input readOnly style={ inputStyle } onClick={ inputClick } value= { f(convertFromByte(b,'ZB')) } />\r\n            </Form.Item>\r\n            <Form.Item label=\"YB Yotta Byte\">\r\n              <Input readOnly style={ inputStyle } onClick={ inputClick } value= { f(convertFromByte(b,'YB')) } />\r\n            </Form.Item>\r\n          </Form>\r\n        </Col>\r\n        <Col span={12}>\r\n          <Form name=\"basic2\" labelCol={{ span: 8 }} autoComplete=\"off\">\r\n          <Form.Item label=\"b (bit)\">\r\n              <Input readOnly style={ inputStyle } onClick={ inputClick } value= { f(convertFromByte(b * 8,'')) } />\r\n            </Form.Item>\r\n            <Form.Item label=\"Kb (Kilo bit)\">\r\n              <Input readOnly style={ inputStyle } onClick={ inputClick } value= { f(convertFromByte(b * 8,'KB')) } />\r\n            </Form.Item>\r\n            <Form.Item label=\"Mb (Mega bit)\">\r\n              <Input readOnly style={ inputStyle } onClick={ inputClick } value= { f(convertFromByte(b * 8,'MB')) } />\r\n            </Form.Item>\r\n            <Form.Item label=\"Gb (Giga bit)\">\r\n              <Input readOnly style={ inputStyle } onClick={ inputClick } value= { f(convertFromByte(b * 8,'GB')) }/>\r\n            </Form.Item>\r\n            <Form.Item label=\"Tb (Trillion bit)\">\r\n              <Input readOnly style={ inputStyle } onClick={ inputClick } value= { f(convertFromByte(b * 8,'TB')) } />\r\n            </Form.Item>\r\n            <Form.Item label=\"Pb (Peta bit)\">\r\n              <Input readOnly style={ inputStyle } onClick={ inputClick } value= { f(convertFromByte(b * 8,'PB')) } />\r\n            </Form.Item>\r\n            <Form.Item label=\"Eb (Exa bit)\">\r\n              <Input readOnly style={ inputStyle } onClick={ inputClick } value= { f(convertFromByte(b * 8,'EB')) } />\r\n            </Form.Item>\r\n            <Form.Item label=\"Zb (Zetta bit)\">\r\n              <Input readOnly style={ inputStyle } onClick={ inputClick } value= { f(convertFromByte(b * 8,'ZB')) } />\r\n            </Form.Item>\r\n            <Form.Item label=\"Yb Yotta bit\">\r\n              <Input readOnly style={ inputStyle } onClick={ inputClick } value= { f(convertFromByte(b * 8,'YB')) } />\r\n            </Form.Item>\r\n          </Form>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ByteConvert;","// 转成可读字节  1024 => 1 KB  2 * 1024 * 1024 => 2 MB\r\nexport const bytesToSize = (bytes :number) :string => {\r\n  if (bytes === 0) return '0 B';\r\n  let k = 1024,\r\n  sizes = ['B', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'],\r\n  i = Math.floor(Math.log(bytes) / Math.log(k));\r\n  return (bytes / Math.pow(k, i)). toFixed(2) + ' ' + sizes[i];\r\n}\r\n\r\n// 转换成字节数据  (1,KB) => 1024  (2,MB) => 2 * 1024 * 1024  \r\nexport const convertToByte = (num :number,type :string) :number => {  \r\n  switch(type.toUpperCase()) {\r\n    case \"B\": return num;\r\n    case \"KB\": return num * 1024;\r\n    case \"MB\": return num * 1024 * 1024;\r\n    case \"GB\": return num * 1024 * 1024 * 1024;\r\n    case \"TB\": return num * 1024 * 1024 * 1024 * 1024;\r\n    case \"PB\": return num * 1024 * 1024 * 1024 * 1024 * 1024;\r\n    case \"EB\": return num * 1024 * 1024 * 1024 * 1024 * 1024 * 1024;\r\n    case \"ZB\": return num * 1024 * 1024 * 1024 * 1024 * 1024 * 1024 * 1024;\r\n    case \"YB\": return num * 1024 * 1024 * 1024 * 1024 * 1024 * 1024 * 1024 * 1024;\r\n  }\r\n  return num;\r\n}\r\n\r\n// 转换成字节数据  (1,KB) => 1024  (2,MB) => 2 * 1024 * 1024  \r\nexport const convertFromByte = (num :number,type :string) :number => {  \r\n  switch(type.toUpperCase()) {\r\n    case \"B\": return num;\r\n    case \"KB\": return num / 1024;\r\n    case \"MB\": return num / 1024 / 1024;\r\n    case \"GB\": return num / 1024 / 1024 / 1024;\r\n    case \"TB\": return num / 1024 / 1024 / 1024 / 1024;\r\n    case \"PB\": return num / 1024 / 1024 / 1024 / 1024 / 1024;\r\n    case \"EB\": return num / 1024 / 1024 / 1024 / 1024 / 1024 / 1024;\r\n    case \"ZB\": return num / 1024 / 1024 / 1024 / 1024 / 1024 / 1024 / 1024;\r\n    case \"YB\": return num / 1024 / 1024 / 1024 / 1024 / 1024 / 1024 / 1024 / 1024;\r\n  }\r\n  return num;\r\n}\r\n\r\nconst DEFAULT_TYPE = 'byte-convert:default-type';\r\n\r\n// 获取默认类型\r\nexport function getDefaultType() :string  {\r\n    const type = localStorage.getItem(DEFAULT_TYPE);\r\n    return (type === null)? \"GB\" : type;\r\n}\r\n\r\n// 设置默认类型\r\nexport function setDefaultType(type: string) : void  {\r\n    localStorage.setItem(DEFAULT_TYPE,type);\r\n}","// 复制到粘贴板\r\nexport async function copyTextToClipboard(text: string) {\r\n  if (\"clipboard\" in navigator) {\r\n    return await navigator.clipboard.writeText(text);\r\n  } else {\r\n    return document.execCommand('copy', true, text);\r\n  }\r\n}\r\n\r\n// 防抖函数\r\nexport function debounce(operate:Function, delay:number) {\r\n  let time :any = null\r\n  let timer :any = null\r\n  let newTime = null\r\n  function task() {\r\n    newTime =+ new Date()\r\n    if(newTime - time < delay) {\r\n      timer = setTimeout(task, delay)\r\n    } else {\r\n      operate()\r\n      timer = null\r\n    }\r\n    time = newTime\r\n  }\r\n  return function () {\r\n    // 更新时间戳\r\n    time =+ new Date();\r\n    if(!timer) {\r\n      timer = setTimeout(task, delay)\r\n    }\r\n  }\r\n}\r\n\r\n// 每间隔多少字符插入指定了符\r\nexport function insertIntervalString(str :string, disNum :number = 4, insertStr:string  = \" \") {\r\n  return str.replace(new RegExp(\"(.{\" + disNum + \"})\", \"g\"), \"$1\" + insertStr);\r\n}\r\n"],"names":["componentName","defaultLocale","fullLocale","_a","locale","localeFromContext","Object","assign","localeCode","exist","_excluded","forwardRef","props","ref","_classNames","_props$prefixCls","prefixCls","className","style","checked","disabled","_props$defaultChecked","defaultChecked","_props$type","type","onChange","inputProps","inputRef","useRef","_useMergedState","value","_useMergedState2","rawValue","setRawValue","useImperativeHandle","focus","_inputRef$current","current","blur","_inputRef$current2","input","classString","concat","e","target","stopPropagation","preventDefault","nativeEvent","typeList","label","placeholder","emptyResult","TextArea","t","getDefaultType","getPlaceholder","item","setValue","useState","status","setStatus","b","setB","setType","setPlaceholder","data","setData","notice","contextHolder","inputStyle","cursor","inputClick","txt","trim","success","f","v","toString","optionType","buttonStyle","options","test","convertToByte","parseInt","onClick","margin","autoSize","minRows","maxRows","dashed","wrap","span","name","labelCol","autoComplete","readOnly","convertFromByte","bytesToSize","bytes","i","Math","floor","log","pow","toFixed","num","toUpperCase","DEFAULT_TYPE","localStorage","getItem","setDefaultType","setItem","async","copyTextToClipboard","text","navigator","clipboard","writeText","document","execCommand","debounce","operate","delay","time","timer","newTime","task","Date","setTimeout","insertIntervalString","str","disNum","insertStr","replace","RegExp"],"sourceRoot":""}