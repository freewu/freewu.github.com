{"version":3,"file":"1062.renderer.js","mappings":"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","sources":["webpack://magic-tools/./src/renderer/App/AESCrypto/data.ts","webpack://magic-tools/./src/renderer/App/AESCrypto/lib.ts","webpack://magic-tools/./src/renderer/App/AESCrypto/setting.tsx","webpack://magic-tools/./src/renderer/App/AppStore/setting.tsx","webpack://magic-tools/./src/renderer/App/DESCrypto/data.ts","webpack://magic-tools/./src/renderer/App/DESCrypto/lib.ts","webpack://magic-tools/./src/renderer/App/DESCrypto/setting.tsx","webpack://magic-tools/./src/renderer/App/Hash/lib.ts","webpack://magic-tools/./src/renderer/App/Hash/setting.tsx","webpack://magic-tools/./src/renderer/App/PBKDF2Calc/lib.ts","webpack://magic-tools/./src/renderer/App/PBKDF2Calc/setting.tsx","webpack://magic-tools/./src/renderer/App/QRCodeGenerator/data.ts","webpack://magic-tools/./src/renderer/App/QRCodeGenerator/lib.ts","webpack://magic-tools/./src/renderer/App/QRCodeGenerator/setting.tsx","webpack://magic-tools/./src/renderer/App/RC4Crypto/data.ts","webpack://magic-tools/./src/renderer/App/RC4Crypto/lib.ts","webpack://magic-tools/./src/renderer/App/RC4Crypto/setting.tsx","webpack://magic-tools/./src/renderer/App/RabbitCrypto/data.ts","webpack://magic-tools/./src/renderer/App/RabbitCrypto/lib.ts","webpack://magic-tools/./src/renderer/App/RabbitCrypto/setting.tsx","webpack://magic-tools/./src/renderer/App/Setting/index.tsx","webpack://magic-tools/./src/renderer/App/TripleDESCrypto/data.ts","webpack://magic-tools/./src/renderer/App/TripleDESCrypto/lib.ts","webpack://magic-tools/./src/renderer/App/TripleDESCrypto/setting.tsx","webpack://magic-tools/./src/renderer/lib/array.ts","webpack://magic-tools/./src/renderer/lib/index.ts"],"sourcesContent":["// 加密模式列表\nexport const modeList = [\n  \"CBC\",\n  \"CFB\",\n  \"CTR\",\n  \"OFB\",\n  \"ECB\", // 不需要 IV\n];\n\n// 填充模式列表\nexport const paddingList = [\n  \"Pkcs7\",\n  \"AnsiX923\",\n  \"Iso10126\",\n  \"Iso97971\",\n  \"ZeroPadding\",\n  //\"NoPadding\",\n];\n\n// 输出/输入数据编码列表\nexport const codeList  = [\n  \"HEX\",\n  \"Base64\"\n];\n\n// 位数\nexport const capacityList = [\n  128,\n  192,\n  256,\n];","const DEFAULT_MODE_ITEM = 'aes-crypto:default-mode';\r\n\r\n// 获取默认模式\r\nexport function getDefaultMode() :string  {\r\n  const mode = localStorage.getItem(DEFAULT_MODE_ITEM);\r\n  return (mode === null)? \"CBC\" : mode;\r\n}\r\n\r\n// 设置默认模式\r\nexport function setDefaultMode(mode: string) : void  {\r\n  localStorage.setItem(DEFAULT_MODE_ITEM,mode);\r\n}\r\n\r\nconst DEFAULT_PADDING_ITEM = 'aes-crypto:default-padding';\r\n\r\n// 获取默认填充\r\nexport function getDefaultPadding() :string  {\r\n  const padding = localStorage.getItem(DEFAULT_PADDING_ITEM);\r\n  return (padding === null)? \"Pkcs7\" : padding;\r\n}\r\n\r\n// 设置默认填充\r\nexport function setDefaultPadding(padding: string) : void  {\r\n  localStorage.setItem(DEFAULT_PADDING_ITEM,padding);\r\n}\r\n\r\nconst DEFAULT_CODE_ITEM = 'aes-crypto:default-code';\r\n\r\n// 获取默认编码 HEX / Base64\r\nexport function getDefaultCode() :string  {\r\n  const code = localStorage.getItem(DEFAULT_CODE_ITEM);\r\n  return (code === null)? \"Base64\" : code;\r\n}\r\n\r\n// 设置默认编码 HEX / Base64\r\nexport function setDefaultCode(code: string) : void  {\r\n  localStorage.setItem(DEFAULT_CODE_ITEM,code);\r\n}\r\n\r\nconst DEFAULT_IV_ITEM = 'aes-crypto:default-iv';\r\n\r\n// 获取默认偏移量\r\nexport function getDefaultIV() :string  {\r\n  const iv = localStorage.getItem(DEFAULT_IV_ITEM);\r\n  return (iv === null)? \"\" : iv;\r\n}\r\n\r\n// 设置默认偏移量\r\nexport function setDefaultIV(iv: string) : void  {\r\n  localStorage.setItem(DEFAULT_IV_ITEM,iv);\r\n}\r\n\r\n\r\nconst DEFAULT_PASSPHRASE_ITEM = 'aes-crypto:default-passphrase';\r\n\r\n// 获取默认密钥\r\nexport function getDefaultPassphrase() :string  {\r\n  const passphrase = localStorage.getItem(DEFAULT_PASSPHRASE_ITEM);\r\n  return (passphrase === null)? \"\" : passphrase;\r\n}\r\n\r\n// 设置默认密钥\r\nexport function setDefaultPassphrase(passphrase: string) : void  {\r\n  localStorage.setItem(DEFAULT_PASSPHRASE_ITEM,passphrase);\r\n}\r\n\r\n// 根据输入的密钥长度生成密钥长度提示\r\nexport const genPassphraseLimitLength = (length :number) :number => {\r\n  if(length >= 30) return 32; // 都 30 位了说明需要是 32 位的密钥 (AES-256)\r\n  if(length >= 20) return 24; // 都 24 位了说明需要是 24 位的密钥 (AES-2192)\r\n  return 16; // 默认 AES-128\r\n}\r\n\r\n// 根据密钥长度生成位数\r\nexport const genCapacity = (length: number) :number => {\r\n  if(length == 24) return 192;\r\n  if(length == 32) return 256;\r\n  return 128;\r\n}\r\n\r\nimport * as CryptoJS from 'crypto-js';\r\n// import { BlockCipherMode } from 'crypto-js/';\r\n\r\n// 获取模式\r\nexport const getMode = (mode :string) => {\r\n  switch(mode) {\r\n    case \"CFB\": return CryptoJS.mode.CFB;\r\n    case \"OFB\": return CryptoJS.mode.OFB;\r\n    case \"ECB\": return CryptoJS.mode.ECB;\r\n    case \"CTR\": return CryptoJS.mode.CTR;\r\n    case \"CTRGladman\": return CryptoJS.mode.CTRGladman;\r\n  }\r\n  return CryptoJS.mode.CBC\r\n}\r\n\r\n// 获取填充\r\nexport const getPadding = (padding :string) => {\r\n  switch(padding) {\r\n    case \"AnsiX923\": return CryptoJS.pad.AnsiX923;\r\n    case \"Iso10126\": return CryptoJS.pad.Iso10126;\r\n    case \"Iso97971\": return CryptoJS.pad.Iso97971;\r\n    case \"ZeroPadding\": return CryptoJS.pad.ZeroPadding;\r\n    case \"NoPadding\": return CryptoJS.pad.NoPadding;\r\n  }\r\n  return CryptoJS.pad.Pkcs7\r\n}\r\n\r\n\r\n\r\n","import { Select, Form, Divider, Input, Space } from \"antd\";\nimport React,{ useState } from \"react\";\nimport { arrayToOptions } from \"../../lib/array\"\nimport { modeList, paddingList, codeList } from \"./data\";\nimport { getDefaultMode, setDefaultMode } from \"./lib\";\nimport { getDefaultPadding, setDefaultPadding } from \"./lib\";\nimport { getDefaultCode, setDefaultCode } from \"./lib\";\nimport { getDefaultIV, setDefaultIV } from \"./lib\";\nimport { getDefaultPassphrase, setDefaultPassphrase, genPassphraseLimitLength } from \"./lib\";\nimport type { InputStatus } from \"antd/es/_util/statusUtils\";\n\nconst AESCryptoSetting = () => {\n\n  const [ mode, setMode ] = useState(getDefaultMode()); // 默认 mode\n  const [ padding, setPadding ] = useState(getDefaultPadding()); // 默认填充\n  const [ code, setCode ] = useState(getDefaultCode()); // 默认编码\n  const [ iv, setIV ] = useState(getDefaultIV()); // 默认偏移量\n  const [ ivStatus, setIVStatus ] = useState('' as InputStatus); // 偏移量提醒\n  const [ passphrase, setPassphrase ] = useState(getDefaultPassphrase()); // 默认密钥\n  const [ passphraseStatus, setPassphraseStatus ] = useState('' as InputStatus); // 密钥提醒\n  const [ passphraseLimitLength, setPassphraseLimitLength ] = useState(genPassphraseLimitLength(getDefaultPassphrase().length)); // 密钥长度要求 16 / 24 / 32 \n \n  // 偏移量 IV 输入处理\n  const onIVChange = (e :React.ChangeEvent<HTMLInputElement>) => {\n    const v = e.target.value;\n    setIV(v); \n    if(v.length === 0 || v.length == 16) { // IV长度必须为 0 \n      setDefaultIV(v);\n      setIVStatus(\"\");\n    } else {\n      setIVStatus(\"error\");\n    }\n  }\n\n  // 密钥 Passphrase 输入处理\n  const onPassphraseChange = (e :React.ChangeEvent<HTMLInputElement>) => {\n    const v = e.target.value.trim();\n    setPassphrase(v); \n    // Passphrase 长度必须为 0 / 16 (128位) / 24(192位) / 32(256位)\n    if(v.length === 0 || v.length == 16 || v.length == 24 || v.length == 32) {\n      setDefaultPassphrase(v);\n      setPassphraseStatus(\"\");\n    } else {\n      setPassphraseStatus(\"error\");\n    }\n    // 根据密钥长度变化需要变量密钥长度提示\n    setPassphraseLimitLength(genPassphraseLimitLength(v.length));\n  }\n\n  return (\n    <>\n      <Divider orientation=\"left\" plain>AES 加解密</Divider>\n      <Form.Item label=\"默认模式\">\n        <Select\n          value={ mode }\n          style={{ width: 240 }}\n          onChange={ (v :string) => { setMode(v); setDefaultMode(v); } }\n          options={ arrayToOptions(modeList) }\n        />\n      </Form.Item>\n      <Form.Item label=\"默认填充\">\n        <Select\n          value={ padding }\n          style={{ width: 240 }}\n          onChange={ (v :string) => { setPadding(v); setDefaultPadding(v); } }\n          options={ arrayToOptions(paddingList) }\n        />\n      </Form.Item>\n      <Form.Item label=\"默认编码\">\n        <Select\n          value={ code }\n          style={{ width: 240 }}\n          onChange={ (v :string) => { setCode(v); setDefaultCode(v); } }\n          options={ arrayToOptions(codeList) }\n        />\n      </Form.Item>\n      <Form.Item label=\"默认偏移量(IV)\">\n        <Space>\n          <Input \n            status= { ivStatus }\n            maxLength = { 16 }\n            allowClear\n            style={ { width: \"520px\" } }\n            onChange={ onIVChange }\n            value= { iv } />\n          { iv.length? iv.length + \" / 16\" : null }\n        </Space>\n      </Form.Item>\n      <Form.Item label=\"默认密钥\">\n        <Space>\n          <Input \n            status= { passphraseStatus }\n            maxLength= { 32 }\n            allowClear\n            style={ { width: \"520px\" } }\n            onChange={ onPassphraseChange }\n            value= { passphrase } />\n          { passphrase.length? passphrase.length + \" / \" + passphraseLimitLength  : null }\n        </Space>\n      </Form.Item>\n    </>\n  );\n}\n\nexport default AESCryptoSetting;","import { Select, Form, Divider, notification } from \"antd\";\r\nimport { getDefaultApp,setDefaultApp } from \"./lib\";\r\nimport { useState } from \"react\";\r\nimport { appList } from \"../index\";\r\n\r\nconst AppStoreSetting = () => {\r\n  const [ app, setApp ] = useState(getDefaultApp()); // 默认展示的 app\r\n\r\n  const onChangeDefaultApp = (value: string) => {\r\n    setApp(value);\r\n    setDefaultApp(value);\r\n  };\r\n\r\n  // 应用列表\r\n  const getAppList = () => {\r\n    const result = [{ value: 'AppStore', label: '应用中心' }];\r\n    appList.forEach((v) => {\r\n      result.push({ value: v.key, label:  v.label });\r\n    });\r\n    return result;\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Divider orientation=\"left\" plain>应用中心</Divider>\r\n      <Form.Item label=\"默认展示应用\">\r\n        <Select\r\n          value={ app }\r\n          style={{ width: 240 }}\r\n          onChange={ onChangeDefaultApp }\r\n          options={ getAppList() }\r\n        />\r\n      </Form.Item>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default AppStoreSetting;","// 加密模式列表\nexport const modeList = [\n  \"CBC\",\n  \"CFB\",\n  \"CTR\",\n  \"OFB\",\n  \"ECB\", // 不需要 IV\n];\n\n// 填充模式列表\nexport const paddingList = [\n  \"Pkcs7\",\n  \"AnsiX923\",\n  \"Iso10126\",\n  \"Iso97971\",\n  \"ZeroPadding\",\n  // \"NoPadding\",\n];\n\n// 输出/输入数据编码列表\nexport const codeList  = [\n  \"HEX\",\n  \"Base64\"\n];\n","const DEFAULT_MODE_ITEM = 'des-crypto:default-mode';\n\n// 获取默认模式\nexport function getDefaultMode() :string  {\n  const mode = localStorage.getItem(DEFAULT_MODE_ITEM);\n  return (mode === null)? \"CBC\" : mode;\n}\n\n// 设置默认模式\nexport function setDefaultMode(mode: string) : void  {\n  localStorage.setItem(DEFAULT_MODE_ITEM,mode);\n}\n\nconst DEFAULT_PADDING_ITEM = 'des-crypto:default-padding';\n\n// 获取默认填充\nexport function getDefaultPadding() :string  {\n  const padding = localStorage.getItem(DEFAULT_PADDING_ITEM);\n  return (padding === null)? \"Pkcs7\" : padding;\n}\n\n// 设置默认填充\nexport function setDefaultPadding(padding: string) : void  {\n  localStorage.setItem(DEFAULT_PADDING_ITEM,padding);\n}\n\nconst DEFAULT_CODE_ITEM = 'des-crypto:default-code';\n\n// 获取默认编码 HEX / Base64\nexport function getDefaultCode() :string  {\n  const code = localStorage.getItem(DEFAULT_CODE_ITEM);\n  return (code === null)? \"Base64\" : code;\n}\n\n// 设置默认编码 HEX / Base64\nexport function setDefaultCode(code: string) : void  {\n  localStorage.setItem(DEFAULT_CODE_ITEM,code);\n}\n\nconst DEFAULT_IV_ITEM = 'des-crypto:default-iv';\n\n// 获取默认偏移量\nexport function getDefaultIV() :string  {\n  const iv = localStorage.getItem(DEFAULT_IV_ITEM);\n  return (iv === null)? \"\" : iv;\n}\n\n// 设置默认偏移量\nexport function setDefaultIV(iv: string) : void  {\n  localStorage.setItem(DEFAULT_IV_ITEM,iv);\n}\n\n\nconst DEFAULT_PASSPHRASE_ITEM = 'des-crypto:default-passphrase';\n\n// 获取默认密钥\nexport function getDefaultPassphrase() :string  {\n  const passphrase = localStorage.getItem(DEFAULT_PASSPHRASE_ITEM);\n  return (passphrase === null)? \"\" : passphrase;\n}\n\n// 设置默认密钥\nexport function setDefaultPassphrase(passphrase: string) : void  {\n  localStorage.setItem(DEFAULT_PASSPHRASE_ITEM,passphrase);\n}\n\n// 根据输入的密钥长度生成密钥长度提示\nexport const genPassphraseLimitLength = (length :number) :number => {\n  return 8; // DES 密钥长度 8位\n}\n\n\nimport * as CryptoJS from 'crypto-js';\n// import { BlockCipherMode } from 'crypto-js/';\n\n// 获取模式\nexport const getMode = (mode :string) => {\n  switch(mode) {\n    case \"CFB\": return CryptoJS.mode.CFB;\n    case \"OFB\": return CryptoJS.mode.OFB;\n    case \"ECB\": return CryptoJS.mode.ECB;\n    case \"CTR\": return CryptoJS.mode.CTR;\n    case \"CTRGladman\": return CryptoJS.mode.CTRGladman;\n  }\n  return CryptoJS.mode.CBC\n}\n\n// 获取填充\nexport const getPadding = (padding :string) => {\n  switch(padding) {\n    case \"AnsiX923\": return CryptoJS.pad.AnsiX923;\n    case \"Iso10126\": return CryptoJS.pad.Iso10126;\n    case \"Iso97971\": return CryptoJS.pad.Iso97971;\n    case \"ZeroPadding\": return CryptoJS.pad.ZeroPadding;\n    case \"NoPadding\": return CryptoJS.pad.NoPadding;\n  }\n  return CryptoJS.pad.Pkcs7\n}\n\n\n\n","import { Select, Form, Divider, Input, Space } from \"antd\";\nimport React,{ useState } from \"react\";\nimport { arrayToOptions } from \"../../lib/array\"\nimport { modeList, paddingList, codeList } from \"./data\";\nimport { getDefaultMode, setDefaultMode } from \"./lib\";\nimport { getDefaultPadding, setDefaultPadding } from \"./lib\";\nimport { getDefaultCode, setDefaultCode } from \"./lib\";\nimport { getDefaultIV, setDefaultIV } from \"./lib\";\nimport { getDefaultPassphrase, setDefaultPassphrase, genPassphraseLimitLength } from \"./lib\";\nimport type { InputStatus } from \"antd/es/_util/statusUtils\";\n\nconst DESCryptoSetting = () => {\n\n  const [ mode, setMode ] = useState(getDefaultMode()); // 默认 mode\n  const [ padding, setPadding ] = useState(getDefaultPadding()); // 默认填充\n  const [ code, setCode ] = useState(getDefaultCode()); // 默认编码\n  const [ iv, setIV ] = useState(getDefaultIV()); // 默认偏移量\n  const [ ivStatus, setIVStatus ] = useState('' as InputStatus); // 偏移量提醒\n  const [ passphrase, setPassphrase ] = useState(getDefaultPassphrase()); // 默认密钥\n  const [ passphraseStatus, setPassphraseStatus ] = useState('' as InputStatus); // 密钥提醒\n  const [ passphraseLimitLength, setPassphraseLimitLength ] = useState(genPassphraseLimitLength(getDefaultPassphrase().length)); // 密钥长度要求 16 / 24 / 32 \n \n  // 偏移量 IV 输入处理\n  const onIVChange = (e :React.ChangeEvent<HTMLInputElement>) => {\n    const v = e.target.value;\n    setIV(v); \n    if(v.length === 0 || v.length == 8) { // IV长度必须为 0 \n      setDefaultIV(v);\n      setIVStatus(\"\");\n    } else {\n      setIVStatus(\"error\");\n    }\n  }\n\n  // 密钥 Passphrase 输入处理\n  const onPassphraseChange = (e :React.ChangeEvent<HTMLInputElement>) => {\n    const v = e.target.value.trim();\n    setPassphrase(v); \n    // Passphrase 长度必须为 0 / 8\n    if(v.length === 0 || v.length == 8) {\n      setDefaultPassphrase(v);\n      setPassphraseStatus(\"\");\n    } else {\n      setPassphraseStatus(\"error\");\n    }\n    // 根据密钥长度变化需要变量密钥长度提示\n    setPassphraseLimitLength(genPassphraseLimitLength(v.length));\n  }\n\n  return (\n    <>\n      <Divider orientation=\"left\" plain>DES 加解密</Divider>\n      <Form.Item label=\"默认模式\">\n        <Select\n          value={ mode }\n          style={{ width: 240 }}\n          onChange={ (v :string) => { setMode(v); setDefaultMode(v); } }\n          options={ arrayToOptions(modeList) }\n        />\n      </Form.Item>\n      <Form.Item label=\"默认填充\">\n        <Select\n          value={ padding }\n          style={{ width: 240 }}\n          onChange={ (v :string) => { setPadding(v); setDefaultPadding(v); } }\n          options={ arrayToOptions(paddingList) }\n        />\n      </Form.Item>\n      <Form.Item label=\"默认编码\">\n        <Select\n          value={ code }\n          style={{ width: 240 }}\n          onChange={ (v :string) => { setCode(v); setDefaultCode(v); } }\n          options={ arrayToOptions(codeList) }\n        />\n      </Form.Item>\n      <Form.Item label=\"默认偏移量(IV)\">\n        <Space>\n          <Input \n            status= { ivStatus }\n            maxLength = { 8 }\n            allowClear\n            style={ { width: \"520px\" } }\n            onChange={ onIVChange }\n            value= { iv } />\n          { iv.length? iv.length + \" / 8\" : null }\n        </Space>\n      </Form.Item>\n      <Form.Item label=\"默认密钥\">\n        <Space>\n          <Input \n            status= { passphraseStatus }\n            maxLength= { 8 }\n            allowClear\n            style={ { width: \"520px\" } }\n            onChange={ onPassphraseChange }\n            value= { passphrase } />\n          { passphrase.length? passphrase.length + \" / \" + 8  : null }\n        </Space>\n      </Form.Item>\n    </>\n  );\n}\n\nexport default DESCryptoSetting;","// 获取默认的常用密码列表\r\nexport function getDefaultPasswordList() :Array<string> {\r\n  return [\r\n    \"admin\",\r\n    \"123456\",\r\n    \"12345678\",\r\n    \"root\",\r\n    \"password\",\r\n    \"qwerty\",\r\n    \"1234\",\r\n    \"12345\",\r\n  ]\r\n}\r\n\r\nconst PASSWORD_LIST_ITEM = 'hash:password-list';\r\n\r\n// 获取设置的密码列表 如果没有设置使用默认列表\r\nexport function getPasswordList() :Array<string> {\r\n  const list = localStorage.getItem(PASSWORD_LIST_ITEM);\r\n  // 如果没有设置,返回默认的常用密码列表\r\n  if (null === list) return getDefaultPasswordList();\r\n\r\n  let arr = list.split(\",\");\r\n  arr = arr.filter((item) => { return item.trim() !== \"\" });\r\n  if (0 === arr.length) return getDefaultPasswordList();\r\n  \r\n  return arr;\r\n}\r\n\r\n// 设置密码列表 \r\nexport function setPasswordList(list: Array<string>) : void  {\r\n  localStorage.setItem(PASSWORD_LIST_ITEM,list.join(\",\"));\r\n}","import { Input, Form, Divider, notification } from \"antd\";\r\nconst { TextArea } = Input;\r\nimport { useState } from \"react\";\r\nimport { getPasswordList,setPasswordList } from \"./lib\"\r\n\r\nconst HashSetting = () => {\r\n  const [ value, setValue ] = useState(getPasswordList().join(\"\\n\"));\r\n\r\n  const onTextAreaChange = (e :React.ChangeEvent<HTMLTextAreaElement>) => {\r\n    const value = e.target.value;\r\n    let arr = value.trim().split(\"\\n\");\r\n    arr = arr.map((item) => { return item.trim().replaceAll(\" \",\"\"); }) // 去掉所有空格\r\n    arr = arr.filter((item) => { return \"\" !== item.trim() });  // remove empty elements. \r\n    // if(arr.length >= 10) {\r\n    //   setValue(arr.join(\"\\n\"));\r\n    //   return false;\r\n    // }\r\n    setValue(value);\r\n    // 更新配置信息\r\n    setPasswordList(arr);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Divider orientation=\"left\" plain>Hash 值计算</Divider>\r\n      <Form.Item label=\"展示默认字符串\">\r\n        <TextArea\r\n          value= { value }\r\n          onChange={ onTextAreaChange }\r\n          placeholder=\"每行一条数据\"\r\n          autoSize={{ minRows: 3, maxRows: 5 }}\r\n        />\r\n      </Form.Item>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default HashSetting;","import * as CryptoJS from 'crypto-js';\n\n// 获取指定的 Hash 算法\nexport const getHashAlgo = (hash :string) => {\n  switch(hash) {\n    case 'MD5': return CryptoJS.algo.MD5;\n    case 'SHA1': return CryptoJS.algo.SHA1;\n    case 'SHA3': return CryptoJS.algo.SHA3;\n    case 'SHA224': return CryptoJS.algo.SHA224;\n    case 'SHA256': return CryptoJS.algo.SHA256;\n    case 'SHA384': return CryptoJS.algo.SHA384;\n    case 'SHA512': return CryptoJS.algo.SHA512;\n    case 'RIPEMD160': return CryptoJS.algo.RIPEMD160;\n  }\n  return CryptoJS.algo.SHA256;\n}\n\nconst DEFAULT_HASH_ALGO = 'pbkdf2-calc:default-hash-algo';\n\n// 获取默认 Hash 算法\nexport const getDefaultHashAlgo = () :string => {\n  const algo = localStorage.getItem(DEFAULT_HASH_ALGO);\n  return (algo === null)? \"SHA256\" : algo;\n}\n\n// 设置默认 Hash 算法\nexport function setDefaultHashAlgo(algo: string) :void  {\n  localStorage.setItem(DEFAULT_HASH_ALGO,algo);\n}\n\nconst DEFAULT_SALT = 'pbkdf2-calc:default-salt';\n\n// 获取默认盐值\nexport function getDefaultSalt() :string {\n  const salt = localStorage.getItem(DEFAULT_SALT);\n  return (salt === null)? \"\" : salt;\n}\n\n// 设置默认偏移量\nexport function setDefaultSalt(salt: string) :void  {\n  localStorage.setItem(DEFAULT_SALT, salt);\n}\n\nconst DEFAULT_ITERATION = 'pbkdf2-calc:default-iteration';\n\n// 获取默认迭代次数\nexport function getDefaultIteration() :number {\n  const iter = localStorage.getItem(DEFAULT_ITERATION);\n  return (iter === null)? 1000 : parseInt(iter); // 推荐 1000 + \n}\n\n// 设置默认迭代次数\nexport function setDefaultIteration(iter: number) :void {\n  localStorage.setItem(DEFAULT_ITERATION, iter.toString());\n}\n\nconst DEFAULT_KEY_LENGTH = 'pbkdf2-calc:default-key-length';\n\n// 获取默认推导密钥的长度 \nexport function getDefaultKeyLength() :number {\n  const len = localStorage.getItem(DEFAULT_KEY_LENGTH);\n  return (len === null)? 128 : parseInt(len); // 建议  128 / 256 / 512\n}\n\n// 设置默认推导密钥的长度\nexport function setDefaultKeyLength(len: number) :void {\n  localStorage.setItem(DEFAULT_KEY_LENGTH, len.toString());\n}\n\nexport const genValuePlaceholder = (algo :string) => {\n  return \"输入需要计算 PBKDF2-\" + algo + \" 值的内容 或 拖拽文件到框内打开\";\n}","import { Select, Form, Divider, Input, InputNumber } from \"antd\";\nimport React,{ useState } from \"react\";\nimport { arrayToOptions } from \"../../lib/array\"\nimport { hashAlgoList } from \"./data\";\nimport { getDefaultHashAlgo, setDefaultHashAlgo } from \"./lib\";\nimport { getDefaultSalt, setDefaultSalt } from \"./lib\";\nimport { getDefaultIteration, setDefaultIteration } from \"./lib\";\nimport { getDefaultKeyLength, setDefaultKeyLength } from \"./lib\";\nimport type { InputStatus } from \"antd/es/_util/statusUtils\";\n\nconst PBKDF2CalcSetting = () => {\n\n  const [ algo, setAlgo ] = useState(getDefaultHashAlgo()); //  Hash 算法\n  const [ salt, setSalt ] = useState(getDefaultSalt()); // 盐值\n  const [ iter, setIter ] = useState(getDefaultIteration()); // 迭代次数\n  const [ keyLength, setKeyLength ] = useState(getDefaultKeyLength()); // 推导密钥的长度\n\n  return (\n    <>\n      <Divider orientation=\"left\" plain>PBKDF2 值计算</Divider>\n      {/* <Form.Item label=\"默认 Hash 算法\">\n        <Select\n          value={ algo }\n          style={{ width: 240 }}\n          onChange={ (v :string) => { setAlgo(v); setDefaultHashAlgo(v); } }\n          options={ arrayToOptions(hashAlgoList) }\n        />\n      </Form.Item> */}\n      <Form.Item label=\"默认盐值(Salt)\">\n        <Input \n          showCount\n          allowClear\n          style={ { width: 520 } }\n          onChange={ (e) => { setSalt(e.target.value); setDefaultSalt(e.target.value); } }\n          value= { salt } />\n      </Form.Item>\n      <Form.Item label=\"迭代次数\">\n        <InputNumber\n          addonAfter=\"次\"\n          min = { 1 }\n          max = { 100000 }\n          style={ { width: 200 } }\n          onChange={ (v :number | null) => { \n            if(v != null) {\n              if(v >= 1 && v <= 100000) {\n                setDefaultIteration(v);\n                setIter(v);\n              }\n            } \n          } }\n          value= { iter } />\n      </Form.Item>\n      <Form.Item label=\"推导密钥长度\">\n        <InputNumber\n          addonAfter=\"位\"\n          placeholder= \"推荐 128 / 256 / 512\"\n          title= \"推荐 128 / 256 / 512\"\n          min = { 16 }\n          max = { 2048 }\n          style={ { width: 200 } }\n          onChange={ (v :number | null) => { \n            if(v != null) {\n              if(v >= 16 && v <= 1024) {\n                setDefaultKeyLength(v);\n                setKeyLength(v);\n              }\n            } \n          } }\n          value= { keyLength } />\n      </Form.Item>\n    </>\n  );\n}\n\nexport default PBKDF2CalcSetting;","// 容错率列表\r\nconst errorCorrectionLevelList = [\r\n    { value: 'L', label: 'Low', info:'~7%' },\r\n    { value: 'M', label: 'Medium', info:'~15%' },\r\n    { value: 'Q', label: 'Quartile', info:'~25%' },\r\n    { value: 'H', label: 'High', info:'~30%' },\r\n];\r\n\r\nexport {\r\n    errorCorrectionLevelList\r\n}","import { errorCorrectionLevelList } from './data';\r\n\r\nconst DEFAULT_ERROR_LEVEL_ITEM = 'qrcode:default-error-level';\r\n\r\n// 获取默认容错等级\r\nexport function getDefaultErrorLevel() :string  {\r\n  const defaultLevel = localStorage.getItem(DEFAULT_ERROR_LEVEL_ITEM);\r\n  // 如果没有设置默认容错等级\r\n  return (defaultLevel === null)? 'M' : defaultLevel;\r\n}\r\n\r\n// 设置默认容错等级\r\nexport function setDefaultErrorLevel(level: string) : void  {\r\n  const d = errorCorrectionLevelList.find((v) => { return v.value === level});\r\n  if (d) {\r\n    localStorage.setItem(DEFAULT_ERROR_LEVEL_ITEM, level);\r\n  } else {\r\n    localStorage.setItem(DEFAULT_ERROR_LEVEL_ITEM, 'M');\r\n  }\r\n}\r\n\r\n// 获取容错等级的提示信息\r\nexport function getErrorLevelTip(level: string) :string {\r\n  const t = errorCorrectionLevelList.find((item) => { return item.value === level; });\r\n  if(t) return t.info;\r\n  return \"\";\r\n}\r\n\r\nconst DEFAULT_SIZE_ITEM = 'qrcode:default-size';\r\n// 获取默认尺寸\r\nexport function getDefaultSize() :number  {\r\n  const item = localStorage.getItem(DEFAULT_SIZE_ITEM);\r\n  // 如果没有设置默认尺寸\r\n  if(item === null) return 160;\r\n  const size = parseInt(item); //\r\n  return (size < 160)? 160 : size;\r\n}\r\n\r\n// 设置默认尺寸\r\nexport function setDefaultSize(size: number) : void  {\r\n  if (size >= 160 ) {\r\n    localStorage.setItem(DEFAULT_SIZE_ITEM, size.toString());\r\n  } else {\r\n    localStorage.setItem(DEFAULT_SIZE_ITEM, '160');\r\n  }\r\n}","import { Select, Form, Divider, notification, Slider, Space } from \"antd\";\r\nimport { getDefaultErrorLevel, setDefaultErrorLevel, getDefaultSize, setDefaultSize } from \"./lib\";\r\nimport { useState } from \"react\";\r\nimport { errorCorrectionLevelList } from \"./data\";\r\n\r\nconst QRCodeGeneratorSetting = () => {\r\n  const [ level, setLevel ] = useState(getDefaultErrorLevel()); // 默认容错级别\r\n  const [ size, setSize ] = useState(getDefaultSize()); // 默认尺寸\r\n\r\n  return (\r\n    <>\r\n      <Divider orientation=\"left\" plain>二维码生成</Divider>\r\n      <Form.Item label=\"默认容错等级\">\r\n        <Select\r\n          value={ level }\r\n          style={{ width: 240 }}\r\n          onChange={ (value) => { setLevel(value); setDefaultErrorLevel(value); } }\r\n          options={ errorCorrectionLevelList }\r\n        />\r\n      </Form.Item>\r\n      <Form.Item label=\"默认尺寸\">\r\n        <Space>\r\n          <div style={ {width: \"520px\"} }>\r\n            <Slider\r\n              value={ size }\r\n              min = { 160 }\r\n              max = { 360 }\r\n              // tooltip={{ open: true, placement: 'top' }}\r\n              onChange={ (value) => { setSize(value); setDefaultSize(value); }}\r\n            />\r\n          </div>\r\n          { size }\r\n        </Space>\r\n      </Form.Item>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default QRCodeGeneratorSetting;","// 输出/输入数据编码列表\nexport const codeList  = [\n  \"HEX\",\n  \"Base64\"\n];","const DEFAULT_CODE_ITEM = 'rc4-crypto:default-code';\n\n// 获取默认编码 HEX / Base64\nexport function getDefaultCode() :string  {\n  const code = localStorage.getItem(DEFAULT_CODE_ITEM);\n  return (code === null)? \"Base64\" : code;\n}\n\n// 设置默认编码 HEX / Base64\nexport function setDefaultCode(code: string) : void  {\n  localStorage.setItem(DEFAULT_CODE_ITEM,code);\n}\n\nconst DEFAULT_PASSPHRASE_ITEM = 'rc4-crypto:default-passphrase';\n\n// 获取默认密钥\nexport function getDefaultPassphrase() :string  {\n  const passphrase = localStorage.getItem(DEFAULT_PASSPHRASE_ITEM);\n  return (passphrase === null)? \"\" : passphrase;\n}\n\n// 设置默认密钥\nexport function setDefaultPassphrase(passphrase: string) : void  {\n  localStorage.setItem(DEFAULT_PASSPHRASE_ITEM,passphrase);\n}","import { Select, Form, Divider, Input, Space } from \"antd\";\nimport React,{ useState } from \"react\";\nimport { arrayToOptions } from \"../../lib/array\"\nimport { codeList } from \"./data\";\nimport { getDefaultCode, setDefaultCode } from \"./lib\";\nimport { getDefaultPassphrase, setDefaultPassphrase } from \"./lib\";\n\nconst RabbitCryptoSetting = () => {\n\n  const [ code, setCode ] = useState(getDefaultCode()); // 默认编码\n  const [ passphrase, setPassphrase ] = useState(getDefaultPassphrase()); // 默认密钥\n\n  // 密钥 Passphrase 输入处理\n  const onPassphraseChange = (e :React.ChangeEvent<HTMLInputElement>) => {\n    const v = e.target.value.trim();\n    setPassphrase(v);\n    setDefaultPassphrase(v);\n  }\n\n  return (\n    <>\n      <Divider orientation=\"left\" plain>RC4 加解密</Divider>\n      <Form.Item label=\"默认编码\">\n        <Select\n          value={ code }\n          style={{ width: 240 }}\n          onChange={ (v :string) => { setCode(v); setDefaultCode(v); } }\n          options={ arrayToOptions(codeList) }\n        />\n      </Form.Item>\n      <Form.Item label=\"默认密钥\">\n        <Space>\n          <Input\n            showCount\n            maxLength= { 256 }\n            allowClear\n            style={ { width: \"520px\" } }\n            onChange={ onPassphraseChange }\n            value= { passphrase } />\n        </Space>\n      </Form.Item>\n    </>\n  );\n}\n\nexport default RabbitCryptoSetting;","// 输出/输入数据编码列表\nexport const codeList  = [\n  \"HEX\",\n  \"Base64\"\n];","const DEFAULT_CODE_ITEM = 'rabbit-crypto:default-code';\n\n// 获取默认编码 HEX / Base64\nexport function getDefaultCode() :string  {\n  const code = localStorage.getItem(DEFAULT_CODE_ITEM);\n  return (code === null)? \"Base64\" : code;\n}\n\n// 设置默认编码 HEX / Base64\nexport function setDefaultCode(code: string) : void  {\n  localStorage.setItem(DEFAULT_CODE_ITEM,code);\n}\n\nconst DEFAULT_IV_ITEM = 'rabbit-crypto:default-iv';\n\n// 获取默认偏移量\nexport function getDefaultIV() :string  {\n  const iv = localStorage.getItem(DEFAULT_IV_ITEM);\n  return (iv === null)? \"\" : iv;\n}\n\n// 设置默认偏移量\nexport function setDefaultIV(iv: string) : void  {\n  localStorage.setItem(DEFAULT_IV_ITEM,iv);\n}\n\n\nconst DEFAULT_PASSPHRASE_ITEM = 'rabbit-crypto:default-passphrase';\n\n// 获取默认密钥\nexport function getDefaultPassphrase() :string  {\n  const passphrase = localStorage.getItem(DEFAULT_PASSPHRASE_ITEM);\n  return (passphrase === null)? \"\" : passphrase;\n}\n\n// 设置默认密钥\nexport function setDefaultPassphrase(passphrase: string) : void  {\n  localStorage.setItem(DEFAULT_PASSPHRASE_ITEM,passphrase);\n}\n\n// 根据输入的密钥长度生成密钥长度提示\nexport const genPassphraseLimitLength = (length :number) :number => {\n  return 16; // Rabbit 密钥长度 16位\n}\n","import { Select, Form, Divider, Input, Space } from \"antd\";\nimport React,{ useState } from \"react\";\nimport { arrayToOptions } from \"../../lib/array\"\nimport { codeList } from \"./data\";\nimport { getDefaultCode, setDefaultCode } from \"./lib\";\nimport { getDefaultIV, setDefaultIV } from \"./lib\";\nimport { getDefaultPassphrase, setDefaultPassphrase, genPassphraseLimitLength } from \"./lib\";\nimport type { InputStatus } from \"antd/es/_util/statusUtils\";\n\nconst RabbitCryptoSetting = () => {\n\n  const [ code, setCode ] = useState(getDefaultCode()); // 默认编码\n  const [ iv, setIV ] = useState(getDefaultIV()); // 默认偏移量\n  const [ ivStatus, setIVStatus ] = useState('' as InputStatus); // 偏移量提醒\n  const [ passphrase, setPassphrase ] = useState(getDefaultPassphrase()); // 默认密钥\n  const [ passphraseStatus, setPassphraseStatus ] = useState('' as InputStatus); // 密钥提醒\n  const [ passphraseLimitLength, setPassphraseLimitLength ] = useState(genPassphraseLimitLength(getDefaultPassphrase().length)); // 密钥长度要求 16 / 24 / 32 \n \n  // 偏移量 IV 输入处理\n  const onIVChange = (e :React.ChangeEvent<HTMLInputElement>) => {\n    const v = e.target.value;\n    setIV(v); \n    if(v.length === 0 || v.length == 8) { // IV长度必须为 0 \n      setDefaultIV(v);\n      setIVStatus(\"\");\n    } else {\n      setIVStatus(\"error\");\n    }\n  }\n\n  // 密钥 Passphrase 输入处理\n  const onPassphraseChange = (e :React.ChangeEvent<HTMLInputElement>) => {\n    const v = e.target.value.trim();\n    setPassphrase(v); \n    // Passphrase 长度必须为 0 / 8\n    if(v.length === 0 || v.length == 16) {\n      setDefaultPassphrase(v);\n      setPassphraseStatus(\"\");\n    } else {\n      setPassphraseStatus(\"error\");\n    }\n    // 根据密钥长度变化需要变量密钥长度提示\n    setPassphraseLimitLength(genPassphraseLimitLength(v.length));\n  }\n\n  return (\n    <>\n      <Divider orientation=\"left\" plain>Rabbit 加解密</Divider>\n      <Form.Item label=\"默认编码\">\n        <Select\n          value={ code }\n          style={{ width: 240 }}\n          onChange={ (v :string) => { setCode(v); setDefaultCode(v); } }\n          options={ arrayToOptions(codeList) }\n        />\n      </Form.Item>\n      <Form.Item label=\"默认偏移量(IV)\">\n        <Space>\n          <Input \n            status= { ivStatus }\n            maxLength = { 8 }\n            allowClear\n            style={ { width: \"520px\" } }\n            onChange={ onIVChange }\n            value= { iv } />\n          { iv.length? iv.length + \" / 8\" : null }\n        </Space>\n      </Form.Item>\n      <Form.Item label=\"默认密钥\">\n        <Space>\n          <Input \n            status= { passphraseStatus }\n            maxLength= { 16 }\n            allowClear\n            style={ { width: \"520px\" } }\n            onChange={ onPassphraseChange }\n            value= { passphrase } />\n          { passphrase.length? passphrase.length + \" / \" + 16  : null }\n        </Space>\n      </Form.Item>\n    </>\n  );\n}\n\nexport default RabbitCryptoSetting;","import { Form, Switch, Divider, notification } from \"antd\";\nimport { getSiderFlag } from \"../../lib/setting\";\nimport { useState } from \"react\";\nimport \"./setting.css\";\nimport { debounce } from \"../../lib\";\n\nimport { default as AppStoreSetting } from \"../AppStore/setting\";\nimport { default as HashSetting } from \"../Hash/setting\";\nimport { default as ColorSetting } from \"../Color/setting\";\nimport { default as QRCodeGeneratorSetting } from \"../QRCodeGenerator/setting\";\nimport { default as AESCryptoSetting } from \"../AESCrypto/setting\";\nimport { default as DESCryptoSetting } from \"../DESCrypto/setting\";\nimport { default as TripleDESCryptoSetting } from \"../TripleDESCrypto/setting\";\nimport { default as RabbitCryptoSetting } from \"../RabbitCrypto/setting\";\nimport { default as RC4CryptoSetting } from \"../RC4Crypto/setting\";\nimport { default as PBKDF2CalcSetting } from \"../PBKDF2Calc/setting\";\n\nconst Setting = () => {\n  const genSettingFormHeight = () => {\n    return (window.innerHeight - 70) + \"px\";\n  };\n\n  const [ siderFlag, setSiderFlag ] = useState(getSiderFlag());\n  const [ height, setHeight ] = useState(genSettingFormHeight()); // 窗口大小高度\n\n  const onChangeSiderFlag = (checked: boolean) => {\n    setSiderFlag(checked);\n    localStorage.setItem('sider-flag',checked + \"\");\n  };\n\n  // 窗体大小发生变化,改变窗口大小\n  window.addEventListener('resize', debounce(() => { setHeight(genSettingFormHeight()) },100) );\n\n  return (\n    <div style={ { height: height, overflowY: \"auto\" } }>\n      <Form\n        labelCol={{ span: 5 }}\n        wrapperCol={{ span: 18 }}\n        layout=\"horizontal\"\n        style={{ maxWidth: 800 }}\n      >\n        <Form.Item label=\"默认展开右边栏\">\n          <Switch checked={ siderFlag } onChange={ onChangeSiderFlag } />\n        </Form.Item>\n        <AppStoreSetting />\n        <HashSetting />\n        <ColorSetting />\n        <QRCodeGeneratorSetting />\n        <AESCryptoSetting />\n        <DESCryptoSetting />\n        <TripleDESCryptoSetting />\n        <RabbitCryptoSetting />\n        <RC4CryptoSetting />\n        <PBKDF2CalcSetting />\n      </Form>\n    </div>\n  );\n}\n\nexport default Setting;","// 加密模式列表\nexport const modeList = [\n  \"CBC\",\n  \"CFB\",\n  \"CTR\",\n  \"OFB\",\n  \"ECB\", // 不需要 IV\n];\n\n// 填充模式列表\nexport const paddingList = [\n  \"Pkcs7\",\n  \"AnsiX923\",\n  \"Iso10126\",\n  \"Iso97971\",\n  \"ZeroPadding\",\n  // \"NoPadding\",\n];\n\n// 输出/输入数据编码列表\nexport const codeList  = [\n  \"HEX\",\n  \"Base64\"\n];\n","const DEFAULT_MODE_ITEM = '3des-crypto:default-mode';\n\n// 获取默认模式\nexport function getDefaultMode() :string  {\n  const mode = localStorage.getItem(DEFAULT_MODE_ITEM);\n  return (mode === null)? \"CBC\" : mode;\n}\n\n// 设置默认模式\nexport function setDefaultMode(mode: string) : void  {\n  localStorage.setItem(DEFAULT_MODE_ITEM,mode);\n}\n\nconst DEFAULT_PADDING_ITEM = '3des-crypto:default-padding';\n\n// 获取默认填充\nexport function getDefaultPadding() :string  {\n  const padding = localStorage.getItem(DEFAULT_PADDING_ITEM);\n  return (padding === null)? \"Pkcs7\" : padding;\n}\n\n// 设置默认填充\nexport function setDefaultPadding(padding: string) : void  {\n  localStorage.setItem(DEFAULT_PADDING_ITEM,padding);\n}\n\nconst DEFAULT_CODE_ITEM = '3des-crypto:default-code';\n\n// 获取默认编码 HEX / Base64\nexport function getDefaultCode() :string  {\n  const code = localStorage.getItem(DEFAULT_CODE_ITEM);\n  return (code === null)? \"Base64\" : code;\n}\n\n// 设置默认编码 HEX / Base64\nexport function setDefaultCode(code: string) : void  {\n  localStorage.setItem(DEFAULT_CODE_ITEM,code);\n}\n\nconst DEFAULT_IV_ITEM = '3des-crypto:default-iv';\n\n// 获取默认偏移量\nexport function getDefaultIV() :string  {\n  const iv = localStorage.getItem(DEFAULT_IV_ITEM);\n  return (iv === null)? \"\" : iv;\n}\n\n// 设置默认偏移量\nexport function setDefaultIV(iv: string) : void  {\n  localStorage.setItem(DEFAULT_IV_ITEM,iv);\n}\n\n\nconst DEFAULT_PASSPHRASE_ITEM = '3des-crypto:default-passphrase';\n\n// 获取默认密钥\nexport function getDefaultPassphrase() :string  {\n  const passphrase = localStorage.getItem(DEFAULT_PASSPHRASE_ITEM);\n  return (passphrase === null)? \"\" : passphrase;\n}\n\n// 设置默认密钥\nexport function setDefaultPassphrase(passphrase: string) : void  {\n  localStorage.setItem(DEFAULT_PASSPHRASE_ITEM,passphrase);\n}\n\n// 根据输入的密钥长度生成密钥长度提示\nexport const genPassphraseLimitLength = (length :number) :number => {\n  return 24; // 3DES 密钥长度 8位\n}\n\n\nimport * as CryptoJS from 'crypto-js';\n// import { BlockCipherMode } from 'crypto-js/';\n\n// 获取模式\nexport const getMode = (mode :string) => {\n  switch(mode) {\n    case \"CFB\": return CryptoJS.mode.CFB;\n    case \"OFB\": return CryptoJS.mode.OFB;\n    case \"ECB\": return CryptoJS.mode.ECB;\n    case \"CTR\": return CryptoJS.mode.CTR;\n    case \"CTRGladman\": return CryptoJS.mode.CTRGladman;\n  }\n  return CryptoJS.mode.CBC\n}\n\n// 获取填充\nexport const getPadding = (padding :string) => {\n  switch(padding) {\n    case \"AnsiX923\": return CryptoJS.pad.AnsiX923;\n    case \"Iso10126\": return CryptoJS.pad.Iso10126;\n    case \"Iso97971\": return CryptoJS.pad.Iso97971;\n    case \"ZeroPadding\": return CryptoJS.pad.ZeroPadding;\n    case \"NoPadding\": return CryptoJS.pad.NoPadding;\n  }\n  return CryptoJS.pad.Pkcs7\n}\n\n\n\n","import { Select, Form, Divider, Input, Space } from \"antd\";\nimport React,{ useState } from \"react\";\nimport { arrayToOptions } from \"../../lib/array\"\nimport { modeList, paddingList, codeList } from \"./data\";\nimport { getDefaultMode, setDefaultMode } from \"./lib\";\nimport { getDefaultPadding, setDefaultPadding } from \"./lib\";\nimport { getDefaultCode, setDefaultCode } from \"./lib\";\nimport { getDefaultIV, setDefaultIV } from \"./lib\";\nimport { getDefaultPassphrase, setDefaultPassphrase, genPassphraseLimitLength } from \"./lib\";\nimport type { InputStatus } from \"antd/es/_util/statusUtils\";\n\nconst DESCryptoSetting = () => {\n\n  const [ mode, setMode ] = useState(getDefaultMode()); // 默认 mode\n  const [ padding, setPadding ] = useState(getDefaultPadding()); // 默认填充\n  const [ code, setCode ] = useState(getDefaultCode()); // 默认编码\n  const [ iv, setIV ] = useState(getDefaultIV()); // 默认偏移量\n  const [ ivStatus, setIVStatus ] = useState('' as InputStatus); // 偏移量提醒\n  const [ passphrase, setPassphrase ] = useState(getDefaultPassphrase()); // 默认密钥\n  const [ passphraseStatus, setPassphraseStatus ] = useState('' as InputStatus); // 密钥提醒\n  const [ passphraseLimitLength, setPassphraseLimitLength ] = useState(genPassphraseLimitLength(getDefaultPassphrase().length)); // 密钥长度要求 16 / 24 / 32 \n \n  // 偏移量 IV 输入处理\n  const onIVChange = (e :React.ChangeEvent<HTMLInputElement>) => {\n    const v = e.target.value;\n    setIV(v); \n    if(v.length === 0 || v.length == 8) { // IV长度必须为 0 \n      setDefaultIV(v);\n      setIVStatus(\"\");\n    } else {\n      setIVStatus(\"error\");\n    }\n  }\n\n  // 密钥 Passphrase 输入处理\n  const onPassphraseChange = (e :React.ChangeEvent<HTMLInputElement>) => {\n    const v = e.target.value.trim();\n    setPassphrase(v); \n    // Passphrase 长度必须为 0 / 24\n    // 长度必须  24字符 分成 3 组 8 字节的密钥\n    if(v.length === 0 || v.length == 24) {\n      setDefaultPassphrase(v);\n      setPassphraseStatus(\"\");\n    } else {\n      setPassphraseStatus(\"error\");\n    }\n    // 根据密钥长度变化需要变量密钥长度提示\n    setPassphraseLimitLength(genPassphraseLimitLength(v.length));\n  }\n\n  return (\n    <>\n      <Divider orientation=\"left\" plain>3DES 加解密</Divider>\n      <Form.Item label=\"默认模式\">\n        <Select\n          value={ mode }\n          style={{ width: 240 }}\n          onChange={ (v :string) => { setMode(v); setDefaultMode(v); } }\n          options={ arrayToOptions(modeList) }\n        />\n      </Form.Item>\n      <Form.Item label=\"默认填充\">\n        <Select\n          value={ padding }\n          style={{ width: 240 }}\n          onChange={ (v :string) => { setPadding(v); setDefaultPadding(v); } }\n          options={ arrayToOptions(paddingList) }\n        />\n      </Form.Item>\n      <Form.Item label=\"默认编码\">\n        <Select\n          value={ code }\n          style={{ width: 240 }}\n          onChange={ (v :string) => { setCode(v); setDefaultCode(v); } }\n          options={ arrayToOptions(codeList) }\n        />\n      </Form.Item>\n      <Form.Item label=\"默认偏移量(IV)\">\n        <Space>\n          <Input \n            status= { ivStatus }\n            maxLength = { 8 }\n            allowClear\n            style={ { width: \"520px\" } }\n            onChange={ onIVChange }\n            value= { iv } />\n          { iv.length? iv.length + \" / 8\" : null }\n        </Space>\n      </Form.Item>\n      <Form.Item label=\"默认密钥\">\n        <Space>\n          <Input \n            status= { passphraseStatus }\n            maxLength= { 24 }\n            allowClear\n            style={ { width: \"520px\" } }\n            onChange={ onPassphraseChange }\n            value= { passphrase } />\n          { passphrase.length? passphrase.length + \" / \" + 24  : null }\n        </Space>\n      </Form.Item>\n    </>\n  );\n}\n\nexport default DESCryptoSetting;","// 数据转成 AntD Select 支持的数据格式 { label: \"xxx\", value: \"xxx\" }\r\nexport function arrayToOptions(arr :Array<any>) :Array<{label :string,value :string}> {\r\n  return arr.map( (item ,index) => { return { label: item ,value:item} });\r\n}","// 复制到粘贴板\r\nexport async function copyTextToClipboard(text: string) {\r\n  if (\"clipboard\" in navigator) {\r\n    return await navigator.clipboard.writeText(text);\r\n  } else {\r\n    return document.execCommand('copy', true, text);\r\n  }\r\n}\r\n\r\n// 防抖函数\r\nexport function debounce(operate:Function, delay:number) {\r\n  let time :any = null\r\n  let timer :any = null\r\n  let newTime = null\r\n  function task() {\r\n    newTime =+ new Date()\r\n    if(newTime - time < delay) {\r\n      timer = setTimeout(task, delay)\r\n    } else {\r\n      operate()\r\n      timer = null\r\n    }\r\n    time = newTime\r\n  }\r\n  return function () {\r\n    // 更新时间戳\r\n    time =+ new Date();\r\n    if(!timer) {\r\n      timer = setTimeout(task, delay)\r\n    }\r\n  }\r\n}\r\n\r\n// 每间隔多少字符插入指定了符\r\nexport function insertIntervalString(str :string, disNum :number = 4, insertStr:string  = \" \") {\r\n  return str.replace(new RegExp(\"(.{\" + disNum + \"})\", \"g\"), \"$1\" + insertStr);\r\n}\r\n"],"names":["modeList","paddingList","codeList","capacityList","DEFAULT_MODE_ITEM","getDefaultMode","mode","localStorage","getItem","setDefaultMode","setItem","DEFAULT_PADDING_ITEM","getDefaultPadding","padding","setDefaultPadding","DEFAULT_CODE_ITEM","getDefaultCode","code","setDefaultCode","DEFAULT_IV_ITEM","getDefaultIV","iv","setDefaultIV","DEFAULT_PASSPHRASE_ITEM","getDefaultPassphrase","passphrase","setDefaultPassphrase","genPassphraseLimitLength","length","genCapacity","getMode","getPadding","setMode","useState","setPadding","setCode","setIV","ivStatus","setIVStatus","setPassphrase","passphraseStatus","setPassphraseStatus","passphraseLimitLength","setPassphraseLimitLength","orientation","plain","label","value","style","width","onChange","v","options","status","maxLength","allowClear","e","target","trim","app","setApp","getDefaultApp","setDefaultApp","result","appList","push","key","getAppList","getDefaultPasswordList","PASSWORD_LIST_ITEM","getPasswordList","list","arr","split","filter","item","setPasswordList","join","TextArea","setValue","map","replaceAll","placeholder","autoSize","minRows","maxRows","getHashAlgo","hash","DEFAULT_HASH_ALGO","getDefaultHashAlgo","algo","setDefaultHashAlgo","DEFAULT_SALT","getDefaultSalt","salt","setDefaultSalt","DEFAULT_ITERATION","getDefaultIteration","iter","parseInt","setDefaultIteration","toString","DEFAULT_KEY_LENGTH","getDefaultKeyLength","len","setDefaultKeyLength","genValuePlaceholder","setAlgo","setSalt","setIter","keyLength","setKeyLength","showCount","addonAfter","min","max","title","errorCorrectionLevelList","info","DEFAULT_ERROR_LEVEL_ITEM","getDefaultErrorLevel","defaultLevel","setDefaultErrorLevel","level","getErrorLevelTip","t","DEFAULT_SIZE_ITEM","getDefaultSize","size","setDefaultSize","setLevel","setSize","genSettingFormHeight","window","innerHeight","siderFlag","setSiderFlag","height","setHeight","addEventListener","overflowY","labelCol","span","wrapperCol","layout","maxWidth","checked","arrayToOptions","index","async","copyTextToClipboard","text","navigator","clipboard","writeText","document","execCommand","debounce","operate","delay","time","timer","newTime","task","Date","setTimeout","insertIntervalString","str","disNum","insertStr","replace","RegExp"],"sourceRoot":""}