{"version":3,"file":"1062.renderer.js","mappings":"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","sources":["webpack:///./src/renderer/App/AESCrypto/data.ts","webpack:///./src/renderer/App/AESCrypto/lib.ts","webpack:///./src/renderer/App/AESCrypto/setting.tsx","webpack:///./src/renderer/App/AppStore/setting.tsx","webpack:///./src/renderer/App/Hash/lib.ts","webpack:///./src/renderer/App/Hash/setting.tsx","webpack:///./src/renderer/App/QRCodeGenerator/data.ts","webpack:///./src/renderer/App/QRCodeGenerator/lib.ts","webpack:///./src/renderer/App/QRCodeGenerator/setting.tsx","webpack:///./src/renderer/App/Setting/index.tsx","webpack:///./src/renderer/lib/array.ts","webpack:///./src/renderer/lib/index.ts"],"sourcesContent":["// 加密模式列表\r\nexport const modeList = [\r\n  \"CBC\",\r\n  \"CFB\",\r\n  \"CTR\",\r\n  \"OFB\",\r\n  \"ECB\", // 不需要 IV\r\n];\r\n\r\n// 填充模式列表\r\nexport const paddingList = [\r\n  \"Pkcs7\",\r\n  \"AnsiX923\",\r\n  \"Iso10126\",\r\n  \"Iso97971\",\r\n  \"ZeroPadding\",\r\n  \"NoPadding\",\r\n];\r\n\r\n// 输出/输入数据编码列表\r\nexport const codeList  = [\r\n  \"HEX\",\r\n  \"Base64\"\r\n];\r\n\r\n// 位数\r\nexport const capacityList = [\r\n  128,\r\n  192,\r\n  256,\r\n];","const DEFAULT_MODE_ITEM = 'aes-crypto:default-mode';\r\n\r\n// 获取默认模式\r\nexport function getDefaultMode() :string  {\r\n  const mode = localStorage.getItem(DEFAULT_MODE_ITEM);\r\n  return (mode === null)? \"CBC\" : mode;\r\n}\r\n\r\n// 设置默认模式\r\nexport function setDefaultMode(mode: string) : void  {\r\n  localStorage.setItem(DEFAULT_MODE_ITEM,mode);\r\n}\r\n\r\nconst DEFAULT_PADDING_ITEM = 'aes-crypto:default-padding';\r\n\r\n// 获取默认填充\r\nexport function getDefaultPadding() :string  {\r\n  const padding = localStorage.getItem(DEFAULT_PADDING_ITEM);\r\n  return (padding === null)? \"Pkcs7\" : padding;\r\n}\r\n\r\n// 设置默认填充\r\nexport function setDefaultPadding(padding: string) : void  {\r\n  localStorage.setItem(DEFAULT_PADDING_ITEM,padding);\r\n}\r\n\r\nconst DEFAULT_CODE_ITEM = 'aes-crypto:default-code';\r\n\r\n// 获取默认编码 HEX / Base64\r\nexport function getDefaultCode() :string  {\r\n  const code = localStorage.getItem(DEFAULT_CODE_ITEM);\r\n  return (code === null)? \"Base64\" : code;\r\n}\r\n\r\n// 设置默认编码 HEX / Base64\r\nexport function setDefaultCode(code: string) : void  {\r\n  localStorage.setItem(DEFAULT_CODE_ITEM,code);\r\n}\r\n\r\nconst DEFAULT_IV_ITEM = 'aes-crypto:default-iv';\r\n\r\n// 获取默认偏移量\r\nexport function getDefaultIV() :string  {\r\n  const iv = localStorage.getItem(DEFAULT_IV_ITEM);\r\n  return (iv === null)? \"\" : iv;\r\n}\r\n\r\n// 设置默认偏移量\r\nexport function setDefaultIV(iv: string) : void  {\r\n  localStorage.setItem(DEFAULT_IV_ITEM,iv);\r\n}\r\n\r\n\r\nconst DEFAULT_PASSPHRASE_ITEM = 'aes-crypto:default-passphrase';\r\n\r\n// 获取默认密钥\r\nexport function getDefaultPassphrase() :string  {\r\n  const passphrase = localStorage.getItem(DEFAULT_PASSPHRASE_ITEM);\r\n  return (passphrase === null)? \"\" : passphrase;\r\n}\r\n\r\n// 设置默认密钥\r\nexport function setDefaultPassphrase(passphrase: string) : void  {\r\n  localStorage.setItem(DEFAULT_PASSPHRASE_ITEM,passphrase);\r\n}\r\n\r\n// 根据输入的密钥长度生成密钥长度提示\r\nexport const genPassphraseLimitLength = (length :number) :number => {\r\n  if(length >= 30) return 32; // 都 30 位了说明需要是 32 位的密钥 (AES-256)\r\n  if(length >= 20) return 24; // 都 24 位了说明需要是 24 位的密钥 (AES-2192)\r\n  return 16; // 默认 AES-128\r\n}\r\n\r\n// 根据密钥长度生成位数\r\nexport const genCapacity = (length: number) :number => {\r\n  if(length == 24) return 192;\r\n  if(length == 32) return 256;\r\n  return 128;\r\n}\r\n\r\nimport * as CryptoJS from 'crypto-js';\r\n// import { BlockCipherMode } from 'crypto-js/';\r\n\r\n// 获取模式\r\nexport const getMode = (mode :string) => {\r\n  switch(mode) {\r\n    case \"CFB\": return CryptoJS.mode.CFB;\r\n    case \"OFB\": return CryptoJS.mode.OFB;\r\n    case \"ECB\": return CryptoJS.mode.ECB;\r\n    case \"CTR\": return CryptoJS.mode.CTR;\r\n    case \"CTRGladman\": return CryptoJS.mode.CTRGladman;\r\n  }\r\n  return CryptoJS.mode.CBC\r\n}\r\n\r\n// 获取填充\r\nexport const getPadding = (padding :string) => {\r\n  switch(padding) {\r\n    case \"AnsiX923\": return CryptoJS.pad.AnsiX923;\r\n    case \"Iso10126\": return CryptoJS.pad.Iso10126;\r\n    case \"Iso97971\": return CryptoJS.pad.Iso97971;\r\n    case \"ZeroPadding\": return CryptoJS.pad.ZeroPadding;\r\n    case \"NoPadding\": return CryptoJS.pad.NoPadding;\r\n  }\r\n  return CryptoJS.pad.Pkcs7\r\n}\r\n\r\n\r\n\r\n","import { Select, Form, Divider, Input, Space } from \"antd\";\r\nimport React,{ useState } from \"react\";\r\nimport { arrayToOptions } from \"../../lib/array\"\r\nimport { modeList, paddingList, codeList } from \"./data\";\r\nimport { getDefaultMode, setDefaultMode } from \"./lib\";\r\nimport { getDefaultPadding, setDefaultPadding } from \"./lib\";\r\nimport { getDefaultCode, setDefaultCode } from \"./lib\";\r\nimport { getDefaultIV, setDefaultIV } from \"./lib\";\r\nimport { getDefaultPassphrase, setDefaultPassphrase, genPassphraseLimitLength } from \"./lib\";\r\nimport type { InputStatus } from \"antd/es/_util/statusUtils\";\r\n\r\nconst AppStoreSetting = () => {\r\n\r\n  const [ mode, setMode ] = useState(getDefaultMode()); // 默认 mode\r\n  const [ padding, setPadding ] = useState(getDefaultPadding()); // 默认填充\r\n  const [ code, setCode ] = useState(getDefaultCode()); // 默认编码\r\n  const [ iv, setIV ] = useState(getDefaultIV()); // 默认偏移量\r\n  const [ ivStatus, setIVStatus ] = useState('' as InputStatus); // 偏移量提醒\r\n  const [ passphrase, setPassphrase ] = useState(getDefaultPassphrase()); // 默认密钥\r\n  const [ passphraseStatus, setPassphraseStatus ] = useState('' as InputStatus); // 密钥提醒\r\n  const [ passphraseLimitLength, setPassphraseLimitLength ] = useState(genPassphraseLimitLength(getDefaultPassphrase().length)); // 密钥长度要求 16 / 24 / 32 \r\n \r\n  // 偏移量 IV 输入处理\r\n  const onIVChange = (e :React.ChangeEvent<HTMLInputElement>) => {\r\n    const v = e.target.value;\r\n    setIV(v); \r\n    if(v.length === 0 || v.length == 16) { // IV长度必须为 0 \r\n      setDefaultIV(v);\r\n      setIVStatus(\"\");\r\n    } else {\r\n      setIVStatus(\"error\");\r\n    }\r\n  }\r\n\r\n  // 密钥 Passphrase 输入处理\r\n  const onPassphraseChange = (e :React.ChangeEvent<HTMLInputElement>) => {\r\n    const v = e.target.value.trim();\r\n    setPassphrase(v); \r\n    // Passphrase 长度必须为 0 / 16 (128位) / 24(192位) / 32(256位)\r\n    if(v.length === 0 || v.length == 16 || v.length == 24 || v.length == 32) {\r\n      setDefaultPassphrase(v);\r\n      setPassphraseStatus(\"\");\r\n    } else {\r\n      setPassphraseStatus(\"error\");\r\n    }\r\n    // 根据密钥长度变化需要变量密钥长度提示\r\n    setPassphraseLimitLength(genPassphraseLimitLength(v.length));\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Divider orientation=\"left\" plain>AES 加解密</Divider>\r\n      <Form.Item label=\"默认模式\">\r\n        <Select\r\n          value={ mode }\r\n          style={{ width: 240 }}\r\n          onChange={ (v :string) => { setMode(v); setDefaultMode(v); } }\r\n          options={ arrayToOptions(modeList) }\r\n        />\r\n      </Form.Item>\r\n      <Form.Item label=\"默认填充\">\r\n        <Select\r\n          value={ padding }\r\n          style={{ width: 240 }}\r\n          onChange={ (v :string) => { setPadding(v); setDefaultPadding(v); } }\r\n          options={ arrayToOptions(paddingList) }\r\n        />\r\n      </Form.Item>\r\n      <Form.Item label=\"默认编码\">\r\n        <Select\r\n          value={ code }\r\n          style={{ width: 240 }}\r\n          onChange={ (v :string) => { setCode(v); setDefaultCode(v); } }\r\n          options={ arrayToOptions(codeList) }\r\n        />\r\n      </Form.Item>\r\n      <Form.Item label=\"默认偏移量(IV)\">\r\n        <Space>\r\n          <Input \r\n            status= { ivStatus }\r\n            maxLength = { 16 }\r\n            allowClear\r\n            style={ { width: \"520px\" } }\r\n            onChange={ onIVChange }\r\n            value= { iv } />\r\n          { iv.length? iv.length + \" / 16\" : null }\r\n        </Space>\r\n      </Form.Item>\r\n      <Form.Item label=\"默认密钥\">\r\n        <Space>\r\n          <Input \r\n            status= { passphraseStatus }\r\n            maxLength= { 32 }\r\n            allowClear\r\n            style={ { width: \"520px\" } }\r\n            onChange={ onPassphraseChange }\r\n            value= { passphrase } />\r\n          { passphrase.length? passphrase.length + \" / \" + passphraseLimitLength  : null }\r\n        </Space>\r\n      </Form.Item>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default AppStoreSetting;","import { Select, Form, Divider, notification } from \"antd\";\r\nimport { getDefaultApp,setDefaultApp } from \"./lib\";\r\nimport { useState } from \"react\";\r\nimport { appList } from \"../index\";\r\n\r\nconst AppStoreSetting = () => {\r\n  const [ app, setApp ] = useState(getDefaultApp()); // 默认展示的 app\r\n\r\n  const onChangeDefaultApp = (value: string) => {\r\n    setApp(value);\r\n    setDefaultApp(value);\r\n  };\r\n\r\n  // 应用列表\r\n  const getAppList = () => {\r\n    const result = [{ value: 'AppStore', label: '应用中心' }];\r\n    appList.forEach((v) => {\r\n      result.push({ value: v.key, label:  v.label });\r\n    });\r\n    return result;\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Divider orientation=\"left\" plain>应用中心</Divider>\r\n      <Form.Item label=\"默认展示应用\">\r\n        <Select\r\n          value={ app }\r\n          style={{ width: 240 }}\r\n          onChange={ onChangeDefaultApp }\r\n          options={ getAppList() }\r\n        />\r\n      </Form.Item>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default AppStoreSetting;","// 获取默认的常用密码列表\r\nexport function getDefaultPasswordList() :Array<string> {\r\n  return [\r\n    \"admin\",\r\n    \"123456\",\r\n    \"12345678\",\r\n    \"root\",\r\n    \"password\",\r\n    \"qwerty\",\r\n    \"1234\",\r\n    \"12345\",\r\n  ]\r\n}\r\n\r\nconst PASSWORD_LIST_ITEM = 'hash:password-list';\r\n\r\n// 获取设置的密码列表 如果没有设置使用默认列表\r\nexport function getPasswordList() :Array<string> {\r\n  const list = localStorage.getItem(PASSWORD_LIST_ITEM);\r\n  // 如果没有设置,返回默认的常用密码列表\r\n  if (null === list) return getDefaultPasswordList();\r\n\r\n  let arr = list.split(\",\");\r\n  arr = arr.filter((item) => { return item.trim() !== \"\" });\r\n  if (0 === arr.length) return getDefaultPasswordList();\r\n  \r\n  return arr;\r\n}\r\n\r\n// 设置密码列表 \r\nexport function setPasswordList(list: Array<string>) : void  {\r\n  localStorage.setItem(PASSWORD_LIST_ITEM,list.join(\",\"));\r\n}","import { Input, Form, Divider, notification } from \"antd\";\r\nconst { TextArea } = Input;\r\nimport { useState } from \"react\";\r\nimport { getPasswordList,setPasswordList } from \"./lib\"\r\n\r\nconst HashSetting = () => {\r\n  const [ value, setValue ] = useState(getPasswordList().join(\"\\n\"));\r\n\r\n  const onTextAreaChange = (e :React.ChangeEvent<HTMLTextAreaElement>) => {\r\n    const value = e.target.value;\r\n    let arr = value.trim().split(\"\\n\");\r\n    arr = arr.map((item) => { return item.trim().replaceAll(\" \",\"\"); }) // 去掉所有空格\r\n    arr = arr.filter((item) => { return \"\" !== item.trim() });  // remove empty elements. \r\n    // if(arr.length >= 10) {\r\n    //   setValue(arr.join(\"\\n\"));\r\n    //   return false;\r\n    // }\r\n    setValue(value);\r\n    // 更新配置信息\r\n    setPasswordList(arr);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Divider orientation=\"left\" plain>Hash 值计算</Divider>\r\n      <Form.Item label=\"展示默认字符串\">\r\n        <TextArea\r\n          value= { value }\r\n          onChange={ onTextAreaChange }\r\n          placeholder=\"每行一条数据\"\r\n          autoSize={{ minRows: 3, maxRows: 5 }}\r\n        />\r\n      </Form.Item>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default HashSetting;","// 容错率列表\r\nconst errorCorrectionLevelList = [\r\n    { value: 'L', label: 'Low', info:'~7%' },\r\n    { value: 'M', label: 'Medium', info:'~15%' },\r\n    { value: 'Q', label: 'Quartile', info:'~25%' },\r\n    { value: 'H', label: 'High', info:'~30%' },\r\n];\r\n\r\nexport {\r\n    errorCorrectionLevelList\r\n}","import { errorCorrectionLevelList } from './data';\r\n\r\nconst DEFAULT_ERROR_LEVEL_ITEM = 'qrcode:default-error-level';\r\n\r\n// 获取默认容错等级\r\nexport function getDefaultErrorLevel() :string  {\r\n  const defaultLevel = localStorage.getItem(DEFAULT_ERROR_LEVEL_ITEM);\r\n  // 如果没有设置默认容错等级\r\n  return (defaultLevel === null)? 'M' : defaultLevel;\r\n}\r\n\r\n// 设置默认容错等级\r\nexport function setDefaultErrorLevel(level: string) : void  {\r\n  const d = errorCorrectionLevelList.find((v) => { return v.value === level});\r\n  if (d) {\r\n    localStorage.setItem(DEFAULT_ERROR_LEVEL_ITEM, level);\r\n  } else {\r\n    localStorage.setItem(DEFAULT_ERROR_LEVEL_ITEM, 'M');\r\n  }\r\n}\r\n\r\n// 获取容错等级的提示信息\r\nexport function getErrorLevelTip(level: string) :string {\r\n  const t = errorCorrectionLevelList.find((item) => { return item.value === level; });\r\n  if(t) return t.info;\r\n  return \"\";\r\n}\r\n\r\nconst DEFAULT_SIZE_ITEM = 'qrcode:default-size';\r\n// 获取默认尺寸\r\nexport function getDefaultSize() :number  {\r\n  const item = localStorage.getItem(DEFAULT_SIZE_ITEM);\r\n  // 如果没有设置默认尺寸\r\n  if(item === null) return 160;\r\n  const size = parseInt(item); //\r\n  return (size < 160)? 160 : size;\r\n}\r\n\r\n// 设置默认尺寸\r\nexport function setDefaultSize(size: number) : void  {\r\n  if (size >= 160 ) {\r\n    localStorage.setItem(DEFAULT_SIZE_ITEM, size.toString());\r\n  } else {\r\n    localStorage.setItem(DEFAULT_SIZE_ITEM, '160');\r\n  }\r\n}","import { Select, Form, Divider, notification, Slider, Space } from \"antd\";\r\nimport { getDefaultErrorLevel, setDefaultErrorLevel, getDefaultSize, setDefaultSize } from \"./lib\";\r\nimport { useState } from \"react\";\r\nimport { errorCorrectionLevelList } from \"./data\";\r\n\r\nconst QRCodeGeneratorSetting = () => {\r\n  const [ level, setLevel ] = useState(getDefaultErrorLevel()); // 默认容错级别\r\n  const [ size, setSize ] = useState(getDefaultSize()); // 默认尺寸\r\n\r\n  return (\r\n    <>\r\n      <Divider orientation=\"left\" plain>二维码生成</Divider>\r\n      <Form.Item label=\"默认容错等级\">\r\n        <Select\r\n          value={ level }\r\n          style={{ width: 240 }}\r\n          onChange={ (value) => { setLevel(value); setDefaultErrorLevel(value); } }\r\n          options={ errorCorrectionLevelList }\r\n        />\r\n      </Form.Item>\r\n      <Form.Item label=\"默认尺寸\">\r\n        <Space>\r\n          <div style={ {width: \"520px\"} }>\r\n            <Slider\r\n              value={ size }\r\n              min = { 160 }\r\n              max = { 360 }\r\n              // tooltip={{ open: true, placement: 'top' }}\r\n              onChange={ (value) => { setSize(value); setDefaultSize(value); }}\r\n            />\r\n          </div>\r\n          { size }\r\n        </Space>\r\n      </Form.Item>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default QRCodeGeneratorSetting;","import { Form, Switch, Divider, notification } from \"antd\";\r\nimport { getSiderFlag } from \"../../lib/setting\";\r\nimport { useState } from \"react\";\r\nimport \"./setting.css\";\r\nimport { debounce } from \"../../lib\";\r\n\r\nimport { default as AppStoreSetting } from \"../AppStore/setting\";\r\nimport { default as HashSetting } from \"../Hash/setting\";\r\nimport { default as ColorSetting } from \"../Color/setting\";\r\nimport { default as QRCodeGeneratorSetting } from \"../QRCodeGenerator/setting\";\r\nimport { default as AESCryptoSetting } from \"../AESCrypto/setting\";\r\n\r\nconst Setting = () => {\r\n  const genSettingFormHeight = () => {\r\n    return (window.innerHeight - 70) + \"px\";\r\n  };\r\n\r\n  const [ siderFlag, setSiderFlag ] = useState(getSiderFlag());\r\n  const [ height, setHeight ] = useState(genSettingFormHeight()); // 窗口大小高度\r\n\r\n  const onChangeSiderFlag = (checked: boolean) => {\r\n    setSiderFlag(checked);\r\n    localStorage.setItem('sider-flag',checked + \"\");\r\n  };\r\n\r\n  // 窗体大小发生变化,改变窗口大小\r\n  window.addEventListener('resize', debounce(() => { setHeight(genSettingFormHeight()) },100) );\r\n\r\n  return (\r\n    <div style={ { height: height, overflowY: \"auto\" } }>\r\n      <Form\r\n        labelCol={{ span: 5 }}\r\n        wrapperCol={{ span: 18 }}\r\n        layout=\"horizontal\"\r\n        style={{ maxWidth: 800 }}\r\n      >\r\n        <Form.Item label=\"默认展开右边栏\">\r\n          <Switch checked={ siderFlag } onChange={ onChangeSiderFlag } />\r\n        </Form.Item>\r\n        <AppStoreSetting />\r\n        <HashSetting />\r\n        <ColorSetting />\r\n        <QRCodeGeneratorSetting />\r\n        <AESCryptoSetting />\r\n      </Form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Setting;","// 数据转成 AntD Select 支持的数据格式 { label: \"xxx\", value: \"xxx\" }\r\nexport function arrayToOptions(arr :Array<any>) :Array<{label :string,value :string}> {\r\n  return arr.map( (item ,index) => { return { label: item ,value:item} });\r\n}","// 复制到粘贴板\r\nexport async function copyTextToClipboard(text: string) {\r\n  if (\"clipboard\" in navigator) {\r\n    return await navigator.clipboard.writeText(text);\r\n  } else {\r\n    return document.execCommand('copy', true, text);\r\n  }\r\n}\r\n\r\n// 防抖函数\r\nexport function debounce(operate:Function, delay:number) {\r\n  let time :any = null\r\n  let timer :any = null\r\n  let newTime = null\r\n  function task() {\r\n    newTime =+ new Date()\r\n    if(newTime - time < delay) {\r\n      timer = setTimeout(task, delay)\r\n    } else {\r\n      operate()\r\n      timer = null\r\n    }\r\n    time = newTime\r\n  }\r\n  return function () {\r\n    // 更新时间戳\r\n    time =+ new Date();\r\n    if(!timer) {\r\n      timer = setTimeout(task, delay)\r\n    }\r\n  }\r\n}\r\n\r\n// 每间隔多少字符插入指定了符\r\nexport function insertIntervalString(str :string, disNum :number = 4, insertStr:string  = \" \") {\r\n  return str.replace(new RegExp(\"(.{\" + disNum + \"})\", \"g\"), \"$1\" + insertStr);\r\n}\r\n"],"names":["modeList","paddingList","codeList","capacityList","DEFAULT_MODE_ITEM","getDefaultMode","mode","localStorage","getItem","setDefaultMode","setItem","DEFAULT_PADDING_ITEM","getDefaultPadding","padding","setDefaultPadding","DEFAULT_CODE_ITEM","getDefaultCode","code","setDefaultCode","DEFAULT_IV_ITEM","getDefaultIV","iv","setDefaultIV","DEFAULT_PASSPHRASE_ITEM","getDefaultPassphrase","passphrase","setDefaultPassphrase","genPassphraseLimitLength","length","genCapacity","getMode","getPadding","setMode","useState","setPadding","setCode","setIV","ivStatus","setIVStatus","setPassphrase","passphraseStatus","setPassphraseStatus","passphraseLimitLength","setPassphraseLimitLength","orientation","plain","label","value","style","width","onChange","v","options","status","maxLength","allowClear","e","target","trim","app","setApp","getDefaultApp","setDefaultApp","result","appList","push","key","getAppList","getDefaultPasswordList","PASSWORD_LIST_ITEM","getPasswordList","list","arr","split","filter","item","setPasswordList","join","TextArea","setValue","map","replaceAll","placeholder","autoSize","minRows","maxRows","errorCorrectionLevelList","info","DEFAULT_ERROR_LEVEL_ITEM","getDefaultErrorLevel","defaultLevel","setDefaultErrorLevel","level","getErrorLevelTip","t","DEFAULT_SIZE_ITEM","getDefaultSize","size","parseInt","setDefaultSize","toString","setLevel","setSize","min","max","genSettingFormHeight","window","innerHeight","siderFlag","setSiderFlag","height","setHeight","addEventListener","overflowY","labelCol","span","wrapperCol","layout","maxWidth","checked","arrayToOptions","index","async","copyTextToClipboard","text","navigator","clipboard","writeText","document","execCommand","debounce","operate","delay","time","timer","newTime","task","Date","setTimeout","insertIntervalString","str","disNum","insertStr","replace","RegExp"],"sourceRoot":""}