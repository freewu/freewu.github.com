{"version":3,"file":"7719.renderer.js","mappings":"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","sources":["webpack://magic-tools/./node_modules/@ant-design/icons-svg/es/asn/SearchOutlined.js","webpack://magic-tools/./node_modules/@ant-design/icons/es/icons/SearchOutlined.js","webpack://magic-tools/./node_modules/antd/es/_util/statusUtils.js","webpack://magic-tools/./src/renderer/App/AreaConvert/data.ts","webpack://magic-tools/./src/renderer/App/AreaConvert/lib.ts","webpack://magic-tools/./src/renderer/App/AreaConvert/setting.tsx"],"sourcesContent":["// This icon file is generated automatically.\nvar SearchOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M909.6 854.5L649.9 594.8C690.2 542.7 712 479 712 412c0-80.2-31.3-155.4-87.9-212.1-56.6-56.7-132-87.9-212.1-87.9s-155.5 31.3-212.1 87.9C143.2 256.5 112 331.8 112 412c0 80.1 31.3 155.5 87.9 212.1C256.5 680.8 331.8 712 412 712c67 0 130.6-21.8 182.7-62l259.7 259.6a8.2 8.2 0 0011.6 0l43.6-43.5a8.2 8.2 0 000-11.6zM570.4 570.4C528 612.7 471.8 636 412 636s-116-23.3-158.4-65.6C211.3 528 188 471.8 188 412s23.3-116.1 65.6-158.4C296 211.3 352.2 188 412 188s116.1 23.2 158.4 65.6S636 352.2 636 412s-23.3 116.1-65.6 158.4z\" } }] }, \"name\": \"search\", \"theme\": \"outlined\" };\nexport default SearchOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport SearchOutlinedSvg from \"@ant-design/icons-svg/es/asn/SearchOutlined\";\nimport AntdIcon from '../components/AntdIcon';\nvar SearchOutlined = function SearchOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: SearchOutlinedSvg\n  }));\n};\nif (process.env.NODE_ENV !== 'production') {\n  SearchOutlined.displayName = 'SearchOutlined';\n}\nexport default /*#__PURE__*/React.forwardRef(SearchOutlined);","import classNames from 'classnames';\nconst InputStatuses = ['warning', 'error', ''];\nexport function getStatusClassNames(prefixCls, status, hasFeedback) {\n  return classNames({\n    [`${prefixCls}-status-success`]: status === 'success',\n    [`${prefixCls}-status-warning`]: status === 'warning',\n    [`${prefixCls}-status-error`]: status === 'error',\n    [`${prefixCls}-status-validating`]: status === 'validating',\n    [`${prefixCls}-has-feedback`]: hasFeedback\n  });\n}\nexport const getMergedStatus = (contextStatus, customStatus) => customStatus || contextStatus;","export const unitTypeList = [\n  { label: '公制', value: 'ms', placeholder: 'metric system'},\n  { label: '英制', value: 'iu', placeholder: 'Imperial units'},\n  { label: '市制', value: 'cn', placeholder: ''},\n  { label: '日式', value: 'jp', placeholder: ''},\n];\n\nexport const typeList = [\n  { label: '平方公里', value: 'km2', type:'ms', placeholder: '1 平方公里km² = 1000000 平方米 m²'},\n  { label: '公顷', value: 'gq', type:'ms', placeholder: '1 公顷 = 10000 平方米 m²'},\n  { label: '公亩', value: 'gm', type:'ms', placeholder: '1 公亩 = 100 平方米 m²'},\n  { label: '平方米',   value: 'm2',  type:'ms', placeholder: '1 平方米 m² = 0.0001 公顷 = 0.01 公亩' },\n  { label: '平方分米', value: 'dm2', type:'ms', placeholder: '1 平方分米 dm² = 0.01 平方米 m²' },\n  { label: '平方厘米', value: 'cm2', type:'ms', placeholder: '1 平方厘米 cm² = 0.0001 平方米 m²' },\n  { label: '平方毫米', value: 'mm2', type:'ms', placeholder: '1 平方毫米 mm² = 0.000001 平方米 m²' },\n\n  { label: '平方英里', value: 'mile2', type:'iu', placeholder: '1 平方英里 = 2590000 平方米 m²'},\n  { label: '英亩', value: 'ym', type:'iu', placeholder: '1 英亩 = 4046.85642 平方米 m²'},\n  { label: '路得', value: 'ld', type:'iu', placeholder: '1 路得 = 1011.7136203 平方米m²'},\n  { label: '平方杆', value: 'g', type:'iu', placeholder: '1 平方杆 = 25.2928469 平方米m²'},\n  { label: '平方码', value: 'yard2', type:'iu', placeholder: '1 平方码 = 0.83612736 平方米 m²'},\n  { label: '平方英尺', value: 'foot2', type:'iu', placeholder: '1 平方英尺 = 0.09290304 平方米 m²'},\n  { label: '平方英寸', value: 'inch2', type:'iu', placeholder: '1 平方英寸 = 0.00064516 平方米 m²'},\n\n  { label: '坪', value: 'jp-ping', type:'jp', placeholder: '1 坪 = 3.30578622 平方米 m²'},\n  { label: '叠', value: 'jp-die', type:'jp', placeholder: '1 叠 = 1.62 平方米 m²'},\n  { label: '町', value: 'jp-ding', type:'jp', placeholder: '1 町 = 0.00991736 平方米 m²'},\n  { label: '段', value: 'jp-duan', type:'jp', placeholder: '1 段 = 0.00099174 平方米 m²'},\n  { label: '亩', value: 'jp-mu', type:'jp', placeholder: '1 亩 = 0.00009917 平方米 m²'},\n\n  { label: '顷', value: 'qin', type:'cn', placeholder: '1顷 = 100亩 = 66666 平方米 m²'},\n  { label: '亩', value: 'mu', type:'cn', placeholder: '1亩 = 666.66 平方米 m²'},\n  { label: '分', value: 'fen', type:'cn', placeholder: '1分 = 0.1亩 = 66.666 平方米 m²'},\n  { label: '厘', value: 'li', type:'cn', placeholder: '1厘 = 0.01亩 = 6.6666 平方米 m² '},\n  { label: '毫', value: 'hao', type:'cn', placeholder: '1毫 = 0.001亩 = 0.66666 平方米 m²'},\n  { label: '平方丈', value: 'zhuang2', type:'cn', placeholder: '1平方丈 = 100平方尺 = 11.11平方米'},\n  { label: '平方尺', value: 'chi2', type:'cn', placeholder: '1平方尺 = 0.1111平方米'},\n  { label: '平方寸', value: 'cun2', type:'cn', placeholder: '1平方寸 = 0.01平方尺 = 0.001111平方米'},\n];","import { typeList } from \"./data\";\n\n// 获指定制式的距离类型列表\nexport const getTypeList = (ut :string) => {\n  return typeList.filter((v) => v.type === ut)\n}\n\nexport const getDefaultType = (ut :string) :string =>{\n  switch(ut) {\n    case 'iu': return getDefaultIUType();\n    case 'cn': return getDefaultCNType();\n    case 'jp': return getDefaultJPType();\n  }\n  return getDefaultMSType();\n}\n\nexport const getTypePlaceholder = (type :string) :string | undefined => {\n  return typeList.find(item => item.value === type)?.placeholder;\n}\n\nconst DEFAULT_UNIT_TYPE = 'area-convert:default-unit-type';\n\n// 获取默认制式\nexport function getDefaultUnitType() :string  {\n  const type = localStorage.getItem(DEFAULT_UNIT_TYPE);\n  return (type === null)? \"ms\" : type;\n}\n\n// 设置默认制式\nexport function setDefaultUnitType(type: string) : void  {\n  localStorage.setItem(DEFAULT_UNIT_TYPE,type);\n}\n\nconst DEFAULT_MS_TYPE = 'area-convert:default-ms-type';\n\n// 获取默认公制单位\nexport function getDefaultMSType() :string  {\n  const type = localStorage.getItem(DEFAULT_MS_TYPE);\n  return (type === null)? \"m2\" : type;\n}\n\n// 设置默认公制单位\nexport function setDefaultMSType(type: string) : void  {\n  localStorage.setItem(DEFAULT_MS_TYPE,type);\n}\n\nconst DEFAULT_IU_TYPE = 'area-convert:default-iu-type';\n\n// 获取默认英制单位\nexport function getDefaultIUType() :string  {\n  const type = localStorage.getItem(DEFAULT_IU_TYPE);\n  return (type === null)? \"foot2\" : type;\n}\n\n// 设置默认英制单位\nexport function setDefaultIUType(type: string) : void  {\n  localStorage.setItem(DEFAULT_IU_TYPE,type);\n}\n\nconst DEFAULT_CN_TYPE = 'area-convert:default-cn-type';\n\n// 获取默认市制单位\nexport function getDefaultCNType() :string  {\n  const type = localStorage.getItem(DEFAULT_CN_TYPE);\n  return (type === null)? \"mu\" : type;\n}\n\n// 设置默认市制单位\nexport function setDefaultCNType(type: string) : void  {\n  localStorage.setItem(DEFAULT_CN_TYPE,type);\n}\n\nconst DEFAULT_JP_TYPE = 'area-convert:default-jp-type';\n\n// 获取默认日式单位\nexport function getDefaultJPType() :string  {\n  const type = localStorage.getItem(DEFAULT_CN_TYPE);\n  return (type === null)? \"jp-ping\" : type;\n}\n\n// 设置默认日式单位\nexport function setDefaultJPType(type: string) : void  {\n  localStorage.setItem(DEFAULT_CN_TYPE,type);\n}\n\n\n","import { Select, Form, Divider } from \"antd\";\nimport { getDefaultUnitType,setDefaultUnitType, getTypeList } from \"./lib\";\nimport { useState } from \"react\";\nimport { typeList, unitTypeList } from \"./data\";\nimport { getDefaultMSType,setDefaultMSType } from \"./lib\";\nimport { getDefaultIUType,setDefaultIUType } from \"./lib\";\nimport { getDefaultCNType,setDefaultCNType } from \"./lib\";\nimport { getDefaultJPType,setDefaultJPType } from \"./lib\";\n\n\nexport const AreaConvertSetting = () => {\n  \n  const [ type, setType ] = useState(getDefaultUnitType()); // 默认制式\n  const [ msType, setMSType ] = useState(getDefaultMSType()); // 默认公制单位\n  const [ iuType, setIUType ] = useState(getDefaultIUType()); // 默认英制单位\n  const [ cnType, setCNType ] = useState(getDefaultCNType()); // 默认市制单位\n  const [ jpType, setJPType ] = useState(getDefaultJPType()); // 默认日式单位\n\n  return (\n    <>\n      <Divider orientation=\"left\" plain>面积转换</Divider>\n      <Form.Item label=\"默认制式\">\n        <Select\n          value={ type }\n          style={{ width: 240 }}\n          onChange={ (value: string) => { setType(value); setDefaultUnitType(value); } }\n          options={ unitTypeList }\n        />\n      </Form.Item>\n      <Form.Item label=\"默认公制单位\">\n        <Select\n          value={ msType }\n          style={{ width: 240 }}\n          onChange={ (value: string) => { setMSType(value); setDefaultMSType(value); } }\n          options={ getTypeList('ms') }\n        />\n      </Form.Item>\n      <Form.Item label=\"默认英制单位\">\n        <Select\n          value={ iuType }\n          style={{ width: 240 }}\n          onChange={ (value: string) => { setIUType(value); setDefaultIUType(value); } }\n          options={ getTypeList('iu') }\n        />\n      </Form.Item>\n      <Form.Item label=\"默认市制单位\">\n        <Select\n          value={ cnType }\n          style={{ width: 240 }}\n          onChange={ (value: string) => { setCNType(value); setDefaultCNType(value); } }\n          options={ getTypeList('cn') }\n        />\n      </Form.Item>\n      <Form.Item label=\"默认日式单位\">\n        <Select\n          value={ jpType }\n          style={{ width: 240 }}\n          onChange={ (value: string) => { setJPType(value); setDefaultJPType(value); } }\n          options={ getTypeList('jp') }\n        />\n      </Form.Item>\n    </>\n  );\n}\n"],"names":["props","ref","AntdIcon","icon","getStatusClassNames","prefixCls","status","hasFeedback","getMergedStatus","contextStatus","customStatus","unitTypeList","label","value","placeholder","typeList","type","getTypeList","ut","v","getDefaultType","getDefaultIUType","getDefaultCNType","getDefaultJPType","getDefaultMSType","getTypePlaceholder","item","DEFAULT_UNIT_TYPE","getDefaultUnitType","localStorage","getItem","setDefaultUnitType","setItem","DEFAULT_MS_TYPE","setDefaultMSType","DEFAULT_IU_TYPE","setDefaultIUType","DEFAULT_CN_TYPE","setDefaultCNType","setDefaultJPType","AreaConvertSetting","setType","useState","msType","setMSType","iuType","setIUType","cnType","setCNType","jpType","setJPType","orientation","plain","style","width","onChange","options"],"sourceRoot":""}