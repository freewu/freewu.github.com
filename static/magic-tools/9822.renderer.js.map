{"version":3,"file":"9822.renderer.js","mappings":"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","sources":["webpack://magic-tools/./node_modules/@ant-design/icons-svg/es/asn/SearchOutlined.js","webpack://magic-tools/./node_modules/@ant-design/icons/es/icons/SearchOutlined.js","webpack://magic-tools/./node_modules/antd/es/_util/statusUtils.js","webpack://magic-tools/./src/renderer/App/DistanceConvert/data.ts","webpack://magic-tools/./src/renderer/App/DistanceConvert/lib.ts","webpack://magic-tools/./src/renderer/App/DistanceConvert/setting.tsx"],"sourcesContent":["// This icon file is generated automatically.\nvar SearchOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M909.6 854.5L649.9 594.8C690.2 542.7 712 479 712 412c0-80.2-31.3-155.4-87.9-212.1-56.6-56.7-132-87.9-212.1-87.9s-155.5 31.3-212.1 87.9C143.2 256.5 112 331.8 112 412c0 80.1 31.3 155.5 87.9 212.1C256.5 680.8 331.8 712 412 712c67 0 130.6-21.8 182.7-62l259.7 259.6a8.2 8.2 0 0011.6 0l43.6-43.5a8.2 8.2 0 000-11.6zM570.4 570.4C528 612.7 471.8 636 412 636s-116-23.3-158.4-65.6C211.3 528 188 471.8 188 412s23.3-116.1 65.6-158.4C296 211.3 352.2 188 412 188s116.1 23.2 158.4 65.6S636 352.2 636 412s-23.3 116.1-65.6 158.4z\" } }] }, \"name\": \"search\", \"theme\": \"outlined\" };\nexport default SearchOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport SearchOutlinedSvg from \"@ant-design/icons-svg/es/asn/SearchOutlined\";\nimport AntdIcon from '../components/AntdIcon';\nvar SearchOutlined = function SearchOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: SearchOutlinedSvg\n  }));\n};\nif (process.env.NODE_ENV !== 'production') {\n  SearchOutlined.displayName = 'SearchOutlined';\n}\nexport default /*#__PURE__*/React.forwardRef(SearchOutlined);","import classNames from 'classnames';\nconst InputStatuses = ['warning', 'error', ''];\nexport function getStatusClassNames(prefixCls, status, hasFeedback) {\n  return classNames({\n    [`${prefixCls}-status-success`]: status === 'success',\n    [`${prefixCls}-status-warning`]: status === 'warning',\n    [`${prefixCls}-status-error`]: status === 'error',\n    [`${prefixCls}-status-validating`]: status === 'validating',\n    [`${prefixCls}-has-feedback`]: hasFeedback\n  });\n}\nexport const getMergedStatus = (contextStatus, customStatus) => customStatus || contextStatus;","export const unitTypeList = [\n  { label: '公制', value: 'ms', placeholder: 'metric system'},\n  { label: '英制', value: 'iu', placeholder: 'Imperial units'},\n  { label: '市制', value: 'cn', placeholder: ''},\n];\n\nexport const typeList = [\n  { label: '千米', value: 'km', type:'ms', placeholder: ''},\n  { label: '米',   value: 'm',  type:'ms', placeholder: '' },\n  { label: '分米', value: 'dm', type:'ms', placeholder: '' },\n  { label: '厘米', value: 'cm', type:'ms', placeholder: '' },\n  { label: '毫米', value: 'mm', type:'ms', placeholder: '' },\n  { label: '微米', value: 'μm', type:'ms', placeholder: '' },\n  { label: '纳米', value: 'nm', type:'ms', placeholder: '' },\n  { label: '皮米', value: 'pm', type:'ms', placeholder: '' },\n  { label: '海里', value: 'nmile', type:'ms', placeholder: '等于4千万米除以360然后再除以60，其结果就是大约1852米，也就是说，1海里大约是1.852公里' },\n  // { label: '光年', value: 'ly', type:'ms', placeholder: '光在宇宙真空中沿直线经过一年时间的距离，为9,460‘7304’7258‘0800米' },\n  // { label: '天文单位', value: 'au', type:'ms', placeholder: '曾以地球与太阳的平均距离定义。2012年8月，天文学家以无记名投票的方式，把天文单位固定为149,597,870,700米' },\n\n  { label: '英寸', value: 'inch', type:'iu', placeholder: ''},\n  { label: '英尺', value: 'foot', type:'iu', placeholder: ''},\n  { label: '码',   value: 'yard', type:'iu', placeholder: ''},\n  { label: '英里', value: 'mile', type:'iu', placeholder: ''},\n  { label: '英寻', value: 'fathom', type:'iu', placeholder: ''},\n  { label: '链', value: 'chain', type:'iu', placeholder: '也称 测链 英文：chain，是英美制中一种长度单位 1链 (chain) = 20.1168米 (m)'},\n  { label: '化朗', value: 'furlong', type:'iu', placeholder: '一单位长度等于660呎(英尺)或220码或10链，约等于公制的201.168米。8化朗等于1哩，5化朗等于1005.84米，约等于1千米'},\n  \n/**\n# 化朗（furlong）\n\n  又叫[浪]、[弗隆] 是使用于英国、前英国殖民地和英联邦国家的长度单位。\n  美国等国家采用。一单位长度等于660呎(英尺)或220码或10链，约等于公制的 201.168米。8化朗等于1哩，5化朗等于1005.84米，约等于1千米。\n\n\n# 英寻\n\n  英文:fathom\n  海洋测量中的深度单位 1英寻=1/11链=1/110弗隆=1/880英里=2码=6英尺=72英寸=1浔 1英寻=1.829米\n\n# 链，也称 测链\n\n  英文：chain，是英美制中一种长度单位。 靠近的单位有：浪 (也称弗隆,furlong)，码 等。 1链 (chain) = 20.1168米 (m)\n */\n  \n  { label: '里', value: 'li', type:'cn', placeholder: ''},\n  { label: '引', value: 'ying', type:'cn', placeholder: ''},\n  { label: '丈', value: 'zhang', type:'cn', placeholder: ''},\n  { label: '尺', value: 'chi', type:'cn', placeholder: ''},\n  { label: '寸', value: 'cun', type:'cn', placeholder: ''},\n  { label: '分', value: 'fen', type:'cn', placeholder: ''},\n  { label: '厘', value: 'l', type:'cn', placeholder: ''},\n  { label: '毫', value: 'hao', type:'cn', placeholder: ''},\n  { label: '丝', value: 'si', type:'cn', placeholder: ''},\n];","import { typeList } from \"./data\";\n\n// 获指定制式的距离类型列表\nexport const getTypeList = (ut :string) => {\n  return typeList.filter((v) => v.type === ut)\n}\n\nexport const getDefaultType = (ut :string) :string =>{\n  switch(ut) {\n    case 'iu': return getDefaultIUType();\n    case 'cn': return getDefaultCNType();\n  }\n  return getDefaultMSType();\n}\n\nexport const getTypePlaceholder = (type :string) :string | undefined => {\n  return typeList.find(item => item.value === type)?.placeholder;\n}\n\nconst DEFAULT_UNIT_TYPE = 'distance-convert:default-unit-type';\n\n// 获取默认制式\nexport function getDefaultUnitType() :string  {\n  const type = localStorage.getItem(DEFAULT_UNIT_TYPE);\n  return (type === null)? \"ms\" : type;\n}\n\n// 设置默认制式\nexport function setDefaultUnitType(type: string) : void  {\n  localStorage.setItem(DEFAULT_UNIT_TYPE,type);\n}\n\nconst DEFAULT_MS_TYPE = 'distance-convert:default-ms-type';\n\n// 获取默认公制单位\nexport function getDefaultMSType() :string  {\n  const type = localStorage.getItem(DEFAULT_MS_TYPE);\n  return (type === null)? \"m\" : type;\n}\n\n// 设置默认公制单位\nexport function setDefaultMSType(type: string) : void  {\n  localStorage.setItem(DEFAULT_MS_TYPE,type);\n}\n\nconst DEFAULT_IU_TYPE = 'distance-convert:default-iu-type';\n\n// 获取默认英制单位\nexport function getDefaultIUType() :string  {\n  const type = localStorage.getItem(DEFAULT_IU_TYPE);\n  return (type === null)? \"foot\" : type;\n}\n\n// 设置默认英制单位\nexport function setDefaultIUType(type: string) : void  {\n  localStorage.setItem(DEFAULT_IU_TYPE,type);\n}\n\nconst DEFAULT_CN_TYPE = 'distance-convert:default-cn-type';\n\n// 获取默认市制单位\nexport function getDefaultCNType() :string  {\n  const type = localStorage.getItem(DEFAULT_CN_TYPE);\n  return (type === null)? \"li\" : type;\n}\n\n// 设置默认市制单位\nexport function setDefaultCNType(type: string) : void  {\n  localStorage.setItem(DEFAULT_CN_TYPE,type);\n}\n\n/**\n度单位还有兆米(Mm)、千米(km)、分米(dm)、厘米(cm)、毫米(mm)、丝米(dmm)、忽米(cmm)、微米(μm)、纳米(nm)、皮米(pm)、飞米(fm)、阿米(am)等。他们同米的换算关系如下：\n1Gm=1×10^9m\n1Mm=1×10^6m\n1km=1×10^3m\n1dm=1×10^(-1)m\n1cm=1×10^(-2)m\n1mm=1×10^(-3)m\n1dmm=1×10^(-4)m\n1cmm=1×10^(-5)m\n1μm=1×10^(-6)m\n1nm=1×10^(-9)m\n1pm=1×10^(-12)m\n1fm=1×10^(-15)m\n1am=1×10^(-18)m\n */","import { Select, Form, Divider } from \"antd\";\nimport { getDefaultUnitType,setDefaultUnitType, getTypeList } from \"./lib\";\nimport { useState } from \"react\";\nimport { typeList, unitTypeList } from \"./data\";\nimport { getDefaultMSType,setDefaultMSType } from \"./lib\";\nimport { getDefaultIUType,setDefaultIUType } from \"./lib\";\nimport { getDefaultCNType,setDefaultCNType } from \"./lib\";\n\nexport const DistanceConvertSetting = () => {\n  \n  const [ type, setType ] = useState(getDefaultUnitType()); // 默认制式\n  const [ msType, setMSType ] = useState(getDefaultMSType()); // 默认公制单位\n  const [ iuType, setIUType ] = useState(getDefaultIUType()); // 默认英制单位\n  const [ cnType, setCNType ] = useState(getDefaultCNType()); // 默认市制单位\n\n  return (\n    <>\n      <Divider orientation=\"left\" plain>距离转换</Divider>\n      <Form.Item label=\"默认制式\">\n        <Select\n          value={ type }\n          style={{ width: 240 }}\n          onChange={ (value: string) => { setType(value); setDefaultUnitType(value); } }\n          options={ unitTypeList }\n        />\n      </Form.Item>\n      <Form.Item label=\"默认公制单位\">\n        <Select\n          value={ msType }\n          style={{ width: 240 }}\n          onChange={ (value: string) => { setMSType(value); setDefaultMSType(value); } }\n          options={ getTypeList('ms') }\n        />\n      </Form.Item>\n      <Form.Item label=\"默认英制单位\">\n        <Select\n          value={ iuType }\n          style={{ width: 240 }}\n          onChange={ (value: string) => { setIUType(value); setDefaultIUType(value); } }\n          options={ getTypeList('iu') }\n        />\n      </Form.Item>\n      <Form.Item label=\"默认市制单位\">\n        <Select\n          value={ cnType }\n          style={{ width: 240 }}\n          onChange={ (value: string) => { setCNType(value); setDefaultCNType(value); } }\n          options={ getTypeList('cn') }\n        />\n      </Form.Item>\n    </>\n  );\n}\n"],"names":["props","ref","AntdIcon","icon","getStatusClassNames","prefixCls","status","hasFeedback","getMergedStatus","contextStatus","customStatus","unitTypeList","label","value","placeholder","typeList","type","getTypeList","ut","v","getDefaultType","getDefaultIUType","getDefaultCNType","getDefaultMSType","getTypePlaceholder","item","DEFAULT_UNIT_TYPE","getDefaultUnitType","localStorage","getItem","setDefaultUnitType","setItem","DEFAULT_MS_TYPE","setDefaultMSType","DEFAULT_IU_TYPE","setDefaultIUType","DEFAULT_CN_TYPE","setDefaultCNType","DistanceConvertSetting","setType","useState","msType","setMSType","iuType","setIUType","cnType","setCNType","orientation","plain","style","width","onChange","options"],"sourceRoot":""}