{"version":3,"file":"8452.renderer.js","mappings":"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","sources":["webpack://magic-tools/./node_modules/antd/es/col/index.js","webpack://magic-tools/./node_modules/antd/es/row/index.js","webpack://magic-tools/./src/renderer/App/VolumeConvert/data.ts","webpack://magic-tools/./src/renderer/App/VolumeConvert/index.tsx","webpack://magic-tools/./src/renderer/App/VolumeConvert/lib.ts","webpack://magic-tools/./src/renderer/lib/index.ts"],"sourcesContent":["import { Col } from '../grid';\nexport default Col;","import { Row } from '../grid';\nexport default Row;","export const unitTypeList = [\n  { label: '公制', value: 'ms', placeholder: 'metric system'},\n  { label: '英制', value: 'iu', placeholder: 'Imperial units'},\n  { label: '美制', value: 'us', placeholder: ''},\n  { label: '市制', value: 'cn', placeholder: ''},\n];\n\n/**\n1 美制液量盎司 = 1.8046875\t立方英寸 = 29.5735295625 毫升 ounce \n1 美制液量打兰 = 1/8 美制液量盎司 = 3.6966912 毫升 dram \n1 美制茶匙 = 1/6 美制液量盎司 = 4.92892159 毫升 teaspoon\n1 美制汤匙 = 1/2 美制液量盎司 = 14.7867648 毫升 tablespoon\n1 美制及耳 = 4 美制液量盎司 = 118.294118 毫升 gill\n1 美制杯 = 8 美制液量盎司 = 236.588236 毫升 cup\n1 美制品脱 = 16 美制液量盎司 = 473.176473 毫升 pint\n1 美制夸脱 = 32 美制液量盎司 = 946.352946 毫升 quart\n1 美制加仑 = 128 美制液量盎司 = 3785.41178 毫升 gallon\n\n1 立方英寸 = 16.387064 毫升\n1 立方英尺 = 28316.8466 毫升\n1 立方码 = 764554.858 毫升\n\n1 英制液量盎司 = 28.4130625 毫升 = 1.733871455 立方英寸 = 0.960759940 美制液量盎司\n1 英制加仑 = 160 英制液量盎司 = 4 英制夸脱 = 4546.09 毫升\n1 英制夸脱 = 40 英制液量盎司 = 2 英制品脱  = 1136.5225 毫升\n1 英制品脱 = 20 英制液量盎司= 2 英制杯 = 568.26125 毫升\n1 英制杯 = 10 英制液量盎司 = 2 英制及耳= 284.130625 毫升\n1 英制及耳 = 5 英制液量盎司 = 10 英制汤匙 = 142.0653125 毫升\n1 英制汤匙 = 1/2 英制液量盎司 = 3 英制茶匙 = 14.2065375 毫升\n1 英制茶匙 = 1/6 英制液量盎司 = 4.7355125 毫升\n1 英制液量打兰 = 1/8 英制液量盎司 = 3.5516328125 毫升\n*/\n\nexport const typeList = [\n  { label: '升', value: 'l', type:'ms', placeholder: '1 升 = 1000 毫升'},\n  { label: '毫升',   value: 'ml',  type:'ms', placeholder: '1 升 = 1000 毫升' },\n  //{ label: '立方千米', value: 'km3', type:'ms', placeholder: 'km³' },\n  { label: '立方米', value: 'm3', type:'ms', placeholder: 'm³ 1 立方米   = 1000000 毫升 = 1000 升' },\n  { label: '立方分米', value: 'dm3', type:'ms', placeholder: 'dm³ 1 立方分米 = 1000 毫升 = 1 升' },\n  { label: '立方厘米', value: 'cm3', type:'ms', placeholder: 'cm³ 1 立方厘米 = 1 毫升' },\n  { label: '立方毫米', value: 'mm3', type:'ms', placeholder: 'mm³ 1 立方毫米 = 0.001 毫升' },\n\n  { label: '盎司 ', value: 'us-ounce', type:'us', placeholder: '1 美制液量盎司 = 1.8046875\t立方英寸 = 29.5735295625 毫升 ounce '},\n  { label: '加仑 ', value: 'us-gallon', type:'us', placeholder: '1 美制加仑 = 128 美制液量盎司 = 3785.41178 毫升 gallon'},\n  { label: '打兰 ', value: 'us-dram', type:'us', placeholder: '1 美制液量打兰 = 1/8 美制液量盎司 = 3.6966912 毫升 dram '},\n  { label: '茶匙 ', value: 'us-teaspoon', type:'us', placeholder: '1 美制茶匙 = 1/6 美制液量盎司 = 4.92892159 毫升 teaspoon'},\n  { label: '汤匙 ', value: 'us-tablespoon', type:'us', placeholder: '1 美制汤匙 = 1/2 美制液量盎司 = 14.7867648 毫升 tablespoon'},\n  { label: '及耳 ', value: 'us-gill', type:'us', placeholder: '1 美制及耳 = 4 美制液量盎司 = 118.294118 毫升 gill'},\n  { label: '杯 ', value: 'us-cup', type:'us', placeholder: '1 美制杯 = 8 美制液量盎司 = 236.588236 毫升 cup'},\n  { label: '品脱 ', value: 'us-pint', type:'us', placeholder: '1 美制品脱 = 16 美制液量盎司 = 473.176473 毫升 pint'},\n  { label: '夸脱 ', value: 'us-quart', type:'us', placeholder: '1 美制夸脱 = 32 美制液量盎司 = 946.352946 毫升 quart'},\n\n  { label: '盎司 ', value: 'iu-ounce', type:'iu', placeholder: '1 英制液量盎司 = 28.4130625 毫升 = 1.733871455 立方英寸 = 0.960759940 美制液量盎司'},\n  { label: '加仑 ', value: 'iu-gallon', type:'iu', placeholder: '1 英制加仑 = 160 英制液量盎司 = 4 英制夸脱 = 4546.09 毫升'},\n  { label: '打兰 ', value: 'iu-dram', type:'iu', placeholder: '1 英制液量打兰 = 1/8 英制液量盎司 = 3.5516328125 毫升'},\n  { label: '茶匙 ', value: 'iu-teaspoon', type:'iu', placeholder: '1 英制茶匙 = 1/6 英制液量盎司 = 4.7355125 毫升'},\n  { label: '汤匙 ', value: 'iu-tablespoon', type:'iu', placeholder: '1 英制汤匙 = 1/2 英制液量盎司 = 3 英制茶匙 = 14.2065375 毫升'},\n  { label: '及耳 ', value: 'iu-gill', type:'iu', placeholder: '1 英制及耳 = 5 英制液量盎司 = 10 英制汤匙 = 142.0653125 毫升'},\n  { label: '杯 ', value: 'iu-cup', type:'iu', placeholder: '1 英制杯 = 10 英制液量盎司 = 2 英制及耳= 284.130625 毫升'},\n  { label: '品脱 ', value: 'iu-pint', type:'iu', placeholder: '1 英制品脱 = 20 英制液量盎司= 2 英制杯 = 568.26125 毫升'},\n  { label: '夸脱 ', value: 'iu-quart', type:'iu', placeholder: '1 英制夸脱 = 40 英制液量盎司 = 2 英制品脱  = 1136.5225 毫升'},\n \n  { label: '立方英寸 ', value: 'iu-inch3', type:'iu', placeholder: '1 立方英寸 = 16.387064 毫升'},\n  { label: '立方英尺 ', value: 'iu-foot3', type:'iu', placeholder: '1 立方英尺 = 28316.8466 毫升'},\n  { label: '立方码 ', value: 'iu-yard3', type:'iu', placeholder: '1 立方码 = 764554.858 毫升'},\n\n  { label: '石', value: 'dan', type:'cn', placeholder: '1市石 =\t10市斗 =\t100市升 =\t1000市合(gě) =\t1,0000勺 =\t10,0000撮 =\t100升'},\n  { label: '斗', value: 'dou', type:'cn', placeholder: '0.1市石 =\t1市斗 =\t10市升 =\t100市合 =\t1000勺 =\t1,0000撮 = 10升'},\n  { label: '升', value: 'sheng', type:'cn', placeholder: '市制容积的基本单位为升，一升合国际单位制一公升，由于两个单位大小一样，所以，国际单位制的公升也简称为升'},\n  { label: '合', value: 'he', type:'cn', placeholder: '0.001市石 =\t0.01市斗 =\t0.1市 =\t1市合 =\t10勺 =\t100撮 =\t0.1升'},\n  { label: '勺', value: 'shao', type:'cn', placeholder: '0.0001市石 =\t0.001市斗 =\t0.01市升 =\t0.1市合 =\t1勺 =\t10撮 =\t0.01升'},\n  { label: '撮', value: 'cuo', type:'cn', placeholder: '0.00001市石 =\t0.0001市斗 =\t0.001市升 =\t0.01市合 =\t0.1勺 =\t1撮 =\t0.001升'},\n];","import { Select, Form, Input, Divider, message, Space, Radio, Button, Row, Col } from \"antd\";\nimport { useState } from \"react\";\nconst { TextArea } = Input;\nimport { copyTextToClipboard } from \"./../../lib\"\nimport { unitTypeList } from \"./data\"\nimport type { RadioChangeEvent } from 'antd';\nimport { getDefaultUnitType, getTypeList, getDefaultType, getTypePlaceholder } from \"./lib\"\nimport { InputStatus } from \"antd/es/_util/statusUtils\";\n\nexport const VolumeConvert = () => {\n\n  const ut = getDefaultUnitType();\n  const [ unitType, setUnitType ] = useState(ut); // 制式 \n  const [ typeList, setTypeList ] = useState(getTypeList(ut)); // 类型\n  const [ value, setValue ] = useState(''); // 输入数量\n  const [ status, setStatus ] = useState(''); // 输入是否合法\n\n  const dt = getDefaultType(ut);\n  const [ type, setType ] = useState(dt); // 转换类型\n  const [ placeholder, setPlaceholder ] = useState(getTypePlaceholder(dt)); // 数字类型的输入提示\n  const [ result, setResult ] = useState(0); // 转换的结果 统一转换成 米\n  const [ notice, contextHolder] = message.useMessage();\n\n  const inputStyle = { cursor: \"pointer\" };\n\n  // 切换类型\n  const onTypeChange = ({ target: { value : t } }: RadioChangeEvent) => {\n    setType(t);\n    setPlaceholder(getTypePlaceholder(t));\n    convert(value,t);\n  };\n\n  // 点击结果框,把结果复制到粘贴板\n  const inputClick = (e :React.MouseEvent<HTMLElement>) => {\n    const txt = (e.target as HTMLInputElement).value.trim();\n    if(txt != \"\") {\n      copyTextToClipboard(txt);\n      notice.success(\"复制到粘贴板成功！！！\");\n    }\n  };\n\n  const convert = (value:string, type :string) => {\n    if(\"\" == value) {\n      setStatus('');\n      return ; // 没有内容直接返回不做下面的处理\n    }\n    // 统一计算成 毫升 ml\n    if(/^[0-9\\.\\-]+$/.test(value)) {\n      switch(type) {\n\n        case \"l\": setResult(parseFloat(value) * 1000); break; // 1 升 = 1000 毫升\n        case \"ml\": setResult(parseFloat(value)); break; // 1 升 = 1000 毫升\n        //case \"mk3\": setResult(parseFloat(value) * 10); break;\n        case \"m3\": setResult(parseFloat(value) * 1000000); break; // 1 立方米 = 1000000 毫升 = 1000 升\n        case \"dm3\": setResult(parseFloat(value) * 1000 ); break; // 1 立方分米 = 1000 毫升 = 1 升\n        case \"cm3\": setResult(parseFloat(value)); break; // 1 立方厘米 = 1 毫升\n        case \"mm3\": setResult(parseFloat(value) / 1000); break; // 1 立方毫米 = 0.001 毫升\n\n        case \"us-ounce\": setResult(parseFloat(value) * 29.5735295625 ); break; // 1 美制液量盎司 = 1.8046875 立方英寸 = 29.5735295625 毫升 ounce\n        case \"us-gallon\": setResult(parseFloat(value) * 3785.41178 ); break; // 1 美制加仑 = 128 美制液量盎司 = 3785.41178 毫升 gallon\n        case \"us-dram\": setResult(parseFloat(value) * 3.6966912); break; // 1 美制液量打兰 = 1/8 美制液量盎司 = 3.6966912 毫升 dram '\n        case \"us-teaspoon\": setResult(parseFloat(value) * 4.92892159); break; // 1 美制茶匙 = 1/6 美制液量盎司 = 4.92892159 毫升 teaspoon\n        case \"us-tablespoon\": setResult(parseFloat(value) * 14.7867648); break; // 1 美制汤匙 = 1/2 美制液量盎司 = 14.7867648 毫升 tablespoon\n        case \"us-gill\": setResult(parseFloat(value) * 118.294118); break; // 1 美制及耳 = 4 美制液量盎司 = 118.294118 毫升 gill\n        case \"us-cup\": setResult(parseFloat(value) * 236.588236); break; // 1 美制杯 = 8 美制液量盎司 = 236.588236 毫升 cup'\n        case \"us-pint\": setResult(parseFloat(value) * 473.176473); break; // 1 美制品脱 = 16 美制液量盎司 = 473.176473 毫升 pint\n        case \"us-quart\": setResult(parseFloat(value) * 946.352946); break; // 1 美制夸脱 = 32 美制液量盎司 = 946.352946 毫升 quart\n\n        case \"iu-ounce\": setResult(parseFloat(value) * 28.4130625 ); break; // 1 英制液量盎司 = 28.4130625 毫升 = 1.733871455 立方英寸 = 0.960759940 美制液量盎司\n        case \"iu-gallon\": setResult(parseFloat(value) * 4546.09 ); break; // 1 英制加仑 = 160 英制液量盎司 = 4 英制夸脱 = 4546.09 毫升\n        case \"iu-dram\": setResult(parseFloat(value) * 3.5516328125); break; // 1 英制液量打兰 = 1/8 英制液量盎司 = 3.5516328125 毫升\n        case \"iu-teaspoon\": setResult(parseFloat(value) * 4.7355125); break; // 1 英制茶匙 = 1/6 英制液量盎司 = 4.7355125 毫升\n        case \"iu-tablespoon\": setResult(parseFloat(value) * 14.2065375); break; // 1 英制汤匙 = 1/2 英制液量盎司 = 3 英制茶匙 = 14.2065375 毫升\n        case \"iu-gill\": setResult(parseFloat(value) * 142.0653125); break; // 1 英制及耳 = 5 英制液量盎司 = 10 英制汤匙 = 142.0653125 毫升\n        case \"iu-cup\": setResult(parseFloat(value) * 284.130625); break; // 1 英制杯 = 10 英制液量盎司 = 2 英制及耳= 284.130625 毫升\n        case \"iu-pint\": setResult(parseFloat(value) * 568.26125); break; // 1 英制品脱 = 20 英制液量盎司= 2 英制杯 = 568.26125 毫升\n        case \"iu-quart\": setResult(parseFloat(value) * 1136.5225); break; // 1 英制夸脱 = 40 英制液量盎司 = 2 英制品脱  = 1136.5225 毫升\n        case \"iu-inch3\": setResult(parseFloat(value) * 16.387064); break; // 1 立方英寸 = 16.387064 毫升\n        case \"iu-foot3\": setResult(parseFloat(value) * 28316.8466 ); break; // 1 立方英尺 = 28316.8466 毫升\n        case \"iu-yard3\": setResult(parseFloat(value) * 764554.858 ); break; // 1 立方码 = 764554.858 毫升\n\n        case \"dan\": setResult(parseFloat(value) * 100000 ); break; // 1市石 =\t10市斗 =\t100市升 =\t1000市合(gě) =\t1,0000勺 =\t10,0000撮 =\t100升\n        case \"dou\": setResult(parseFloat(value) * 10000 ); break; // 0.1市石 =\t1市斗 =\t10市升 =\t100市合 =\t1000勺 =\t1,0000撮 = 10升\n        case \"sheng\": setResult(parseFloat(value) * 1000 ); break; // 市制容积的基本单位为升，一升合国际单位制一公升，由于两个单位大小一样，所以，国际单位制的公升也简称为升'\n        case \"he\": setResult(parseFloat(value) * 100 ); break; // 0.001市石 =\t0.01市斗 =\t0.1市升 =\t1市合 =\t10勺 =\t100撮 =\t0.1升\n        case \"shao\": setResult(parseFloat(value) * 10 ); break; // 0.0001市石 =\t0.001市斗 =\t0.01市升 =\t0.1市合 =\t1勺 =\t10撮 =\t0.01升\n        case \"cuo\": setResult(parseFloat(value) ); break; // 0.00001市石 =\t0.0001市斗 =\t0.001市升 =\t0.01市合 =\t0.1勺 =\t1撮 =\t0.001升\n      }\n      setStatus('')\n    } else {\n      setResult(0);\n      setStatus('error');\n    }\n  }\n\n  const textAreaChange = (e :React.ChangeEvent<HTMLTextAreaElement>) => {\n    const value = e.target.value.trim();\n    setValue(value);\n    convert(value,type);\n  }\n\n  const f = (v :number) :string => {\n    if('' === value || status != '') return '';\n    return v.toString();\n  }\n\n  return (\n    <div>\n      {contextHolder}\n\n      <Space>\n        <Select\n          value={ unitType }\n          style={{ width: 80 }}\n          onChange={ (v :string) => { \n            setUnitType(v);\n            setTypeList(getTypeList(v));\n            const dt = getDefaultType(v);\n            setType(dt);\n            setPlaceholder(getTypePlaceholder(dt));\n            convert(value,dt);\n          } }\n          options={ unitTypeList }\n        />\n        <Radio.Group\n          optionType = \"button\" buttonStyle=\"solid\"\n          options = { typeList } \n          onChange={ onTypeChange } \n          value={ type } \n        />\n        <Button \n          onClick={ () => { setValue(''); setStatus(''); setResult(0); } }\n          style={ {\"backgroundColor\" : \"#dc3545\",\"color\": \"#fff\" }} \n        >清除</Button>\n      </Space>\n\n      <TextArea\n        status= { status as InputStatus }\n        style={ { margin: \"5px 0 5px 0\" }}\n        value= { value }\n        onChange={ textAreaChange }\n        placeholder={ placeholder }\n        autoSize={{ minRows: 3, maxRows: 3 }}\n      />\n\n      <Row wrap>\n        <Col span={6}>\n          <Divider dashed plain>公制</Divider>\n          <Form name=\"basic1\" labelCol={{ span: 12 }} autoComplete=\"off\">\n            <Form.Item label=\"升(l)\">\n              <Input readOnly style={ inputStyle } onClick={ inputClick } value= { f(result / 1000) } />\n            </Form.Item>\n            <Form.Item label=\"毫升(ml)\">\n              <Input readOnly style={ inputStyle } onClick={ inputClick } value= { f(result) } />\n            </Form.Item>\n            <Form.Item label=\"立方米(m³)\">\n              <Input readOnly style={ inputStyle } onClick={ inputClick } value= { f(result / 1000000) } />\n            </Form.Item>\n            <Form.Item label=\"立方分米(dm³)\">\n              <Input readOnly style={ inputStyle } onClick={ inputClick } value= { f(result / 1000) }/>\n            </Form.Item>\n            <Form.Item label=\"立方厘米(cm³)\">\n              <Input readOnly style={ inputStyle } onClick={ inputClick } value= { f(result) } />\n            </Form.Item>\n            <Form.Item label=\"立方毫米(mm³)\">\n              <Input readOnly style={ inputStyle } onClick={ inputClick } value= { f(result * 1000) } />\n            </Form.Item>\n          </Form>\n        </Col>\n\n        <Col span={6}>\n          <Divider dashed plain>英制</Divider>\n          <Form name=\"basic2\" labelCol={{ span: 10 }} autoComplete=\"off\" >\n            <Form.Item label=\"盎司\">\n              <Input readOnly style={ inputStyle } onClick={ inputClick } value= { f(result / 28.4130625 ) } />\n            </Form.Item>\n            <Form.Item label=\"加仑\">\n              <Input readOnly style={ inputStyle } onClick={ inputClick } value= { f(result / 4546.09 ) } />\n            </Form.Item>\n            <Form.Item label=\"打兰\">\n              <Input readOnly style={ inputStyle } onClick={ inputClick } value= { f(result / 3.5516328125 ) } />\n            </Form.Item>\n            <Form.Item label=\"茶匙\">\n              <Input readOnly style={ inputStyle } onClick={ inputClick } value= { f(result / 4.7355125 )  }/>\n            </Form.Item>\n            <Form.Item label=\"汤匙\">\n              <Input readOnly style={ inputStyle } onClick={ inputClick } value= { f(result / 14.2065375 )  }/>\n            </Form.Item>\n            <Form.Item label=\"及耳\">\n              <Input readOnly style={ inputStyle } onClick={ inputClick } value= { f(result / 142.0653125 )  }/>\n            </Form.Item>\n            <Form.Item label=\"杯\">\n              <Input readOnly style={ inputStyle } onClick={ inputClick } value= { f(result / 284.130625 )  }/>\n            </Form.Item>\n            <Form.Item label=\"品脱\">\n              <Input readOnly style={ inputStyle } onClick={ inputClick } value= { f(result / 568.26125 )  }/>\n            </Form.Item>\n            <Form.Item label=\"夸脱\">\n              <Input readOnly style={ inputStyle } onClick={ inputClick } value= { f(result / 1136.5225 )  }/>\n            </Form.Item>\n            <Form.Item label=\"立方英寸\">\n              <Input readOnly style={ inputStyle } onClick={ inputClick } value= { f(result / 16.387064 )  }/>\n            </Form.Item>\n            <Form.Item label=\"立方英尺\">\n              <Input readOnly style={ inputStyle } onClick={ inputClick } value= { f(result / 28316.8466 )  }/>\n            </Form.Item>\n            <Form.Item label=\"立方码\">\n              <Input readOnly style={ inputStyle } onClick={ inputClick } value= { f(result / 764554.858 )  }/>\n            </Form.Item>\n          </Form>\n        </Col>\n\n        <Col span={6}>\n          <Divider dashed plain>美制</Divider>\n          <Form name=\"basic3\" labelCol={{ span: 10 }} autoComplete=\"off\" >\n            <Form.Item label=\"盎司\">\n              <Input readOnly style={ inputStyle } onClick={ inputClick } value= { f(result / 29.5735295625) } />\n            </Form.Item>\n            <Form.Item label=\"加仑\">\n              <Input readOnly style={ inputStyle } onClick={ inputClick } value= { f(result / 3785.41178) } />\n            </Form.Item>\n            <Form.Item label=\"打兰\">\n              <Input readOnly style={ inputStyle } onClick={ inputClick } value= { f(result / 3.6966912) } />\n            </Form.Item>\n            <Form.Item label=\"茶匙\">\n              <Input readOnly style={ inputStyle } onClick={ inputClick } value= { f(result / 4.92892159)  }/>\n            </Form.Item>\n            <Form.Item label=\"汤匙\">\n              <Input readOnly style={ inputStyle } onClick={ inputClick } value= { f(result / 14.7867648)  }/>\n            </Form.Item>\n            <Form.Item label=\"及耳\">\n              <Input readOnly style={ inputStyle } onClick={ inputClick } value= { f(result / 118.294118)  }/>\n            </Form.Item>\n            <Form.Item label=\"杯\">\n              <Input readOnly style={ inputStyle } onClick={ inputClick } value= { f(result / 236.588236)  }/>\n            </Form.Item>\n            <Form.Item label=\"品脱\">\n              <Input readOnly style={ inputStyle } onClick={ inputClick } value= { f(result / 473.176473)  }/>\n            </Form.Item>\n            <Form.Item label=\"夸脱\">\n              <Input readOnly style={ inputStyle } onClick={ inputClick } value= { f(result / 946.352946)  }/>\n            </Form.Item>\n          </Form>\n        </Col>\n\n        <Col span={6}>\n          <Divider dashed plain>市制</Divider>\n\n          <Form name=\"basic4\" labelCol={{ span: 8 }} autoComplete=\"off\">\n            <Form.Item label=\"石\">\n              <Input readOnly style={ inputStyle } onClick={ inputClick } value= { f(result / 100000) } />\n            </Form.Item>\n            <Form.Item label=\"斗\">\n              <Input readOnly style={ inputStyle } onClick={ inputClick } value= { f(result / 10000) } />\n            </Form.Item>\n            <Form.Item label=\"升\">\n              <Input readOnly style={ inputStyle } onClick={ inputClick } value= { f(result / 1000) } />\n            </Form.Item>\n            <Form.Item label=\"合\">\n              <Input readOnly style={ inputStyle } onClick={ inputClick } value= { f(result / 100) }/>\n            </Form.Item>\n            <Form.Item label=\"勺\">\n              <Input readOnly style={ inputStyle } onClick={ inputClick } value= { f(result / 10) } />\n            </Form.Item>\n            <Form.Item label=\"撮\">\n              <Input readOnly style={ inputStyle } onClick={ inputClick } value= { f(result) } />\n            </Form.Item>\n          </Form>\n        </Col>\n      </Row>\n    </div>\n  );\n}\n\nexport default VolumeConvert;","import { typeList } from \"./data\";\n\n// 获指定制式的距离类型列表\nexport const getTypeList = (ut :string) => {\n  return typeList.filter((v) => v.type === ut)\n}\n\nexport const getDefaultType = (ut :string) :string =>{\n  switch(ut) {\n    case 'iu': return getDefaultIUType();\n    case 'cn': return getDefaultCNType();\n    case 'us': return getDefaultUSType();\n  }\n  return getDefaultMSType();\n}\n\nexport const getTypePlaceholder = (type :string) :string | undefined => {\n  return typeList.find(item => item.value === type)?.placeholder;\n}\n\nconst DEFAULT_UNIT_TYPE = 'volume-convert:default-unit-type';\n\n// 获取默认制式\nexport function getDefaultUnitType() :string  {\n  const type = localStorage.getItem(DEFAULT_UNIT_TYPE);\n  return (type === null)? \"ms\" : type;\n}\n\n// 设置默认制式\nexport function setDefaultUnitType(type: string) : void  {\n  localStorage.setItem(DEFAULT_UNIT_TYPE,type);\n}\n\nconst DEFAULT_MS_TYPE = 'volume-convert:default-ms-type';\n\n// 获取默认公制单位\nexport function getDefaultMSType() :string  {\n  const type = localStorage.getItem(DEFAULT_MS_TYPE);\n  return (type === null)? \"l\" : type;\n}\n\n// 设置默认公制单位\nexport function setDefaultMSType(type: string) : void  {\n  localStorage.setItem(DEFAULT_MS_TYPE,type);\n}\n\nconst DEFAULT_IU_TYPE = 'volume-convert:default-iu-type';\n\n// 获取默认英制单位\nexport function getDefaultIUType() :string  {\n  const type = localStorage.getItem(DEFAULT_IU_TYPE);\n  return (type === null)? \"iu-ounce\" : type;\n}\n\n// 设置默认英制单位\nexport function setDefaultIUType(type: string) : void  {\n  localStorage.setItem(DEFAULT_IU_TYPE,type);\n}\n\nconst DEFAULT_CN_TYPE = 'volume-convert:default-cn-type';\n\n// 获取默认市制单位\nexport function getDefaultCNType() :string  {\n  const type = localStorage.getItem(DEFAULT_CN_TYPE);\n  return (type === null)? \"dou\" : type;\n}\n\n// 设置默认市制单位\nexport function setDefaultCNType(type: string) : void  {\n  localStorage.setItem(DEFAULT_CN_TYPE,type);\n}\n\n\nconst DEFAULT_US_TYPE = 'volume-convert:default-us-type';\n\n// 获取默认美制单位\nexport function getDefaultUSType() :string  {\n  const type = localStorage.getItem(DEFAULT_US_TYPE);\n  return (type === null)? \"us-ounce\" : type;\n}\n\n// 设置默认美制单位\nexport function setDefaultUSType(type: string) : void  {\n  localStorage.setItem(DEFAULT_US_TYPE,type);\n}\n","// 复制到粘贴板\r\nexport async function copyTextToClipboard(text: string) {\r\n  if (\"clipboard\" in navigator) {\r\n    return await navigator.clipboard.writeText(text);\r\n  } else {\r\n    return document.execCommand('copy', true, text);\r\n  }\r\n}\r\n\r\n// 防抖函数\r\nexport function debounce(operate:Function, delay:number) {\r\n  let time :any = null\r\n  let timer :any = null\r\n  let newTime = null\r\n  function task() {\r\n    newTime =+ new Date()\r\n    if(newTime - time < delay) {\r\n      timer = setTimeout(task, delay)\r\n    } else {\r\n      operate()\r\n      timer = null\r\n    }\r\n    time = newTime\r\n  }\r\n  return function () {\r\n    // 更新时间戳\r\n    time =+ new Date();\r\n    if(!timer) {\r\n      timer = setTimeout(task, delay)\r\n    }\r\n  }\r\n}\r\n\r\n// 每间隔多少字符插入指定了符\r\nexport function insertIntervalString(str :string, disNum :number = 4, insertStr:string  = \" \") {\r\n  return str.replace(new RegExp(\"(.{\" + disNum + \"})\", \"g\"), \"$1\" + insertStr);\r\n}\r\n"],"names":["unitTypeList","label","value","placeholder","typeList","type","TextArea","VolumeConvert","ut","getDefaultUnitType","unitType","setUnitType","useState","setTypeList","getTypeList","setValue","status","setStatus","dt","getDefaultType","setType","setPlaceholder","getTypePlaceholder","result","setResult","notice","contextHolder","inputStyle","cursor","inputClick","e","txt","target","trim","success","convert","test","parseFloat","f","v","toString","style","width","onChange","options","optionType","buttonStyle","t","onClick","margin","autoSize","minRows","maxRows","wrap","span","dashed","plain","name","labelCol","autoComplete","readOnly","getDefaultIUType","getDefaultCNType","getDefaultUSType","getDefaultMSType","item","DEFAULT_UNIT_TYPE","localStorage","getItem","setDefaultUnitType","setItem","DEFAULT_MS_TYPE","setDefaultMSType","DEFAULT_IU_TYPE","setDefaultIUType","DEFAULT_CN_TYPE","setDefaultCNType","DEFAULT_US_TYPE","setDefaultUSType","async","copyTextToClipboard","text","navigator","clipboard","writeText","document","execCommand","debounce","operate","delay","time","timer","newTime","task","Date","setTimeout","insertIntervalString","str","disNum","insertStr","replace","RegExp"],"sourceRoot":""}