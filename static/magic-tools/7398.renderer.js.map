{"version":3,"file":"7398.renderer.js","mappings":"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","sources":["webpack://magic-tools/./node_modules/@ant-design/icons-svg/es/asn/CloseOutlined.js","webpack://magic-tools/./node_modules/@ant-design/icons/es/icons/CloseOutlined.js","webpack://magic-tools/./src/renderer/App/LineCount/index.tsx","webpack://magic-tools/./src/renderer/App/LineCount/lib.ts","webpack://magic-tools/./src/renderer/lib/file.ts","webpack://magic-tools/./src/renderer/lib/index.ts"],"sourcesContent":["// This icon file is generated automatically.\nvar CloseOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M563.8 512l262.5-312.9c4.4-5.2.7-13.1-6.1-13.1h-79.8c-4.7 0-9.2 2.1-12.3 5.7L511.6 449.8 295.1 191.7c-3-3.6-7.5-5.7-12.3-5.7H203c-6.8 0-10.5 7.9-6.1 13.1L459.4 512 196.9 824.9A7.95 7.95 0 00203 838h79.8c4.7 0 9.2-2.1 12.3-5.7l216.5-258.1 216.5 258.1c3 3.6 7.5 5.7 12.3 5.7h79.8c6.8 0 10.5-7.9 6.1-13.1L563.8 512z\" } }] }, \"name\": \"close\", \"theme\": \"outlined\" };\nexport default CloseOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport CloseOutlinedSvg from \"@ant-design/icons-svg/es/asn/CloseOutlined\";\nimport AntdIcon from '../components/AntdIcon';\nvar CloseOutlined = function CloseOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: CloseOutlinedSvg\n  }));\n};\nif (process.env.NODE_ENV !== 'production') {\n  CloseOutlined.displayName = 'CloseOutlined';\n}\nexport default /*#__PURE__*/React.forwardRef(CloseOutlined);","// 内容统计页\nimport { Button,Input, Space, message } from \"antd\";\nimport { useState } from \"react\";\nconst { TextArea } = Input;\nimport { copyTextToClipboard } from \"../../lib\"\nimport { openFile } from \"../../lib/file\"\nimport { InputStatus } from \"antd/es/_util/statusUtils\";\nimport { calcLineCount, removeEmptyLine } from \"./lib\"\n\nconst LineCount = () => {\n\n  let inputElement :HTMLInputElement;\n  const [ value, setValue ] = useState(''); // 输入的文本\n  const [ lineCount, setLineCount ] = useState(0); // 行数\n  const [ start, setStart ] = useState(''); // 开始行\n  const [ startStatus, setStartStatus ] = useState(''); // 开始行状态\n  const [ end, setEnd ] = useState(''); // 结束行\n  const [ endStatus, setEndStatus ] = useState(''); // 结束行状态\n  const [ notice, contextHolder] = message.useMessage();\n\n  const copyContent = (value :string) => {\n    copyTextToClipboard(value);\n    notice.success(\"选取内容已复制到粘贴板!!!\");\n  }\n\n  const onStartChange = (e :React.ChangeEvent<HTMLInputElement>) => {\n    const v = parseInt(e.target.value);\n    if('NaN' === v.toString()) return setStart('');\n    // 开始行不能是最后一行\n    setStartStatus((v >= lineCount)? 'error': '');\n    setStart(v.toString());\n  }\n\n  const onEndChange = (e :React.ChangeEvent<HTMLInputElement>) => {\n    const v = parseInt(e.target.value);\n    if('NaN' === v.toString()) return setEnd('');\n\n    // 不能大于最后一行 或 不能小于等开始行\n    if((v > lineCount) ||  ( start !== '' && v <= parseInt(start) ) ) {\n      setEndStatus('error');\n    } else {\n      setEndStatus('');\n    }\n    setEnd(v.toString());\n  }\n\n  // 提取内容\n  const pickContent = () => {\n    if(value.trim() === '') return ;\n    // start & end 都为空说明提取全部 \n    if('' === start && '' === end) return copyContent(value);\n    // 如果 start 为空说明提取从第一行开始\n    const s = (start === '')? 1 : parseInt(start);\n    // 如果 end 为空说明提取到最后\n    const e = (end === '')? lineCount : parseInt(end);\n    // arr = split value 值 \n    const arr = value.split(\"\\n\");\n    let r = [];\n    let c = s - 1;\n    // 取从 arr[start - 1] 到 arr[end - 1] 的内容\n    while (c < e) {\n      r.push(arr[c]);\n      c++;\n    }\n    // 保存到粘贴板上\n    copyContent(r.join(\"\\n\"));\n  }\n\n  // 打开文件后的回调操作\n  const changeContent = (str :string) => {\n    setValue(str);\n    setLineCount(calcLineCount(str));\n  }\n\n  // 打开本地文件 \n  const fileChange = async (e: React.ChangeEvent<HTMLInputElement>) => {\n    const files = e.target.files || [];\n    openFile(files, changeContent);\n  };\n  \n  return (\n    <div>\n      {contextHolder}\n\n      <Space>\n        <Button\n          onClick={ () => { setLineCount(0); setValue('') } }\n          style={ { backgroundColor: \"#dc3545\", color: \"#fff\" } } \n        >清除</Button>\n        |\n        <Button \n          onClick={ () => { let v = removeEmptyLine(value); setValue(v); setLineCount(calcLineCount(v)); } }\n          style={ { backgroundColor: \"#28a745\", color: \"#fff\" } } \n        >去除空行</Button>\n        |\n        {/* <Button \n          onClick={ () => { setValue(removeEmptyLine(value)) } }\n          style={ { backgroundColor: \"#28a745\", color: \"#fff\" } } \n        >去除注释</Button>\n        | */}\n        <Input\n          status={ startStatus as InputStatus }\n          style={ { width: \"80px\" }}\n          placeholder=\"开始行数\"\n          value={ start } \n          onChange={ onStartChange } /> \n        ~ \n        <Input\n          status={ endStatus as InputStatus }\n          style={ { width: \"80px\" }}\n          placeholder=\"结束行数\"\n          value={ end } \n          onChange={ onEndChange } />\n        <Button \n          onClick={ pickContent }\n          style={ { backgroundColor: \"#007bff\", color: \"#fff\" } } \n        >提取内容</Button>\n        | \n        <Button \n          onClick={ ()=> { inputElement?.click() } }\n          style={ { backgroundColor: \"#007bff\", color: \"#fff\" } } \n        >打开文件</Button>\n        <input \n          onChange={ fileChange }\n          ref={ input => inputElement = input as HTMLInputElement }\n          type=\"file\" id=\"fileInput\" style={ { display: 'none'}} />\n        |\n        <span>\n          <label>行数:</label> { lineCount }\n        </span>\n        <span>\n          <label>字符数:</label> { value.length }\n        </span>\n      </Space>\n\n      <TextArea\n        style={ { margin: \"12px 0 5px 0\" }}\n        onChange={ (e) => { changeContent(e.target.value); } }\n        value= { value }\n        placeholder=\"输入需要统计的内容 或 拖拽文件到框内\"\n        autoSize={{ minRows: 26,maxRows:26 }}\n        onDragOver={ (e) => { e.preventDefault(); } } // 必须加上，否则无法触发下面的方法\n        onDrop={ (e) => { e.preventDefault(); openFile(e.dataTransfer.files, changeContent ); } }\n      />\n    </div>\n  );\n}\n\nexport default LineCount;","// 计算行数\r\nexport const calcLineCount = (value :string) :number => {\r\n  const arr = value.split(\"\\n\")\r\n  const len = arr.length;\r\n  // 当只有一行时，内容只有一个 \\n 返回 0\r\n  if(1 === len && arr[0] === \"\") return 0;\r\n  return len;\r\n  // return ('' === value.trim())? 0 : len:  \r\n}\r\n\r\n// 移除空行\r\nexport const removeEmptyLine = (v :string) :string => {\r\n  if('' === v.trim()) return \"\";\r\n  let arr:Array<string> = [];\r\n  v.split(\"\\n\").map((line :string) => {\r\n    if('' !== line.trim() ) { \r\n      arr.push(line);\r\n    }\r\n  })\r\n  return arr.join(\"\\n\");\r\n}","\n// 打开文件制作\nexport const openFile = (files: any, callback :Function) => {\n  if(0 === files.length) {\n    // notice.error(\"请选择文件！！！\");\n    return;\n  }\n  const reader = new FileReader();\n  // 加载失败\n  reader.onerror = (err) => {\n    console.log(err);\n  }\n  // 文件加载完毕\n  reader.onload = () => {\n    callback(reader.result as string)\n    // setValue(reader.result as string);\n    // setLineCount(calcLineCount(reader.result as string));\n  }\n  reader.readAsText(files[0]);\n}","// 复制到粘贴板\r\nexport async function copyTextToClipboard(text: string) {\r\n  if (\"clipboard\" in navigator) {\r\n    return await navigator.clipboard.writeText(text);\r\n  } else {\r\n    return document.execCommand('copy', true, text);\r\n  }\r\n}\r\n\r\n// 防抖函数\r\nexport function debounce(operate:Function, delay:number) {\r\n  let time :any = null\r\n  let timer :any = null\r\n  let newTime = null\r\n  function task() {\r\n    newTime =+ new Date()\r\n    if(newTime - time < delay) {\r\n      timer = setTimeout(task, delay)\r\n    } else {\r\n      operate()\r\n      timer = null\r\n    }\r\n    time = newTime\r\n  }\r\n  return function () {\r\n    // 更新时间戳\r\n    time =+ new Date();\r\n    if(!timer) {\r\n      timer = setTimeout(task, delay)\r\n    }\r\n  }\r\n}\r\n\r\n// 每间隔多少字符插入指定了符\r\nexport function insertIntervalString(str :string, disNum :number = 4, insertStr:string  = \" \") {\r\n  return str.replace(new RegExp(\"(.{\" + disNum + \"})\", \"g\"), \"$1\" + insertStr);\r\n}\r\n"],"names":["props","ref","AntdIcon","icon","TextArea","inputElement","value","setValue","useState","lineCount","setLineCount","start","setStart","startStatus","setStartStatus","end","setEnd","endStatus","setEndStatus","notice","contextHolder","copyContent","success","changeContent","str","calcLineCount","onClick","style","backgroundColor","color","v","removeEmptyLine","status","width","placeholder","onChange","e","parseInt","target","toString","trim","s","arr","split","r","c","push","join","click","async","files","input","type","id","display","length","margin","autoSize","minRows","maxRows","onDragOver","preventDefault","onDrop","dataTransfer","len","map","line","openFile","callback","reader","FileReader","onerror","err","console","log","onload","result","readAsText","copyTextToClipboard","text","navigator","clipboard","writeText","document","execCommand","debounce","operate","delay","time","timer","newTime","task","Date","setTimeout","insertIntervalString","disNum","insertStr","replace","RegExp"],"sourceRoot":""}