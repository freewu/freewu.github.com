{"version":3,"file":"8693.renderer.js","mappings":"oOAEA,MAAM,SAAEA,GAAa,UAkErB,EA7DsB,KAEpB,MAAQC,EAAQC,IAAc,IAAAC,UAAS,KAC/BC,EAAOC,IAAa,IAAAF,UAAS,KAC7BG,EAAQC,IAAc,IAAAJ,UAAS,KAC/BK,EAAQC,GAAkB,kBAE5BC,EAAuBC,IAC3B,MAAMC,EAAOD,EAAEE,OAA4BT,MAAMU,OACtC,KAARF,KACD,QAAoBA,GACpBJ,EAAOO,QAAQ,e,EAanB,OACE,2BAEGN,GAED,SAAC,KAAM,CACLO,QAAU,KAAQX,EAAS,IAAKE,EAAU,IAAKL,EAAU,GAAG,EAC5De,MAAQ,CAAC,gBAAoB,UAAU,MAAS,QAAQ,iBAG1D,SAACjB,EAAQ,CACPC,OAAUA,EACVgB,MAAQ,CAAEC,OAAQ,eAClBC,cAAgBT,EAChBU,SAAYT,IAvBH,CAACP,IACdC,EAASD,GACY,IAAhBA,EAAMU,OACTP,GAAU,QAAOH,IAEjBG,EAAU,G,EAkBYc,CAAOV,EAAEE,OAAOT,MAAM,EAC1CkB,MAAM,aACNlB,MAASA,EACTmB,YAAY,QACZC,SAAU,CAAEC,QAAS,EAAGC,QAAS,OAGnC,SAAC,IAAO,CAACC,QAAM,EAACC,OAAK,sBAErB,SAAC5B,EAAQ,CACPiB,MAAQ,CAAEC,OAAQ,eAClBI,MAAM,aACNN,QAAUN,EACVN,MAASE,EACTc,SAAYT,IAAQJ,EAAUI,EAAEE,OAAOT,MAAM,EAC7CmB,YAAY,aACZC,SAAU,CAAEC,QAAS,GAAIC,QAAS,QAIvC,C,iBChEIG,eAAeC,EAAoBC,GACxC,MAAI,cAAeC,gBACJA,UAAUC,UAAUC,UAAUH,GAEpCI,SAASC,YAAY,QAAQ,EAAML,EAE9C,CAGO,SAASM,EAASC,EAAkBC,GACzC,IAAIC,EAAY,KACZC,EAAa,KACbC,EAAU,KACd,SAASC,IACPD,GAAW,IAAIE,KACZF,EAAUF,EAAOD,EAClBE,EAAQI,WAAWF,EAAMJ,IAEzBD,IACAG,EAAQ,MAEVD,EAAOE,CACT,CACA,OAAO,WAELF,GAAQ,IAAII,KACRH,IACFA,EAAQI,WAAWF,EAAMJ,GAE7B,CACF,CAGO,SAASO,EAAqBC,EAAaC,EAAiB,EAAGC,EAAoB,KACxF,OAAOF,EAAIG,QAAQ,IAAIC,OAAO,MAAQH,EAAS,KAAM,KAAM,KAAOC,EACpE,C","sources":["webpack://magic-tools/./src/renderer/App/PinyinConvert/index.tsx","webpack://magic-tools/./src/renderer/lib/index.ts"],"sourcesContent":["import { Divider, Button,Input, message } from \"antd\";\nimport { useState } from \"react\";\nconst { TextArea } = Input;\nimport { copyTextToClipboard } from \"./../../lib\"\nimport { InputStatus } from \"antd/es/_util/statusUtils\";\nimport { pinyin } from 'pinyin-pro';\n\nconst PinyinConvert = () => {\n\n  const [ status, setStatus ] = useState('');\n  const [ value, setValue ] = useState('');\n  const [ result, setResult ] = useState('');\n  const [ notice, contextHolder ] = message.useMessage(); // 消息提醒\n\n  const textareaDoubleClick = (e :React.MouseEvent<HTMLTextAreaElement>) => {\n    const txt = (e.target as HTMLInputElement).value.trim();\n    if(txt !== '') {\n      copyTextToClipboard(txt);\n      notice.success(\"复制到粘贴板成功！！！\");\n    }\n  };\n\n  const encode = (value :string) => {\n    setValue(value);\n    if ( value.trim() != \"\") {\n      setResult(pinyin(value));\n    } else {\n      setResult('');\n    }\n  }\n\n  return (\n    <div>\n\n      {contextHolder}\n\n      <Button \n        onClick={ () => { setValue(''); setResult(''); setStatus(''); } }\n        style={ {\"backgroundColor\" : \"#dc3545\",\"color\": \"#fff\" }} \n      >清除</Button>\n\n      <TextArea\n        status= { status as InputStatus }\n        style={ { margin: \"5px 0 5px 0\" }}\n        onDoubleClick={ textareaDoubleClick }\n        onChange={ (e) => { encode(e.target.value); } }\n        title=\"双击复制内容到粘贴板\"\n        value= { value }\n        placeholder=\"请输入中文\"\n        autoSize={{ minRows: 5, maxRows: 10 }}\n      />\n\n      <Divider dashed plain>转换的结果</Divider>\n      \n      <TextArea\n        style={ { margin: \"5px 0 5px 0\" }}\n        title=\"点击复制内容到粘贴板\"\n        onClick={ textareaDoubleClick }\n        value= { result }\n        onChange={ (e) => { setResult(e.target.value); } }\n        placeholder=\"点击复制内容到粘贴板\"\n        autoSize={{ minRows: 10, maxRows: 10 }}\n      />\n\n    </div>\n  );\n}\n\nexport default PinyinConvert;","// 复制到粘贴板\r\nexport async function copyTextToClipboard(text: string) {\r\n  if (\"clipboard\" in navigator) {\r\n    return await navigator.clipboard.writeText(text);\r\n  } else {\r\n    return document.execCommand('copy', true, text);\r\n  }\r\n}\r\n\r\n// 防抖函数\r\nexport function debounce(operate:Function, delay:number) {\r\n  let time :any = null\r\n  let timer :any = null\r\n  let newTime = null\r\n  function task() {\r\n    newTime =+ new Date()\r\n    if(newTime - time < delay) {\r\n      timer = setTimeout(task, delay)\r\n    } else {\r\n      operate()\r\n      timer = null\r\n    }\r\n    time = newTime\r\n  }\r\n  return function () {\r\n    // 更新时间戳\r\n    time =+ new Date();\r\n    if(!timer) {\r\n      timer = setTimeout(task, delay)\r\n    }\r\n  }\r\n}\r\n\r\n// 每间隔多少字符插入指定了符\r\nexport function insertIntervalString(str :string, disNum :number = 4, insertStr:string  = \" \") {\r\n  return str.replace(new RegExp(\"(.{\" + disNum + \"})\", \"g\"), \"$1\" + insertStr);\r\n}\r\n"],"names":["TextArea","status","setStatus","useState","value","setValue","result","setResult","notice","contextHolder","textareaDoubleClick","e","txt","target","trim","success","onClick","style","margin","onDoubleClick","onChange","encode","title","placeholder","autoSize","minRows","maxRows","dashed","plain","async","copyTextToClipboard","text","navigator","clipboard","writeText","document","execCommand","debounce","operate","delay","time","timer","newTime","task","Date","setTimeout","insertIntervalString","str","disNum","insertStr","replace","RegExp"],"sourceRoot":""}