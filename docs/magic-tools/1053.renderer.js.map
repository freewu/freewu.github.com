{"version":3,"file":"1053.renderer.js","mappings":"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","sources":["webpack://magic-tools/./node_modules/@ant-design/icons-svg/es/asn/DownOutlined.js","webpack://magic-tools/./node_modules/@ant-design/icons/es/icons/DownOutlined.js","webpack://magic-tools/./src/renderer/App/Hash/lib.ts","webpack://magic-tools/./src/renderer/App/Hash/setting.tsx","webpack://magic-tools/./src/renderer/App/HmacHash/lib.ts","webpack://magic-tools/./src/renderer/App/HmacHash/setting.tsx","webpack://magic-tools/./src/renderer/App/PBKDF2Calc/lib.ts","webpack://magic-tools/./src/renderer/App/PBKDF2Calc/setting.tsx","webpack://magic-tools/./src/renderer/App/Setting/setting-value-calc.tsx"],"sourcesContent":["// This icon file is generated automatically.\nvar DownOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M884 256h-75c-5.1 0-9.9 2.5-12.9 6.6L512 654.2 227.9 262.6c-3-4.1-7.8-6.6-12.9-6.6h-75c-6.5 0-10.3 7.4-6.5 12.7l352.6 486.1c12.8 17.6 39 17.6 51.7 0l352.6-486.1c3.9-5.3.1-12.7-6.4-12.7z\" } }] }, \"name\": \"down\", \"theme\": \"outlined\" };\nexport default DownOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport DownOutlinedSvg from \"@ant-design/icons-svg/es/asn/DownOutlined\";\nimport AntdIcon from '../components/AntdIcon';\nvar DownOutlined = function DownOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: DownOutlinedSvg\n  }));\n};\nif (process.env.NODE_ENV !== 'production') {\n  DownOutlined.displayName = 'DownOutlined';\n}\nexport default /*#__PURE__*/React.forwardRef(DownOutlined);","// 获取默认的常用密码列表\r\nexport function getDefaultPasswordList() :Array<string> {\r\n  return [\r\n    \"admin\",\r\n    \"123456\",\r\n    \"12345678\",\r\n    \"root\",\r\n    \"password\",\r\n    \"qwerty\",\r\n    \"1234\",\r\n    \"12345\",\r\n  ]\r\n}\r\n\r\nconst PASSWORD_LIST_ITEM = 'hash:password-list';\r\n\r\n// 获取设置的密码列表 如果没有设置使用默认列表\r\nexport function getPasswordList() :Array<string> {\r\n  const list = localStorage.getItem(PASSWORD_LIST_ITEM);\r\n  // 如果没有设置,返回默认的常用密码列表\r\n  if (null === list) return getDefaultPasswordList();\r\n\r\n  let arr = list.split(\",\");\r\n  arr = arr.filter((item) => { return item.trim() !== \"\" });\r\n  if (0 === arr.length) return getDefaultPasswordList();\r\n  \r\n  return arr;\r\n}\r\n\r\n// 设置密码列表 \r\nexport function setPasswordList(list: Array<string>) : void  {\r\n  localStorage.setItem(PASSWORD_LIST_ITEM,list.join(\",\"));\r\n}","import { Input, Form, Divider, notification } from \"antd\";\nconst { TextArea } = Input;\nimport { useState } from \"react\";\nimport { getPasswordList,setPasswordList } from \"./lib\"\n\nexport const HashSetting = () => {\n  const [ value, setValue ] = useState(getPasswordList().join(\"\\n\"));\n\n  const onTextAreaChange = (e :React.ChangeEvent<HTMLTextAreaElement>) => {\n    const value = e.target.value;\n    let arr = value.trim().split(\"\\n\");\n    arr = arr.map((item) => { return item.trim().replaceAll(\" \",\"\"); }) // 去掉所有空格\n    arr = arr.filter((item) => { return \"\" !== item.trim() });  // remove empty elements. \n    // if(arr.length >= 10) {\n    //   setValue(arr.join(\"\\n\"));\n    //   return false;\n    // }\n    setValue(value);\n    // 更新配置信息\n    setPasswordList(arr);\n  };\n\n  return (\n    <>\n      <Divider orientation=\"left\" plain>Hash 值计算</Divider>\n      <Form.Item label=\"展示默认字符串\">\n        <TextArea\n          value= { value }\n          onChange={ onTextAreaChange }\n          placeholder=\"每行一条数据\"\n          autoSize={{ minRows: 3, maxRows: 5 }}\n        />\n      </Form.Item>\n    </>\n  );\n}","const DEFAULT_PASSPHRASE = 'hmac-hash:default-passphrase';\n\n// 获取默认密钥\nexport function getDefaultPassphrase() :string  {\n  const passphrase = localStorage.getItem(DEFAULT_PASSPHRASE);\n  return (passphrase === null)? \"\" : passphrase;\n}\n\n// 设置默认密钥\nexport function setDefaultPassphrase(passphrase: string) : void  {\n  localStorage.setItem(DEFAULT_PASSPHRASE, passphrase);\n}","import { Select, Form, Divider, Input, Space } from \"antd\";\nimport React,{ useState } from \"react\";\nimport { getDefaultPassphrase, setDefaultPassphrase } from \"./lib\";\n\nexport const HmacHashSetting = () => {\n\n  const [ passphrase, setPassphrase ] = useState(getDefaultPassphrase()); // 默认密钥\n\n  return (\n    <>\n      <Divider orientation=\"left\" plain>HmacHash 值计算</Divider>\n      <Form.Item label=\"默认密钥\">\n        <Space>\n          <Input \n            allowClear\n            style={ { width: \"520px\" } }\n            onChange={ (e) => { setPassphrase(e.target.value); setDefaultPassphrase(e.target.value); } }\n            value= { passphrase } />\n        </Space>\n      </Form.Item>\n    </>\n  );\n}","import * as CryptoJS from 'crypto-js';\n\n// 获取指定的 Hash 算法\nexport const getHashAlgo = (hash :string) => {\n  switch(hash) {\n    case 'MD5': return CryptoJS.algo.MD5;\n    case 'SHA1': return CryptoJS.algo.SHA1;\n    case 'SHA3': return CryptoJS.algo.SHA3;\n    case 'SHA224': return CryptoJS.algo.SHA224;\n    case 'SHA256': return CryptoJS.algo.SHA256;\n    case 'SHA384': return CryptoJS.algo.SHA384;\n    case 'SHA512': return CryptoJS.algo.SHA512;\n    case 'RIPEMD160': return CryptoJS.algo.RIPEMD160;\n  }\n  return CryptoJS.algo.SHA256;\n}\n\nconst DEFAULT_HASH_ALGO = 'pbkdf2-calc:default-hash-algo';\n\n// 获取默认 Hash 算法\nexport const getDefaultHashAlgo = () :string => {\n  const algo = localStorage.getItem(DEFAULT_HASH_ALGO);\n  return (algo === null)? \"SHA256\" : algo;\n}\n\n// 设置默认 Hash 算法\nexport function setDefaultHashAlgo(algo: string) :void  {\n  localStorage.setItem(DEFAULT_HASH_ALGO,algo);\n}\n\nconst DEFAULT_SALT = 'pbkdf2-calc:default-salt';\n\n// 获取默认盐值\nexport function getDefaultSalt() :string {\n  const salt = localStorage.getItem(DEFAULT_SALT);\n  return (salt === null)? \"\" : salt;\n}\n\n// 设置默认偏移量\nexport function setDefaultSalt(salt: string) :void  {\n  localStorage.setItem(DEFAULT_SALT, salt);\n}\n\nconst DEFAULT_ITERATION = 'pbkdf2-calc:default-iteration';\n\n// 获取默认迭代次数\nexport function getDefaultIteration() :number {\n  const iter = localStorage.getItem(DEFAULT_ITERATION);\n  return (iter === null)? 1000 : parseInt(iter); // 推荐 1000 + \n}\n\n// 设置默认迭代次数\nexport function setDefaultIteration(iter: number) :void {\n  localStorage.setItem(DEFAULT_ITERATION, iter.toString());\n}\n\nconst DEFAULT_KEY_LENGTH = 'pbkdf2-calc:default-key-length';\n\n// 获取默认推导密钥的长度 \nexport function getDefaultKeyLength() :number {\n  const len = localStorage.getItem(DEFAULT_KEY_LENGTH);\n  return (len === null)? 128 : parseInt(len); // 建议  128 / 256 / 512\n}\n\n// 设置默认推导密钥的长度\nexport function setDefaultKeyLength(len: number) :void {\n  localStorage.setItem(DEFAULT_KEY_LENGTH, len.toString());\n}\n\nexport const genValuePlaceholder = (algo :string) => {\n  return \"输入需要计算 PBKDF2-\" + algo + \" 值的内容 或 拖拽文件到框内打开\";\n}","import { Select, Form, Divider, Input, InputNumber } from \"antd\";\nimport React,{ useState } from \"react\";\nimport { arrayToOptions } from \"../../lib/array\"\nimport { hashAlgoList } from \"./data\";\nimport { getDefaultHashAlgo, setDefaultHashAlgo } from \"./lib\";\nimport { getDefaultSalt, setDefaultSalt } from \"./lib\";\nimport { getDefaultIteration, setDefaultIteration } from \"./lib\";\nimport { getDefaultKeyLength, setDefaultKeyLength } from \"./lib\";\nimport type { InputStatus } from \"antd/es/_util/statusUtils\";\n\nexport const PBKDF2CalcSetting = () => {\n\n  const [ algo, setAlgo ] = useState(getDefaultHashAlgo()); //  Hash 算法\n  const [ salt, setSalt ] = useState(getDefaultSalt()); // 盐值\n  const [ iter, setIter ] = useState(getDefaultIteration()); // 迭代次数\n  const [ keyLength, setKeyLength ] = useState(getDefaultKeyLength()); // 推导密钥的长度\n\n  return (\n    <>\n      <Divider orientation=\"left\" plain>PBKDF2 值计算</Divider>\n      {/* <Form.Item label=\"默认 Hash 算法\">\n        <Select\n          value={ algo }\n          style={{ width: 240 }}\n          onChange={ (v :string) => { setAlgo(v); setDefaultHashAlgo(v); } }\n          options={ arrayToOptions(hashAlgoList) }\n        />\n      </Form.Item> */}\n      <Form.Item label=\"默认盐值(Salt)\">\n        <Input \n          showCount\n          allowClear\n          style={ { width: 520 } }\n          onChange={ (e) => { setSalt(e.target.value); setDefaultSalt(e.target.value); } }\n          value= { salt } />\n      </Form.Item>\n      <Form.Item label=\"迭代次数\">\n        <InputNumber\n          addonAfter=\"次\"\n          min = { 1 }\n          max = { 100000 }\n          style={ { width: 200 } }\n          onChange={ (v :number | null) => { \n            if(v != null) {\n              if(v >= 1 && v <= 100000) {\n                setDefaultIteration(v);\n                setIter(v);\n              }\n            } \n          } }\n          value= { iter } />\n      </Form.Item>\n      <Form.Item label=\"推导密钥长度\">\n        <InputNumber\n          addonAfter=\"位\"\n          placeholder= \"推荐 128 / 256 / 512\"\n          title= \"推荐 128 / 256 / 512\"\n          min = { 16 }\n          max = { 2048 }\n          style={ { width: 200 } }\n          onChange={ (v :number | null) => { \n            if(v != null) {\n              if(v >= 16 && v <= 1024) {\n                setDefaultKeyLength(v);\n                setKeyLength(v);\n              }\n            } \n          } }\n          value= { keyLength } />\n      </Form.Item>\n    </>\n  );\n}","\nimport { Form } from \"antd\";\nimport { HashSetting } from \"../Hash/setting\";\nimport { PBKDF2CalcSetting } from \"../PBKDF2Calc/setting\";\nimport { HmacHashSetting } from \"../HmacHash/setting\";\n\n\nexport const SettingValueCalc = () => {\n\n  return (\n    <Form labelCol={{ span: 5 }} wrapperCol={{ span: 18  }} layout=\"horizontal\"  style={{ maxWidth: 800 }}>\n      <HashSetting />\n      <PBKDF2CalcSetting />\n      <HmacHashSetting />\n    </Form>\n  )\n}"],"names":["props","ref","AntdIcon","icon","getDefaultPasswordList","PASSWORD_LIST_ITEM","getPasswordList","list","localStorage","getItem","arr","split","filter","item","trim","length","setPasswordList","setItem","join","TextArea","HashSetting","value","setValue","useState","orientation","plain","label","onChange","e","target","map","replaceAll","placeholder","autoSize","minRows","maxRows","DEFAULT_PASSPHRASE","getDefaultPassphrase","passphrase","setDefaultPassphrase","HmacHashSetting","setPassphrase","allowClear","style","width","getHashAlgo","hash","DEFAULT_HASH_ALGO","getDefaultHashAlgo","algo","setDefaultHashAlgo","DEFAULT_SALT","getDefaultSalt","salt","setDefaultSalt","DEFAULT_ITERATION","getDefaultIteration","iter","parseInt","setDefaultIteration","toString","DEFAULT_KEY_LENGTH","getDefaultKeyLength","len","setDefaultKeyLength","genValuePlaceholder","PBKDF2CalcSetting","setAlgo","setSalt","setIter","keyLength","setKeyLength","showCount","addonAfter","min","max","v","title","SettingValueCalc","labelCol","span","wrapperCol","layout","maxWidth"],"sourceRoot":""}