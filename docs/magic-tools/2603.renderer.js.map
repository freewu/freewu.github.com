{"version":3,"file":"2603.renderer.js","mappings":"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","sources":["webpack://magic-tools/./src/renderer/App/AppStore/setting.tsx","webpack://magic-tools/./src/renderer/App/Hash/lib.ts","webpack://magic-tools/./src/renderer/App/Hash/setting.tsx","webpack://magic-tools/./src/renderer/App/HmacHash/lib.ts","webpack://magic-tools/./src/renderer/App/HmacHash/setting.tsx","webpack://magic-tools/./src/renderer/App/PBKDF2Calc/lib.ts","webpack://magic-tools/./src/renderer/App/PBKDF2Calc/setting.tsx","webpack://magic-tools/./src/renderer/App/QRCodeGenerator/data.ts","webpack://magic-tools/./src/renderer/App/QRCodeGenerator/lib.ts","webpack://magic-tools/./src/renderer/App/QRCodeGenerator/setting.tsx","webpack://magic-tools/./src/renderer/App/Setting/data.tsx","webpack://magic-tools/./src/renderer/App/Setting/index.tsx","webpack://magic-tools/./src/renderer/App/Setting/setting-misc.tsx","webpack://magic-tools/./src/renderer/App/Setting/setting-system.tsx","webpack://magic-tools/./src/renderer/App/Setting/setting-value-calc.tsx","webpack://magic-tools/./src/renderer/lib/index.ts"],"sourcesContent":["import { Select, Form, Divider, notification } from \"antd\";\nimport { getDefaultApp,setDefaultApp } from \"./lib\";\nimport { useState } from \"react\";\nimport { appList } from \"../index\";\n\nexport const AppStoreSetting = () => {\n  const [ app, setApp ] = useState(getDefaultApp()); // 默认展示的 app\n\n  const onChangeDefaultApp = (value: string) => {\n    setApp(value);\n    setDefaultApp(value);\n  };\n\n  // 应用列表\n  const getAppList = () => {\n    const result = [\n      { value: 'AppStore', label: '应用中心' },\n      { value: 'Help', label: '帮助' },\n      { value: 'Setting', label: '设置' },\n    ];\n    appList.forEach((v) => {\n      result.push({ value: v.key, label:  v.label });\n    });\n    return result;\n  };\n\n  return (\n    <>\n      <Divider orientation=\"left\" plain>应用中心</Divider>\n      <Form.Item label=\"默认展示应用\">\n        <Select\n          value={ app }\n          style={{ width: 240 }}\n          onChange={ onChangeDefaultApp }\n          options={ getAppList() }\n        />\n      </Form.Item>\n    </>\n  );\n}","// 获取默认的常用密码列表\r\nexport function getDefaultPasswordList() :Array<string> {\r\n  return [\r\n    \"admin\",\r\n    \"123456\",\r\n    \"12345678\",\r\n    \"root\",\r\n    \"password\",\r\n    \"qwerty\",\r\n    \"1234\",\r\n    \"12345\",\r\n  ]\r\n}\r\n\r\nconst PASSWORD_LIST_ITEM = 'hash:password-list';\r\n\r\n// 获取设置的密码列表 如果没有设置使用默认列表\r\nexport function getPasswordList() :Array<string> {\r\n  const list = localStorage.getItem(PASSWORD_LIST_ITEM);\r\n  // 如果没有设置,返回默认的常用密码列表\r\n  if (null === list) return getDefaultPasswordList();\r\n\r\n  let arr = list.split(\",\");\r\n  arr = arr.filter((item) => { return item.trim() !== \"\" });\r\n  if (0 === arr.length) return getDefaultPasswordList();\r\n  \r\n  return arr;\r\n}\r\n\r\n// 设置密码列表 \r\nexport function setPasswordList(list: Array<string>) : void  {\r\n  localStorage.setItem(PASSWORD_LIST_ITEM,list.join(\",\"));\r\n}","import { Input, Form, Divider, notification } from \"antd\";\nconst { TextArea } = Input;\nimport { useState } from \"react\";\nimport { getPasswordList,setPasswordList } from \"./lib\"\n\nexport const HashSetting = () => {\n  const [ value, setValue ] = useState(getPasswordList().join(\"\\n\"));\n\n  const onTextAreaChange = (e :React.ChangeEvent<HTMLTextAreaElement>) => {\n    const value = e.target.value;\n    let arr = value.trim().split(\"\\n\");\n    arr = arr.map((item) => { return item.trim().replaceAll(\" \",\"\"); }) // 去掉所有空格\n    arr = arr.filter((item) => { return \"\" !== item.trim() });  // remove empty elements. \n    // if(arr.length >= 10) {\n    //   setValue(arr.join(\"\\n\"));\n    //   return false;\n    // }\n    setValue(value);\n    // 更新配置信息\n    setPasswordList(arr);\n  };\n\n  return (\n    <>\n      <Divider orientation=\"left\" plain>Hash 值计算</Divider>\n      <Form.Item label=\"展示默认字符串\">\n        <TextArea\n          value= { value }\n          onChange={ onTextAreaChange }\n          placeholder=\"每行一条数据\"\n          autoSize={{ minRows: 3, maxRows: 5 }}\n        />\n      </Form.Item>\n    </>\n  );\n}","const DEFAULT_PASSPHRASE = 'hmac-hash:default-passphrase';\n\n// 获取默认密钥\nexport function getDefaultPassphrase() :string  {\n  const passphrase = localStorage.getItem(DEFAULT_PASSPHRASE);\n  return (passphrase === null)? \"\" : passphrase;\n}\n\n// 设置默认密钥\nexport function setDefaultPassphrase(passphrase: string) : void  {\n  localStorage.setItem(DEFAULT_PASSPHRASE, passphrase);\n}","import { Select, Form, Divider, Input, Space } from \"antd\";\nimport React,{ useState } from \"react\";\nimport { getDefaultPassphrase, setDefaultPassphrase } from \"./lib\";\n\nexport const HmacHashSetting = () => {\n\n  const [ passphrase, setPassphrase ] = useState(getDefaultPassphrase()); // 默认密钥\n\n  return (\n    <>\n      <Divider orientation=\"left\" plain>HmacHash 值计算</Divider>\n      <Form.Item label=\"默认密钥\">\n        <Space>\n          <Input \n            allowClear\n            style={ { width: \"520px\" } }\n            onChange={ (e) => { setPassphrase(e.target.value); setDefaultPassphrase(e.target.value); } }\n            value= { passphrase } />\n        </Space>\n      </Form.Item>\n    </>\n  );\n}","import * as CryptoJS from 'crypto-js';\n\n// 获取指定的 Hash 算法\nexport const getHashAlgo = (hash :string) => {\n  switch(hash) {\n    case 'MD5': return CryptoJS.algo.MD5;\n    case 'SHA1': return CryptoJS.algo.SHA1;\n    case 'SHA3': return CryptoJS.algo.SHA3;\n    case 'SHA224': return CryptoJS.algo.SHA224;\n    case 'SHA256': return CryptoJS.algo.SHA256;\n    case 'SHA384': return CryptoJS.algo.SHA384;\n    case 'SHA512': return CryptoJS.algo.SHA512;\n    case 'RIPEMD160': return CryptoJS.algo.RIPEMD160;\n  }\n  return CryptoJS.algo.SHA256;\n}\n\nconst DEFAULT_HASH_ALGO = 'pbkdf2-calc:default-hash-algo';\n\n// 获取默认 Hash 算法\nexport const getDefaultHashAlgo = () :string => {\n  const algo = localStorage.getItem(DEFAULT_HASH_ALGO);\n  return (algo === null)? \"SHA256\" : algo;\n}\n\n// 设置默认 Hash 算法\nexport function setDefaultHashAlgo(algo: string) :void  {\n  localStorage.setItem(DEFAULT_HASH_ALGO,algo);\n}\n\nconst DEFAULT_SALT = 'pbkdf2-calc:default-salt';\n\n// 获取默认盐值\nexport function getDefaultSalt() :string {\n  const salt = localStorage.getItem(DEFAULT_SALT);\n  return (salt === null)? \"\" : salt;\n}\n\n// 设置默认偏移量\nexport function setDefaultSalt(salt: string) :void  {\n  localStorage.setItem(DEFAULT_SALT, salt);\n}\n\nconst DEFAULT_ITERATION = 'pbkdf2-calc:default-iteration';\n\n// 获取默认迭代次数\nexport function getDefaultIteration() :number {\n  const iter = localStorage.getItem(DEFAULT_ITERATION);\n  return (iter === null)? 1000 : parseInt(iter); // 推荐 1000 + \n}\n\n// 设置默认迭代次数\nexport function setDefaultIteration(iter: number) :void {\n  localStorage.setItem(DEFAULT_ITERATION, iter.toString());\n}\n\nconst DEFAULT_KEY_LENGTH = 'pbkdf2-calc:default-key-length';\n\n// 获取默认推导密钥的长度 \nexport function getDefaultKeyLength() :number {\n  const len = localStorage.getItem(DEFAULT_KEY_LENGTH);\n  return (len === null)? 128 : parseInt(len); // 建议  128 / 256 / 512\n}\n\n// 设置默认推导密钥的长度\nexport function setDefaultKeyLength(len: number) :void {\n  localStorage.setItem(DEFAULT_KEY_LENGTH, len.toString());\n}\n\nexport const genValuePlaceholder = (algo :string) => {\n  return \"输入需要计算 PBKDF2-\" + algo + \" 值的内容 或 拖拽文件到框内打开\";\n}","import { Select, Form, Divider, Input, InputNumber } from \"antd\";\nimport React,{ useState } from \"react\";\nimport { arrayToOptions } from \"../../lib/array\"\nimport { hashAlgoList } from \"./data\";\nimport { getDefaultHashAlgo, setDefaultHashAlgo } from \"./lib\";\nimport { getDefaultSalt, setDefaultSalt } from \"./lib\";\nimport { getDefaultIteration, setDefaultIteration } from \"./lib\";\nimport { getDefaultKeyLength, setDefaultKeyLength } from \"./lib\";\nimport type { InputStatus } from \"antd/es/_util/statusUtils\";\n\nexport const PBKDF2CalcSetting = () => {\n\n  const [ algo, setAlgo ] = useState(getDefaultHashAlgo()); //  Hash 算法\n  const [ salt, setSalt ] = useState(getDefaultSalt()); // 盐值\n  const [ iter, setIter ] = useState(getDefaultIteration()); // 迭代次数\n  const [ keyLength, setKeyLength ] = useState(getDefaultKeyLength()); // 推导密钥的长度\n\n  return (\n    <>\n      <Divider orientation=\"left\" plain>PBKDF2 值计算</Divider>\n      {/* <Form.Item label=\"默认 Hash 算法\">\n        <Select\n          value={ algo }\n          style={{ width: 240 }}\n          onChange={ (v :string) => { setAlgo(v); setDefaultHashAlgo(v); } }\n          options={ arrayToOptions(hashAlgoList) }\n        />\n      </Form.Item> */}\n      <Form.Item label=\"默认盐值(Salt)\">\n        <Input \n          showCount\n          allowClear\n          style={ { width: 520 } }\n          onChange={ (e) => { setSalt(e.target.value); setDefaultSalt(e.target.value); } }\n          value= { salt } />\n      </Form.Item>\n      <Form.Item label=\"迭代次数\">\n        <InputNumber\n          addonAfter=\"次\"\n          min = { 1 }\n          max = { 100000 }\n          style={ { width: 200 } }\n          onChange={ (v :number | null) => { \n            if(v != null) {\n              if(v >= 1 && v <= 100000) {\n                setDefaultIteration(v);\n                setIter(v);\n              }\n            } \n          } }\n          value= { iter } />\n      </Form.Item>\n      <Form.Item label=\"推导密钥长度\">\n        <InputNumber\n          addonAfter=\"位\"\n          placeholder= \"推荐 128 / 256 / 512\"\n          title= \"推荐 128 / 256 / 512\"\n          min = { 16 }\n          max = { 2048 }\n          style={ { width: 200 } }\n          onChange={ (v :number | null) => { \n            if(v != null) {\n              if(v >= 16 && v <= 1024) {\n                setDefaultKeyLength(v);\n                setKeyLength(v);\n              }\n            } \n          } }\n          value= { keyLength } />\n      </Form.Item>\n    </>\n  );\n}","// 容错率列表\r\nconst errorCorrectionLevelList = [\r\n    { value: 'L', label: 'Low', info:'~7%' },\r\n    { value: 'M', label: 'Medium', info:'~15%' },\r\n    { value: 'Q', label: 'Quartile', info:'~25%' },\r\n    { value: 'H', label: 'High', info:'~30%' },\r\n];\r\n\r\nexport {\r\n    errorCorrectionLevelList\r\n}","import { errorCorrectionLevelList } from './data';\r\n\r\nconst DEFAULT_ERROR_LEVEL_ITEM = 'qrcode:default-error-level';\r\n\r\n// 获取默认容错等级\r\nexport function getDefaultErrorLevel() :string  {\r\n  const defaultLevel = localStorage.getItem(DEFAULT_ERROR_LEVEL_ITEM);\r\n  // 如果没有设置默认容错等级\r\n  return (defaultLevel === null)? 'M' : defaultLevel;\r\n}\r\n\r\n// 设置默认容错等级\r\nexport function setDefaultErrorLevel(level: string) : void  {\r\n  const d = errorCorrectionLevelList.find((v) => { return v.value === level});\r\n  if (d) {\r\n    localStorage.setItem(DEFAULT_ERROR_LEVEL_ITEM, level);\r\n  } else {\r\n    localStorage.setItem(DEFAULT_ERROR_LEVEL_ITEM, 'M');\r\n  }\r\n}\r\n\r\n// 获取容错等级的提示信息\r\nexport function getErrorLevelTip(level: string) :string {\r\n  const t = errorCorrectionLevelList.find((item) => { return item.value === level; });\r\n  if(t) return t.info;\r\n  return \"\";\r\n}\r\n\r\nconst DEFAULT_SIZE_ITEM = 'qrcode:default-size';\r\n// 获取默认尺寸\r\nexport function getDefaultSize() :number  {\r\n  const item = localStorage.getItem(DEFAULT_SIZE_ITEM);\r\n  // 如果没有设置默认尺寸\r\n  if(item === null) return 160;\r\n  const size = parseInt(item); //\r\n  return (size < 160)? 160 : size;\r\n}\r\n\r\n// 设置默认尺寸\r\nexport function setDefaultSize(size: number) : void  {\r\n  if (size >= 160 ) {\r\n    localStorage.setItem(DEFAULT_SIZE_ITEM, size.toString());\r\n  } else {\r\n    localStorage.setItem(DEFAULT_SIZE_ITEM, '160');\r\n  }\r\n}","import { Select, Form, Divider, notification, Slider, Space } from \"antd\";\nimport { getDefaultErrorLevel, setDefaultErrorLevel, getDefaultSize, setDefaultSize } from \"./lib\";\nimport { useState } from \"react\";\nimport { errorCorrectionLevelList } from \"./data\";\n\nexport const QRCodeGeneratorSetting = () => {\n  const [ level, setLevel ] = useState(getDefaultErrorLevel()); // 默认容错级别\n  const [ size, setSize ] = useState(getDefaultSize()); // 默认尺寸\n\n  return (\n    <>\n      <Divider orientation=\"left\" plain>二维码生成</Divider>\n      <Form.Item label=\"默认容错等级\">\n        <Select\n          value={ level }\n          style={{ width: 240 }}\n          onChange={ (value) => { setLevel(value); setDefaultErrorLevel(value); } }\n          options={ errorCorrectionLevelList }\n        />\n      </Form.Item>\n      <Form.Item label=\"默认尺寸\">\n        <Space>\n          <div style={ {width: \"520px\"} }>\n            <Slider\n              value={ size }\n              min = { 160 }\n              max = { 360 }\n              // tooltip={{ open: true, placement: 'top' }}\n              onChange={ (value) => { setSize(value); setDefaultSize(value); }}\n            />\n          </div>\n          { size }\n        </Space>\n      </Form.Item>\n    </>\n  );\n}\n","\nimport { SettingSystem } from \"./setting-system\"\nimport { SettingCrypto } from \"./setting-crypto\"\nimport { SettingValueCalc } from \"./setting-value-calc\"\nimport { SettingConvert } from \"./setting-convert\"\nimport { SettingMisc } from \"./setting-misc\"\n\nexport const itemList = [\n  {\n    key : 'system',\n    label : '系统设置',\n    children: <SettingSystem />\n  },\n  {\n    key : 'crypto',\n    label : '加解密',\n    children: <SettingCrypto />\n  },\n  {\n    key : 'value-calc',\n    label : '值计算',\n    children: <SettingValueCalc />\n  },\n  {\n    key : 'convert',\n    label : '类型转换',\n    children: <SettingConvert />\n  },\n  {\n    key : 'misc',\n    label : '其它',\n    children: <SettingMisc />\n  },\n];","import { Tabs, Form, Switch } from \"antd\";\nimport { useState } from \"react\";\nimport \"./setting.css\";\nimport { debounce } from \"../../lib\";\nimport { itemList } from \"./data\";\n\nconst Setting = () => {\n  const genSettingFormHeight = () => {\n    return (window.innerHeight - 70) + \"px\";\n  };\n\n  const [ height, setHeight ] = useState(genSettingFormHeight()); // 窗口大小高度\n\n  // 窗体大小发生变化,改变窗口大小\n  window.addEventListener('resize', debounce(() => { setHeight(genSettingFormHeight()) },100) );\n\n  return (\n    <div style={ { height: height, overflowY: \"auto\" } }>\n      <Tabs items={ itemList } />\n    </div>\n  );\n}\n\nexport default Setting;","\nimport { Form } from \"antd\";\nimport { ColorSetting } from \"../Color/setting\";\nimport { QRCodeGeneratorSetting } from \"../QRCodeGenerator/setting\";\n\nexport const SettingMisc = () => {\n\n  return (\n    <Form labelCol={{ span: 5 }} wrapperCol={{ span: 18  }} layout=\"horizontal\"  style={{ maxWidth: 800 }}>\n      <ColorSetting />\n      <QRCodeGeneratorSetting />\n    </Form>\n  )\n}","import { getSiderFlag } from \"../../lib/setting\";\nimport { useState } from \"react\";\nimport { Form, Switch } from \"antd\";\nimport { AppStoreSetting } from \"../AppStore/setting\";\n\nexport const SettingSystem = () => {\n\n  const [ siderFlag, setSiderFlag ] = useState(getSiderFlag());\n  const onChangeSiderFlag = (checked: boolean) => {\n    setSiderFlag(checked);\n    localStorage.setItem('sider-flag', checked + \"\");\n  };\n\n  return (\n    <Form\n      labelCol={{ span: 5 }}\n      wrapperCol={{ span: 18 }}\n      layout=\"horizontal\"\n      style={{ maxWidth: 800 }}\n    >\n      <Form.Item label=\"默认展开右边栏\">\n        <Switch checked={ siderFlag } onChange={ onChangeSiderFlag } />\n      </Form.Item>\n      <AppStoreSetting />\n    </Form>\n  )\n}","\nimport { Form } from \"antd\";\nimport { HashSetting } from \"../Hash/setting\";\nimport { PBKDF2CalcSetting } from \"../PBKDF2Calc/setting\";\nimport { HmacHashSetting } from \"../HmacHash/setting\";\n\n\nexport const SettingValueCalc = () => {\n\n  return (\n    <Form labelCol={{ span: 5 }} wrapperCol={{ span: 18  }} layout=\"horizontal\"  style={{ maxWidth: 800 }}>\n      <HashSetting />\n      <PBKDF2CalcSetting />\n      <HmacHashSetting />\n    </Form>\n  )\n}","// 复制到粘贴板\r\nexport async function copyTextToClipboard(text: string) {\r\n  if (\"clipboard\" in navigator) {\r\n    return await navigator.clipboard.writeText(text);\r\n  } else {\r\n    return document.execCommand('copy', true, text);\r\n  }\r\n}\r\n\r\n// 防抖函数\r\nexport function debounce(operate:Function, delay:number) {\r\n  let time :any = null\r\n  let timer :any = null\r\n  let newTime = null\r\n  function task() {\r\n    newTime =+ new Date()\r\n    if(newTime - time < delay) {\r\n      timer = setTimeout(task, delay)\r\n    } else {\r\n      operate()\r\n      timer = null\r\n    }\r\n    time = newTime\r\n  }\r\n  return function () {\r\n    // 更新时间戳\r\n    time =+ new Date();\r\n    if(!timer) {\r\n      timer = setTimeout(task, delay)\r\n    }\r\n  }\r\n}\r\n\r\n// 每间隔多少字符插入指定了符\r\nexport function insertIntervalString(str :string, disNum :number = 4, insertStr:string  = \" \") {\r\n  return str.replace(new RegExp(\"(.{\" + disNum + \"})\", \"g\"), \"$1\" + insertStr);\r\n}\r\n"],"names":["AppStoreSetting","app","setApp","useState","getDefaultApp","orientation","plain","label","value","style","width","onChange","setDefaultApp","options","result","appList","v","push","key","getAppList","getDefaultPasswordList","PASSWORD_LIST_ITEM","getPasswordList","list","localStorage","getItem","arr","split","filter","item","trim","length","setPasswordList","setItem","join","TextArea","HashSetting","setValue","e","target","map","replaceAll","placeholder","autoSize","minRows","maxRows","DEFAULT_PASSPHRASE","getDefaultPassphrase","passphrase","setDefaultPassphrase","HmacHashSetting","setPassphrase","allowClear","getHashAlgo","hash","DEFAULT_HASH_ALGO","getDefaultHashAlgo","algo","setDefaultHashAlgo","DEFAULT_SALT","getDefaultSalt","salt","setDefaultSalt","DEFAULT_ITERATION","getDefaultIteration","iter","parseInt","setDefaultIteration","toString","DEFAULT_KEY_LENGTH","getDefaultKeyLength","len","setDefaultKeyLength","genValuePlaceholder","PBKDF2CalcSetting","setAlgo","setSalt","setIter","keyLength","setKeyLength","showCount","addonAfter","min","max","title","errorCorrectionLevelList","info","DEFAULT_ERROR_LEVEL_ITEM","getDefaultErrorLevel","defaultLevel","setDefaultErrorLevel","level","getErrorLevelTip","t","DEFAULT_SIZE_ITEM","getDefaultSize","size","setDefaultSize","QRCodeGeneratorSetting","setLevel","setSize","itemList","children","SettingSystem","SettingCrypto","SettingValueCalc","SettingConvert","SettingMisc","genSettingFormHeight","window","innerHeight","height","setHeight","addEventListener","overflowY","items","labelCol","span","wrapperCol","layout","maxWidth","ColorSetting","siderFlag","setSiderFlag","checked","async","copyTextToClipboard","text","navigator","clipboard","writeText","document","execCommand","debounce","operate","delay","time","timer","newTime","task","Date","setTimeout","insertIntervalString","str","disNum","insertStr","replace","RegExp"],"sourceRoot":""}