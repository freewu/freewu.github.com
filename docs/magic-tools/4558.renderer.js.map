{"version":3,"file":"4558.renderer.js","mappings":"+JACA,MAAMA,EAA2B,CAC7B,CAAEC,MAAO,IAAKC,MAAO,MAAOC,KAAK,OACjC,CAAEF,MAAO,IAAKC,MAAO,SAAUC,KAAK,QACpC,CAAEF,MAAO,IAAKC,MAAO,WAAYC,KAAK,QACtC,CAAEF,MAAO,IAAKC,MAAO,OAAQC,KAAK,Q,wKCHtC,MAAMC,EAA2B,6BAG1B,SAASC,IACd,MAAMC,EAAeC,aAAaC,QAAQJ,GAE1C,OAAyB,OAAjBE,EAAwB,IAAMA,CACxC,CAGO,SAASG,EAAqBC,GACzB,EAAAV,yBAAA,MAA+BW,GAAeA,EAAEV,QAAUS,IAElEH,aAAaK,QAAQR,EAA0BM,GAE/CH,aAAaK,QAAQR,EAA0B,IAEnD,CAGO,SAASS,EAAiBH,GAC/B,MAAMI,EAAI,EAAAd,yBAAA,MAA+Be,GAAkBA,EAAKd,QAAUS,IAC1E,OAAGI,EAAUA,EAAEX,KACR,EACT,CAEA,MAAMa,EAAoB,sBAEnB,SAASC,IACd,MAAMF,EAAOR,aAAaC,QAAQQ,GAElC,GAAY,OAATD,EAAe,OAAO,IACzB,MAAMG,EAAOC,SAASJ,GACtB,OAAQG,EAAO,IAAM,IAAMA,CAC7B,CAGO,SAASE,EAAeF,GACzBA,GAAQ,IACVX,aAAaK,QAAQI,EAAmBE,EAAKG,YAE7Cd,aAAaK,QAAQI,EAAmB,MAE5C,C","sources":["webpack://magic-tools/./src/renderer/App/QRCodeGenerator/data.ts","webpack://magic-tools/./src/renderer/App/QRCodeGenerator/lib.ts"],"sourcesContent":["// 容错率列表\r\nconst errorCorrectionLevelList = [\r\n    { value: 'L', label: 'Low', info:'~7%' },\r\n    { value: 'M', label: 'Medium', info:'~15%' },\r\n    { value: 'Q', label: 'Quartile', info:'~25%' },\r\n    { value: 'H', label: 'High', info:'~30%' },\r\n];\r\n\r\nexport {\r\n    errorCorrectionLevelList\r\n}","import { errorCorrectionLevelList } from './data';\r\n\r\nconst DEFAULT_ERROR_LEVEL_ITEM = 'qrcode:default-error-level';\r\n\r\n// 获取默认容错等级\r\nexport function getDefaultErrorLevel() :string  {\r\n  const defaultLevel = localStorage.getItem(DEFAULT_ERROR_LEVEL_ITEM);\r\n  // 如果没有设置默认容错等级\r\n  return (defaultLevel === null)? 'M' : defaultLevel;\r\n}\r\n\r\n// 设置默认容错等级\r\nexport function setDefaultErrorLevel(level: string) : void  {\r\n  const d = errorCorrectionLevelList.find((v) => { return v.value === level});\r\n  if (d) {\r\n    localStorage.setItem(DEFAULT_ERROR_LEVEL_ITEM, level);\r\n  } else {\r\n    localStorage.setItem(DEFAULT_ERROR_LEVEL_ITEM, 'M');\r\n  }\r\n}\r\n\r\n// 获取容错等级的提示信息\r\nexport function getErrorLevelTip(level: string) :string {\r\n  const t = errorCorrectionLevelList.find((item) => { return item.value === level; });\r\n  if(t) return t.info;\r\n  return \"\";\r\n}\r\n\r\nconst DEFAULT_SIZE_ITEM = 'qrcode:default-size';\r\n// 获取默认尺寸\r\nexport function getDefaultSize() :number  {\r\n  const item = localStorage.getItem(DEFAULT_SIZE_ITEM);\r\n  // 如果没有设置默认尺寸\r\n  if(item === null) return 160;\r\n  const size = parseInt(item); //\r\n  return (size < 160)? 160 : size;\r\n}\r\n\r\n// 设置默认尺寸\r\nexport function setDefaultSize(size: number) : void  {\r\n  if (size >= 160 ) {\r\n    localStorage.setItem(DEFAULT_SIZE_ITEM, size.toString());\r\n  } else {\r\n    localStorage.setItem(DEFAULT_SIZE_ITEM, '160');\r\n  }\r\n}"],"names":["errorCorrectionLevelList","value","label","info","DEFAULT_ERROR_LEVEL_ITEM","getDefaultErrorLevel","defaultLevel","localStorage","getItem","setDefaultErrorLevel","level","v","setItem","getErrorLevelTip","t","item","DEFAULT_SIZE_ITEM","getDefaultSize","size","parseInt","setDefaultSize","toString"],"sourceRoot":""}