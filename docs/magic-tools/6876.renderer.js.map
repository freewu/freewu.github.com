{"version":3,"file":"6876.renderer.js","mappings":"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","sources":["webpack://magic-tools/./node_modules/antd/es/col/index.js","webpack://magic-tools/./node_modules/antd/es/row/index.js","webpack://magic-tools/./src/renderer/App/DistanceConvert/data.ts","webpack://magic-tools/./src/renderer/App/DistanceConvert/index.tsx","webpack://magic-tools/./src/renderer/App/DistanceConvert/lib.ts","webpack://magic-tools/./src/renderer/lib/index.ts"],"sourcesContent":["import { Col } from '../grid';\nexport default Col;","import { Row } from '../grid';\nexport default Row;","export const unitTypeList = [\n  { label: '公制', value: 'ms', placeholder: 'metric system'},\n  { label: '英制', value: 'iu', placeholder: 'Imperial units'},\n  { label: '市制', value: 'cn', placeholder: ''},\n];\n\nexport const typeList = [\n  { label: '千米', value: 'km', type:'ms', placeholder: ''},\n  { label: '米',   value: 'm',  type:'ms', placeholder: '' },\n  { label: '分米', value: 'dm', type:'ms', placeholder: '' },\n  { label: '厘米', value: 'cm', type:'ms', placeholder: '' },\n  { label: '毫米', value: 'mm', type:'ms', placeholder: '' },\n  { label: '微米', value: 'μm', type:'ms', placeholder: '' },\n  { label: '纳米', value: 'nm', type:'ms', placeholder: '' },\n  { label: '皮米', value: 'pm', type:'ms', placeholder: '' },\n  { label: '海里', value: 'nmile', type:'ms', placeholder: '等于4千万米除以360然后再除以60，其结果就是大约1852米，也就是说，1海里大约是1.852公里' },\n  // { label: '光年', value: 'ly', type:'ms', placeholder: '光在宇宙真空中沿直线经过一年时间的距离，为9,460‘7304’7258‘0800米' },\n  // { label: '天文单位', value: 'au', type:'ms', placeholder: '曾以地球与太阳的平均距离定义。2012年8月，天文学家以无记名投票的方式，把天文单位固定为149,597,870,700米' },\n\n  { label: '英寸', value: 'inch', type:'iu', placeholder: ''},\n  { label: '英尺', value: 'foot', type:'iu', placeholder: ''},\n  { label: '码',   value: 'yard', type:'iu', placeholder: ''},\n  { label: '英里', value: 'mile', type:'iu', placeholder: ''},\n  { label: '英寻', value: 'fathom', type:'iu', placeholder: ''},\n  { label: '链', value: 'chain', type:'iu', placeholder: '也称 测链 英文：chain，是英美制中一种长度单位 1链 (chain) = 20.1168米 (m)'},\n  { label: '化朗', value: 'furlong', type:'iu', placeholder: '一单位长度等于660呎(英尺)或220码或10链，约等于公制的201.168米。8化朗等于1哩，5化朗等于1005.84米，约等于1千米'},\n  \n/**\n# 化朗（furlong）\n\n  又叫[浪]、[弗隆] 是使用于英国、前英国殖民地和英联邦国家的长度单位。\n  美国等国家采用。一单位长度等于660呎(英尺)或220码或10链，约等于公制的 201.168米。8化朗等于1哩，5化朗等于1005.84米，约等于1千米。\n\n\n# 英寻\n\n  英文:fathom\n  海洋测量中的深度单位 1英寻=1/11链=1/110弗隆=1/880英里=2码=6英尺=72英寸=1浔 1英寻=1.829米\n\n# 链，也称 测链\n\n  英文：chain，是英美制中一种长度单位。 靠近的单位有：浪 (也称弗隆,furlong)，码 等。 1链 (chain) = 20.1168米 (m)\n */\n  \n  { label: '里', value: 'li', type:'cn', placeholder: ''},\n  { label: '引', value: 'ying', type:'cn', placeholder: ''},\n  { label: '丈', value: 'zhang', type:'cn', placeholder: ''},\n  { label: '尺', value: 'chi', type:'cn', placeholder: ''},\n  { label: '寸', value: 'cun', type:'cn', placeholder: ''},\n  { label: '分', value: 'fen', type:'cn', placeholder: ''},\n  { label: '厘', value: 'l', type:'cn', placeholder: ''},\n  { label: '毫', value: 'hao', type:'cn', placeholder: ''},\n  { label: '丝', value: 'si', type:'cn', placeholder: ''},\n];","import { Select, Form, Input, Divider, message, Space, Radio, Button, Row, Col } from \"antd\";\nimport { useState } from \"react\";\nconst { TextArea } = Input;\nimport { copyTextToClipboard } from \"./../../lib\"\nimport { unitTypeList } from \"./data\"\nimport type { RadioChangeEvent } from 'antd';\nimport { getDefaultUnitType, getTypeList, getDefaultType, getTypePlaceholder } from \"./lib\"\nimport { InputStatus } from \"antd/es/_util/statusUtils\";\n\nconst DistanceConvert = () => {\n\n  const ut = getDefaultUnitType();\n  const [ unitType, setUnitType ] = useState(ut); // 制式 \n  const [ typeList, setTypeList ] = useState(getTypeList(ut)); // 类型\n  const [ value, setValue ] = useState(''); // 输入数量\n  const [ status, setStatus ] = useState(''); // 输入是否合法\n\n  const dt = getDefaultType(ut);\n  const [ type, setType ] = useState(dt); // 转换类型\n  const [ placeholder, setPlaceholder ] = useState(getTypePlaceholder(dt)); // 数字类型的输入提示\n  const [ result, setResult ] = useState(0); // 转换的结果 统一转换成 米\n  const [ notice, contextHolder] = message.useMessage();\n\n  const inputStyle = { cursor: \"pointer\" };\n\n  // 切换类型\n  const onTypeChange = ({ target: { value : t } }: RadioChangeEvent) => {\n    setType(t);\n    setPlaceholder(getTypePlaceholder(t));\n    convert(value,t);\n  };\n\n  // 点击结果框,把结果复制到粘贴板\n  const inputClick = (e :React.MouseEvent<HTMLElement>) => {\n    const txt = (e.target as HTMLInputElement).value.trim();\n    if(txt != \"\") {\n      copyTextToClipboard(txt);\n      notice.success(\"复制到粘贴板成功！！！\");\n    }\n  };\n\n  const convert = (value:string, type :string) => {\n    if(\"\" == value) {\n      setStatus('');\n      return ; // 没有内容直接返回不做下面的处理\n    }\n    if(/^[0-9\\.\\-]+$/.test(value)) {\n      switch(type) {\n        case \"km\": setResult(parseFloat(value) * 1000); break;\n        case \"m\": setResult(parseFloat(value)); break;\n        case \"dm\": setResult(parseFloat(value) / 10); break;\n        case \"cm\": setResult(parseFloat(value) / 100); break;\n        case \"mm\": setResult(parseFloat(value) / 1000 ); break;\n        case \"μm\": setResult(parseFloat(value) / 1000 / 1000); break;\n        case \"nm\": setResult(parseFloat(value) / 1000 / 1000 / 1000); break;\n        case \"pm\": setResult(parseFloat(value) / 1000 / 1000 / 1000 / 1000); break;\n        case \"nmile\": setResult(parseFloat(value) * 1852); break;\n        //case \"ly\": setResult(parseFloat(value) * 9460730472580800); break;\n        //case \"au\": setResult(parseFloat(value) * 149597870); break;\n\n        case \"inch\": setResult(parseFloat(value) * 2.54 / 100 ); break; // 1 英寸 = 2.54 cm\n        case \"foot\": setResult(parseFloat(value) * 0.3048); break;\n        case \"yard\": setResult(parseFloat(value) * 0.9144); break;\n        case \"mile\": setResult(parseFloat(value) * 1.6093 / 1000); break;\n        case \"fathom\": setResult(parseFloat(value) * 1.829 ); break; // 1英寻 = 1.829米\n        case \"chain\": setResult(parseFloat(value) * 20.1168 ); break; // 1链 (chain) = 20.1168米 (m)\n        case \"furlong\": setResult(parseFloat(value) * 201.168); break; // 约等于公制的 201.168米\n\n        // 1里 =\t15引 =\t150丈 =\t1500尺 =\t1,5000寸 =\t15,0000分 =\t150,0000釐 =\t1500,0000毫 =\t500米\n        case \"li\": setResult(parseFloat(value) * 500 ); break;\n        case \"ying\": setResult(parseFloat(value) * 500 / 15 ); break;\n        case \"zhang\": setResult(parseFloat(value) * 50  / 15); break;\n        case \"chi\": setResult(parseFloat(value) * 5 / 15 ); break;\n        case \"cun\": setResult(parseFloat(value) * 5 / 150 ); break;\n        case \"fen\": setResult(parseFloat(value) * 5 / 1500 ); break;\n        case \"l\": setResult(parseFloat(value) * 5 / 15000 ); break;\n        case \"hao\": setResult(parseFloat(value) * 5 / 150000 ); break;\n        case \"si\": setResult(parseFloat(value) * 5 / 15000000 ); break;\n      }\n      setStatus('')\n    } else {\n      setResult(0);\n      setStatus('error');\n    }\n  }\n\n  const textAreaChange = (e :React.ChangeEvent<HTMLTextAreaElement>) => {\n    const value = e.target.value.trim();\n    setValue(value);\n    convert(value,type);\n  }\n\n  const f = (v :number) :string => {\n    if(0 === v) return '';\n    return v.toString();\n  }\n\n  return (\n    <div>\n      {contextHolder}\n\n      <Space>\n        <Select\n          value={ unitType }\n          style={{ width: 80 }}\n          onChange={ (v :string) => { \n            setUnitType(v);\n            setTypeList(getTypeList(v));\n            const dt = getDefaultType(v);\n            setType(dt);\n            setPlaceholder(getTypePlaceholder(dt));\n            convert(value,dt);\n          } }\n          options={ unitTypeList }\n        />\n        <Radio.Group\n          optionType = \"button\" buttonStyle=\"solid\"\n          options = { typeList } \n          onChange={ onTypeChange } \n          value={ type } \n        />\n        <Button \n          onClick={ () => { setValue(''); setStatus(''); setResult(0); } }\n          style={ {\"backgroundColor\" : \"#dc3545\",\"color\": \"#fff\" }} \n        >清除</Button>\n      </Space>\n\n      <TextArea\n        status= { status as InputStatus }\n        style={ { margin: \"5px 0 5px 0\" }}\n        value= { value }\n        onChange={ textAreaChange }\n        placeholder={ placeholder }\n        autoSize={{ minRows: 3, maxRows: 3 }}\n      />\n\n      <Row wrap>\n        <Col span={8}>\n          <Divider dashed plain>公制</Divider>\n          <Form name=\"basic1\" labelCol={{ span: 8 }} autoComplete=\"off\">\n            <Form.Item label=\"千米\">\n              <Input readOnly style={ inputStyle } onClick={ inputClick } value= { f(result / 1000) } />\n            </Form.Item>\n            <Form.Item label=\"米\">\n              <Input readOnly style={ inputStyle } onClick={ inputClick } value= { f(result) } />\n            </Form.Item>\n            <Form.Item label=\"分米\">\n              <Input readOnly style={ inputStyle } onClick={ inputClick } value= { f(result * 10) } />\n            </Form.Item>\n            <Form.Item label=\"厘米\">\n              <Input readOnly style={ inputStyle } onClick={ inputClick } value= { f(result * 100) }/>\n            </Form.Item>\n            <Form.Item label=\"毫米\">\n              <Input readOnly style={ inputStyle } onClick={ inputClick } value= { f(result * 1000) } />\n            </Form.Item>\n            <Form.Item label=\"微米\">\n              <Input readOnly style={ inputStyle } onClick={ inputClick } value= { f(result * 1000 * 1000) } />\n            </Form.Item>\n            <Form.Item label=\"纳米\">\n              <Input readOnly style={ inputStyle } onClick={ inputClick } value= { f(result * 1000 * 1000 * 1000) } />\n            </Form.Item>\n            <Form.Item label=\"皮米\">\n              <Input readOnly style={ inputStyle } onClick={ inputClick } value= { f(result * 1000 * 1000 * 1000 * 1000) } />\n            </Form.Item>\n            <Form.Item label=\"海里\">\n              <Input readOnly style={ inputStyle } onClick={ inputClick } value= { f(result / 1852) } />\n            </Form.Item>\n            {/* <Form.Item label=\"光年\">\n              <Input readOnly style={ inputStyle } onClick={ inputClick } value= {  } />\n            </Form.Item>\n            <Form.Item label=\"天文单位\">\n              <Input readOnly style={ inputStyle } onClick={ inputClick } value= { } />\n            </Form.Item> */}\n          </Form>\n        </Col>\n\n        <Col span={8}>\n          <Divider dashed plain>英制</Divider>\n          <Form name=\"basic2\" labelCol={{ span: 10 }} autoComplete=\"off\" >\n            <Form.Item label=\"英寸 (inch)\">\n              <Input readOnly style={ inputStyle } onClick={ inputClick } value= { f(result / 2.54 * 100) } />\n            </Form.Item>\n            <Form.Item label=\"英尺 (foot)\">\n              <Input readOnly style={ inputStyle } onClick={ inputClick } value= { f(result / 0.3048) } />\n            </Form.Item>\n            <Form.Item label=\"码 (yard)\">\n              <Input readOnly style={ inputStyle } onClick={ inputClick } value= { f(result / 0.9144) } />\n            </Form.Item>\n            <Form.Item label=\"英里 (mile)\">\n              <Input readOnly style={ inputStyle } onClick={ inputClick } value= { f(result / 1609.3)  }/>\n            </Form.Item>\n            <Form.Item label=\"英寻 (fathom)\">\n              <Input readOnly style={ inputStyle } onClick={ inputClick } value= { f(result / 1.829)  }/>\n            </Form.Item>\n            <Form.Item label=\"链 (chain)\">\n              <Input readOnly style={ inputStyle } onClick={ inputClick } value= { f(result / 20.1168)  }/>\n            </Form.Item>\n            <Form.Item label=\"化朗 (furlong)\">\n              <Input readOnly style={ inputStyle } onClick={ inputClick } value= { f(result / 201.168)  }/>\n            </Form.Item>\n          </Form>\n        </Col>\n\n        <Col span={8}>\n          <Divider dashed plain>市制</Divider>\n          <Form name=\"basic3\" labelCol={{ span: 8 }} autoComplete=\"off\">\n            <Form.Item label=\"里\">\n              <Input readOnly style={ inputStyle } onClick={ inputClick } value= { f(result / 500) } />\n            </Form.Item>\n            <Form.Item label=\"引\">\n              <Input readOnly style={ inputStyle } onClick={ inputClick } value= { f(result / 500 * 15) } />\n            </Form.Item>\n            <Form.Item label=\"丈\">\n              <Input readOnly style={ inputStyle } onClick={ inputClick } value= { f(result / 50 * 15) } />\n            </Form.Item>\n            <Form.Item label=\"尺\">\n              <Input readOnly style={ inputStyle } onClick={ inputClick } value= { f(result / 5 * 15) }/>\n            </Form.Item>\n            <Form.Item label=\"寸\">\n              <Input readOnly style={ inputStyle } onClick={ inputClick } value= { f(result / 5 * 150) } />\n            </Form.Item>\n            <Form.Item label=\"分\">\n              <Input readOnly style={ inputStyle } onClick={ inputClick } value= { f(result / 5 * 1500) } />\n            </Form.Item>\n            <Form.Item label=\"厘\">\n              <Input readOnly style={ inputStyle } onClick={ inputClick } value= { f(result / 5 * 15000) } />\n            </Form.Item>\n            <Form.Item label=\"毫\">\n              <Input readOnly style={ inputStyle } onClick={ inputClick } value= { f(result / 5 * 150000) } />\n            </Form.Item>\n            <Form.Item label=\"丝\">\n              <Input readOnly style={ inputStyle } onClick={ inputClick } value= { f(result / 5 * 15000000) } />\n            </Form.Item>\n          </Form>\n        </Col>\n      </Row>\n    </div>\n  );\n}\n\nexport default DistanceConvert;","import { typeList } from \"./data\";\n\n// 获指定制式的距离类型列表\nexport const getTypeList = (ut :string) => {\n  return typeList.filter((v) => v.type === ut)\n}\n\nexport const getDefaultType = (ut :string) :string =>{\n  switch(ut) {\n    case 'iu': return getDefaultIUType();\n    case 'cn': return getDefaultCNType();\n  }\n  return getDefaultMSType();\n}\n\nexport const getTypePlaceholder = (type :string) :string | undefined => {\n  return typeList.find(item => item.value === type)?.placeholder;\n}\n\nconst DEFAULT_UNIT_TYPE = 'distance-convert:default-unit-type';\n\n// 获取默认制式\nexport function getDefaultUnitType() :string  {\n  const type = localStorage.getItem(DEFAULT_UNIT_TYPE);\n  return (type === null)? \"ms\" : type;\n}\n\n// 设置默认制式\nexport function setDefaultUnitType(type: string) : void  {\n  localStorage.setItem(DEFAULT_UNIT_TYPE,type);\n}\n\nconst DEFAULT_MS_TYPE = 'distance-convert:default-ms-type';\n\n// 获取默认公制单位\nexport function getDefaultMSType() :string  {\n  const type = localStorage.getItem(DEFAULT_MS_TYPE);\n  return (type === null)? \"m\" : type;\n}\n\n// 设置默认公制单位\nexport function setDefaultMSType(type: string) : void  {\n  localStorage.setItem(DEFAULT_MS_TYPE,type);\n}\n\nconst DEFAULT_IU_TYPE = 'distance-convert:default-iu-type';\n\n// 获取默认英制单位\nexport function getDefaultIUType() :string  {\n  const type = localStorage.getItem(DEFAULT_IU_TYPE);\n  return (type === null)? \"foot\" : type;\n}\n\n// 设置默认英制单位\nexport function setDefaultIUType(type: string) : void  {\n  localStorage.setItem(DEFAULT_IU_TYPE,type);\n}\n\nconst DEFAULT_CN_TYPE = 'distance-convert:default-cn-type';\n\n// 获取默认市制单位\nexport function getDefaultCNType() :string  {\n  const type = localStorage.getItem(DEFAULT_CN_TYPE);\n  return (type === null)? \"li\" : type;\n}\n\n// 设置默认市制单位\nexport function setDefaultCNType(type: string) : void  {\n  localStorage.setItem(DEFAULT_CN_TYPE,type);\n}\n\n/**\n度单位还有兆米(Mm)、千米(km)、分米(dm)、厘米(cm)、毫米(mm)、丝米(dmm)、忽米(cmm)、微米(μm)、纳米(nm)、皮米(pm)、飞米(fm)、阿米(am)等。他们同米的换算关系如下：\n1Gm=1×10^9m\n1Mm=1×10^6m\n1km=1×10^3m\n1dm=1×10^(-1)m\n1cm=1×10^(-2)m\n1mm=1×10^(-3)m\n1dmm=1×10^(-4)m\n1cmm=1×10^(-5)m\n1μm=1×10^(-6)m\n1nm=1×10^(-9)m\n1pm=1×10^(-12)m\n1fm=1×10^(-15)m\n1am=1×10^(-18)m\n */","// 复制到粘贴板\r\nexport async function copyTextToClipboard(text: string) {\r\n  if (\"clipboard\" in navigator) {\r\n    return await navigator.clipboard.writeText(text);\r\n  } else {\r\n    return document.execCommand('copy', true, text);\r\n  }\r\n}\r\n\r\n// 防抖函数\r\nexport function debounce(operate:Function, delay:number) {\r\n  let time :any = null\r\n  let timer :any = null\r\n  let newTime = null\r\n  function task() {\r\n    newTime =+ new Date()\r\n    if(newTime - time < delay) {\r\n      timer = setTimeout(task, delay)\r\n    } else {\r\n      operate()\r\n      timer = null\r\n    }\r\n    time = newTime\r\n  }\r\n  return function () {\r\n    // 更新时间戳\r\n    time =+ new Date();\r\n    if(!timer) {\r\n      timer = setTimeout(task, delay)\r\n    }\r\n  }\r\n}\r\n\r\n// 每间隔多少字符插入指定了符\r\nexport function insertIntervalString(str :string, disNum :number = 4, insertStr:string  = \" \") {\r\n  return str.replace(new RegExp(\"(.{\" + disNum + \"})\", \"g\"), \"$1\" + insertStr);\r\n}\r\n"],"names":["unitTypeList","label","value","placeholder","typeList","type","TextArea","ut","getDefaultUnitType","unitType","setUnitType","useState","setTypeList","getTypeList","setValue","status","setStatus","dt","getDefaultType","setType","setPlaceholder","getTypePlaceholder","result","setResult","notice","contextHolder","inputStyle","cursor","inputClick","e","txt","target","trim","success","convert","test","parseFloat","f","v","toString","style","width","onChange","options","optionType","buttonStyle","t","onClick","margin","autoSize","minRows","maxRows","wrap","span","dashed","plain","name","labelCol","autoComplete","readOnly","getDefaultIUType","getDefaultCNType","getDefaultMSType","item","DEFAULT_UNIT_TYPE","localStorage","getItem","setDefaultUnitType","setItem","DEFAULT_MS_TYPE","setDefaultMSType","DEFAULT_IU_TYPE","setDefaultIUType","DEFAULT_CN_TYPE","setDefaultCNType","async","copyTextToClipboard","text","navigator","clipboard","writeText","document","execCommand","debounce","operate","delay","time","timer","newTime","task","Date","setTimeout","insertIntervalString","str","disNum","insertStr","replace","RegExp"],"sourceRoot":""}