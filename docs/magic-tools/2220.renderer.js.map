{"version":3,"file":"2220.renderer.js","mappings":"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","sources":["webpack://magic-tools/./node_modules/antd/es/divider/style/index.js","webpack://magic-tools/./node_modules/antd/es/divider/index.js","webpack://magic-tools/./src/renderer/App/RMBConvert/index.tsx","webpack://magic-tools/./src/renderer/App/RMBConvert/lib.ts","webpack://magic-tools/./src/renderer/lib/index.ts"],"sourcesContent":["import { resetComponent } from '../../style';\nimport { genComponentStyleHook, mergeToken } from '../../theme/internal';\n// ============================== Shared ==============================\nconst genSharedDividerStyle = token => {\n  const {\n    componentCls,\n    sizePaddingEdgeHorizontal,\n    colorSplit,\n    lineWidth\n  } = token;\n  return {\n    [componentCls]: Object.assign(Object.assign({}, resetComponent(token)), {\n      borderBlockStart: `${lineWidth}px solid ${colorSplit}`,\n      // vertical\n      '&-vertical': {\n        position: 'relative',\n        top: '-0.06em',\n        display: 'inline-block',\n        height: '0.9em',\n        margin: `0 ${token.dividerVerticalGutterMargin}px`,\n        verticalAlign: 'middle',\n        borderTop: 0,\n        borderInlineStart: `${lineWidth}px solid ${colorSplit}`\n      },\n      '&-horizontal': {\n        display: 'flex',\n        clear: 'both',\n        width: '100%',\n        minWidth: '100%',\n        margin: `${token.dividerHorizontalGutterMargin}px 0`\n      },\n      [`&-horizontal${componentCls}-with-text`]: {\n        display: 'flex',\n        alignItems: 'center',\n        margin: `${token.dividerHorizontalWithTextGutterMargin}px 0`,\n        color: token.colorTextHeading,\n        fontWeight: 500,\n        fontSize: token.fontSizeLG,\n        whiteSpace: 'nowrap',\n        textAlign: 'center',\n        borderBlockStart: `0 ${colorSplit}`,\n        '&::before, &::after': {\n          position: 'relative',\n          width: '50%',\n          borderBlockStart: `${lineWidth}px solid transparent`,\n          // Chrome not accept `inherit` in `border-top`\n          borderBlockStartColor: 'inherit',\n          borderBlockEnd: 0,\n          transform: 'translateY(50%)',\n          content: \"''\"\n        }\n      },\n      [`&-horizontal${componentCls}-with-text-left`]: {\n        '&::before': {\n          width: '5%'\n        },\n        '&::after': {\n          width: '95%'\n        }\n      },\n      [`&-horizontal${componentCls}-with-text-right`]: {\n        '&::before': {\n          width: '95%'\n        },\n        '&::after': {\n          width: '5%'\n        }\n      },\n      [`${componentCls}-inner-text`]: {\n        display: 'inline-block',\n        padding: '0 1em'\n      },\n      '&-dashed': {\n        background: 'none',\n        borderColor: colorSplit,\n        borderStyle: 'dashed',\n        borderWidth: `${lineWidth}px 0 0`\n      },\n      [`&-horizontal${componentCls}-with-text${componentCls}-dashed`]: {\n        '&::before, &::after': {\n          borderStyle: 'dashed none none'\n        }\n      },\n      [`&-vertical${componentCls}-dashed`]: {\n        borderInlineStartWidth: lineWidth,\n        borderInlineEnd: 0,\n        borderBlockStart: 0,\n        borderBlockEnd: 0\n      },\n      [`&-plain${componentCls}-with-text`]: {\n        color: token.colorText,\n        fontWeight: 'normal',\n        fontSize: token.fontSize\n      },\n      [`&-horizontal${componentCls}-with-text-left${componentCls}-no-default-orientation-margin-left`]: {\n        '&::before': {\n          width: 0\n        },\n        '&::after': {\n          width: '100%'\n        },\n        [`${componentCls}-inner-text`]: {\n          paddingInlineStart: sizePaddingEdgeHorizontal\n        }\n      },\n      [`&-horizontal${componentCls}-with-text-right${componentCls}-no-default-orientation-margin-right`]: {\n        '&::before': {\n          width: '100%'\n        },\n        '&::after': {\n          width: 0\n        },\n        [`${componentCls}-inner-text`]: {\n          paddingInlineEnd: sizePaddingEdgeHorizontal\n        }\n      }\n    })\n  };\n};\n// ============================== Export ==============================\nexport default genComponentStyleHook('Divider', token => {\n  const dividerToken = mergeToken(token, {\n    dividerVerticalGutterMargin: token.marginXS,\n    dividerHorizontalWithTextGutterMargin: token.margin,\n    dividerHorizontalGutterMargin: token.marginLG\n  });\n  return [genSharedDividerStyle(dividerToken)];\n}, {\n  sizePaddingEdgeHorizontal: 0\n});","var __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { ConfigContext } from '../config-provider';\nimport warning from '../_util/warning';\nimport useStyle from './style';\nconst Divider = props => {\n  const {\n    getPrefixCls,\n    direction\n  } = React.useContext(ConfigContext);\n  const {\n      prefixCls: customizePrefixCls,\n      type = 'horizontal',\n      orientation = 'center',\n      orientationMargin,\n      className,\n      rootClassName,\n      children,\n      dashed,\n      plain\n    } = props,\n    restProps = __rest(props, [\"prefixCls\", \"type\", \"orientation\", \"orientationMargin\", \"className\", \"rootClassName\", \"children\", \"dashed\", \"plain\"]);\n  const prefixCls = getPrefixCls('divider', customizePrefixCls);\n  const [wrapSSR, hashId] = useStyle(prefixCls);\n  const orientationPrefix = orientation.length > 0 ? `-${orientation}` : orientation;\n  const hasChildren = !!children;\n  const hasCustomMarginLeft = orientation === 'left' && orientationMargin != null;\n  const hasCustomMarginRight = orientation === 'right' && orientationMargin != null;\n  const classString = classNames(prefixCls, hashId, `${prefixCls}-${type}`, {\n    [`${prefixCls}-with-text`]: hasChildren,\n    [`${prefixCls}-with-text${orientationPrefix}`]: hasChildren,\n    [`${prefixCls}-dashed`]: !!dashed,\n    [`${prefixCls}-plain`]: !!plain,\n    [`${prefixCls}-rtl`]: direction === 'rtl',\n    [`${prefixCls}-no-default-orientation-margin-left`]: hasCustomMarginLeft,\n    [`${prefixCls}-no-default-orientation-margin-right`]: hasCustomMarginRight\n  }, className, rootClassName);\n  const innerStyle = Object.assign(Object.assign({}, hasCustomMarginLeft && {\n    marginLeft: orientationMargin\n  }), hasCustomMarginRight && {\n    marginRight: orientationMargin\n  });\n  // Warning children not work in vertical mode\n  if (process.env.NODE_ENV !== 'production') {\n    process.env.NODE_ENV !== \"production\" ? warning(!children || type !== 'vertical', 'Divider', '`children` not working in `vertical` mode.') : void 0;\n  }\n  return wrapSSR( /*#__PURE__*/React.createElement(\"div\", Object.assign({\n    className: classString\n  }, restProps, {\n    role: \"separator\"\n  }), children && type !== 'vertical' && /*#__PURE__*/React.createElement(\"span\", {\n    className: `${prefixCls}-inner-text`,\n    style: innerStyle\n  }, children)));\n};\nif (process.env.NODE_ENV !== 'production') {\n  Divider.displayName = 'Divider';\n}\nexport default Divider;","import { Divider, Button,Input, message } from \"antd\";\nimport { useState } from \"react\";\nconst { TextArea } = Input;\nimport { copyTextToClipboard } from \"./../../lib\"\nimport { convertCurrency } from \"./lib\"\nimport { InputStatus } from \"antd/es/_util/statusUtils\";\n\nconst RMBConvert = () => {\n\n  const [ status, setStatus ] = useState('');\n  const [ value, setValue ] = useState('');\n  const [ result, setResult ] = useState('');\n  const [ notice, contextHolder ] = message.useMessage(); // 消息提醒\n\n  const textareaDoubleClick = (e :React.MouseEvent<HTMLTextAreaElement>) => {\n    const txt = (e.target as HTMLInputElement).value.trim();\n    if(txt !== '') {\n      copyTextToClipboard(txt);\n      notice.success(\"复制到粘贴板成功！！！\");\n    }\n  };\n\n  const encode = (value :string) => {\n    let v = value.trim()\n    setValue(v);\n    if ( v != \"\") {\n      // 去掉空格 去掉 `,` (有使用 ,做分隔展示的情况 )\n      v = v.replace(/,/g,'').replace(/\\s/g,'');\n      // 判断是否是 全数字\n      if(/^[0-9\\.]+$/.test(v)) {\n        setResult(convertCurrency(v));\n        setStatus('');\n      } else {\n        setStatus('error');\n        setResult('');\n      }\n    } else {\n      setStatus('');\n      setResult('');\n    }\n  }\n\n  return (\n    <div>\n\n      {contextHolder}\n\n      <Button \n        onClick={ () => { setValue(''); setResult(''); setStatus(''); } }\n        style={ {\"backgroundColor\" : \"#dc3545\",\"color\": \"#fff\" }} \n      >清除</Button>\n\n      <TextArea\n        status= { status as InputStatus }\n        style={ { margin: \"5px 0 5px 0\" }}\n        onDoubleClick={ textareaDoubleClick }\n        onChange={ (e) => { encode(e.target.value) ;} }\n        title=\"双击复制内容到粘贴板\"\n        value= { value }\n        placeholder=\"请输入要转换的人民币金额\"\n        autoSize={{ minRows: 5, maxRows: 5 }}\n        maxLength={ 30 }\n      />\n\n      <Divider dashed plain>转换的结果</Divider>\n      \n      <TextArea\n        readOnly \n        style={ { margin: \"5px 0 5px 0\" }}\n        title=\"点击复制内容到粘贴板\"\n        onClick={ textareaDoubleClick }\n        value= { result }\n        placeholder=\"点击复制内容到粘贴板\"\n        autoSize={{ minRows: 5, maxRows: 5 }}\n      />\n\n    </div>\n  );\n}\n\nexport default RMBConvert;","// 汉字的数字\r\nconst cnNums = new Array('零', '壹', '贰', '叁', '肆', '伍', '陆', '柒', '捌', '玖');\r\n// 基本单位\r\nconst cnIntRadice = new Array('', '拾', '佰', '仟');\r\n// 对应整数部分扩展单位\r\nconst cnIntUnits = new Array('', '万', '亿', '兆');\r\n// 对应小数部分单位\r\nconst cnDecUnits = new Array('角', '分', '毫', '厘');\r\n// 整数金额时后面跟的字符\r\nconst cnInteger = '整';\r\n// 整型完以后的单位\r\nconst cnIntLast = '元';\r\n// 最大处理的数字\r\nconst maxNum = 999999999999999.9999;\r\n\r\n// 转换方法\r\nexport const convertCurrency = (money :string) :string => {\r\n  // 金额整数部分\r\n  let integerNum;\r\n  // 金额小数部分\r\n  let decimalNum;\r\n  // 输出的中文金额字符串\r\n  let chineseStr = '';\r\n  // 分离金额后用的数组，预定义\r\n  let parts;\r\n  if (money == '') return '';\r\n\r\n\r\n  const m = parseFloat(money);\r\n  if (m >= maxNum) {\r\n    // 超出最大处理数字\r\n    return '';\r\n  }\r\n  if (m == 0) {\r\n    chineseStr = cnNums[0] + cnIntLast + cnInteger;\r\n    return chineseStr;\r\n  }\r\n\r\n  // 转换为字符串\r\n  money = money.toString();\r\n  if (money.indexOf('.') == -1) {\r\n    integerNum = money;\r\n    decimalNum = '';\r\n  } else {\r\n    parts = money.split('.');\r\n    integerNum = parts[0];\r\n    decimalNum = parts[1].substr(0, 4);\r\n  }\r\n\r\n  // 获取整型部分转换\r\n  if (parseInt(integerNum, 10) > 0) {\r\n    let zeroCount = 0;\r\n    let IntLen = integerNum.length;\r\n    for (let i = 0; i < IntLen; i++) {\r\n      let n = integerNum.substr(i, 1);\r\n      let p = IntLen - i - 1;\r\n      let q = p / 4;\r\n      let m = p % 4;\r\n      if (n == '0') {\r\n        zeroCount++;\r\n      } else {\r\n        if (zeroCount > 0) {\r\n          chineseStr += cnNums[0];\r\n        }\r\n        //归零\r\n        zeroCount = 0;\r\n        chineseStr += cnNums[parseInt(n)] + cnIntRadice[m];\r\n      }\r\n      if (m == 0 && zeroCount < 4) {\r\n        chineseStr += cnIntUnits[q];\r\n      }\r\n    }\r\n    chineseStr += cnIntLast;\r\n  }\r\n\r\n  // 小数部分\r\n  if (decimalNum != '') {\r\n    let decLen = decimalNum.length;\r\n    for (let i = 0; i < decLen; i++) {\r\n      let n = decimalNum.substr(i, 1);\r\n      if (n != '0') {\r\n        chineseStr += cnNums[Number(n)] + cnDecUnits[i];\r\n      }\r\n    }\r\n  }\r\n  if (chineseStr == '') {\r\n    chineseStr += cnNums[0] + cnIntLast + cnInteger;\r\n  } else if (decimalNum == '') {\r\n    chineseStr += cnInteger;\r\n  }\r\n  return chineseStr;\r\n}","// 复制到粘贴板\r\nexport async function copyTextToClipboard(text: string) {\r\n  if (\"clipboard\" in navigator) {\r\n    return await navigator.clipboard.writeText(text);\r\n  } else {\r\n    return document.execCommand('copy', true, text);\r\n  }\r\n}\r\n\r\n// 防抖函数\r\nexport function debounce(operate:Function, delay:number) {\r\n  let time :any = null\r\n  let timer :any = null\r\n  let newTime = null\r\n  function task() {\r\n    newTime =+ new Date()\r\n    if(newTime - time < delay) {\r\n      timer = setTimeout(task, delay)\r\n    } else {\r\n      operate()\r\n      timer = null\r\n    }\r\n    time = newTime\r\n  }\r\n  return function () {\r\n    // 更新时间戳\r\n    time =+ new Date();\r\n    if(!timer) {\r\n      timer = setTimeout(task, delay)\r\n    }\r\n  }\r\n}\r\n\r\n// 每间隔多少字符插入指定了符\r\nexport function insertIntervalString(str :string, disNum :number = 4, insertStr:string  = \" \") {\r\n  return str.replace(new RegExp(\"(.{\" + disNum + \"})\", \"g\"), \"$1\" + insertStr);\r\n}\r\n"],"names":["genSharedDividerStyle","token","componentCls","sizePaddingEdgeHorizontal","colorSplit","lineWidth","Object","assign","borderBlockStart","position","top","display","height","margin","dividerVerticalGutterMargin","verticalAlign","borderTop","borderInlineStart","clear","width","minWidth","dividerHorizontalGutterMargin","alignItems","dividerHorizontalWithTextGutterMargin","color","colorTextHeading","fontWeight","fontSize","fontSizeLG","whiteSpace","textAlign","borderBlockStartColor","borderBlockEnd","transform","content","padding","background","borderColor","borderStyle","borderWidth","borderInlineStartWidth","borderInlineEnd","colorText","paddingInlineStart","paddingInlineEnd","genComponentStyleHook","dividerToken","marginXS","marginLG","__rest","s","e","t","p","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","i","length","propertyIsEnumerable","props","getPrefixCls","direction","prefixCls","customizePrefixCls","type","orientation","orientationMargin","className","rootClassName","children","dashed","plain","restProps","wrapSSR","hashId","orientationPrefix","hasChildren","hasCustomMarginLeft","hasCustomMarginRight","classString","innerStyle","marginLeft","marginRight","role","style","TextArea","status","setStatus","useState","value","setValue","result","setResult","notice","contextHolder","textareaDoubleClick","txt","target","trim","success","onClick","onDoubleClick","onChange","v","replace","test","convertCurrency","encode","title","placeholder","autoSize","minRows","maxRows","maxLength","readOnly","cnNums","Array","cnIntRadice","cnIntUnits","cnDecUnits","money","integerNum","decimalNum","parts","chineseStr","m","parseFloat","toString","split","substr","parseInt","zeroCount","IntLen","n","q","decLen","Number","async","copyTextToClipboard","text","navigator","clipboard","writeText","document","execCommand","debounce","operate","delay","time","timer","newTime","task","Date","setTimeout","insertIntervalString","str","disNum","insertStr","RegExp"],"sourceRoot":""}