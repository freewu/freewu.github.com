{"version":3,"file":"3402.renderer.js","mappings":"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","sources":["webpack://magic-tools/./node_modules/@ant-design/icons-svg/es/asn/CloseOutlined.js","webpack://magic-tools/./node_modules/@ant-design/icons/es/icons/CloseOutlined.js","webpack://magic-tools/./node_modules/antd/es/locale/useLocale.js","webpack://magic-tools/./src/renderer/App/NumberConvert/data.ts","webpack://magic-tools/./src/renderer/App/NumberConvert/index.tsx","webpack://magic-tools/./src/renderer/App/NumberConvert/lib.ts","webpack://magic-tools/./src/renderer/lib/index.ts","webpack://magic-tools/./src/renderer/lib/string.ts"],"sourcesContent":["// This icon file is generated automatically.\nvar CloseOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M563.8 512l262.5-312.9c4.4-5.2.7-13.1-6.1-13.1h-79.8c-4.7 0-9.2 2.1-12.3 5.7L511.6 449.8 295.1 191.7c-3-3.6-7.5-5.7-12.3-5.7H203c-6.8 0-10.5 7.9-6.1 13.1L459.4 512 196.9 824.9A7.95 7.95 0 00203 838h79.8c4.7 0 9.2-2.1 12.3-5.7l216.5-258.1 216.5 258.1c3 3.6 7.5 5.7 12.3 5.7h79.8c6.8 0 10.5-7.9 6.1-13.1L563.8 512z\" } }] }, \"name\": \"close\", \"theme\": \"outlined\" };\nexport default CloseOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport CloseOutlinedSvg from \"@ant-design/icons-svg/es/asn/CloseOutlined\";\nimport AntdIcon from '../components/AntdIcon';\nvar CloseOutlined = function CloseOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: CloseOutlinedSvg\n  }));\n};\nif (process.env.NODE_ENV !== 'production') {\n  CloseOutlined.displayName = 'CloseOutlined';\n}\nexport default /*#__PURE__*/React.forwardRef(CloseOutlined);","import * as React from 'react';\nimport LocaleContext from './context';\nimport defaultLocaleData from './en_US';\nconst useLocale = (componentName, defaultLocale) => {\n  const fullLocale = React.useContext(LocaleContext);\n  const getLocale = React.useMemo(() => {\n    var _a;\n    const locale = defaultLocale || defaultLocaleData[componentName];\n    const localeFromContext = (_a = fullLocale === null || fullLocale === void 0 ? void 0 : fullLocale[componentName]) !== null && _a !== void 0 ? _a : {};\n    return Object.assign(Object.assign({}, typeof locale === 'function' ? locale() : locale), localeFromContext || {});\n  }, [componentName, defaultLocale, fullLocale]);\n  const getLocaleCode = React.useMemo(() => {\n    const localeCode = fullLocale === null || fullLocale === void 0 ? void 0 : fullLocale.locale;\n    // Had use LocaleProvide but didn't set locale\n    if ((fullLocale === null || fullLocale === void 0 ? void 0 : fullLocale.exist) && !localeCode) {\n      return defaultLocaleData.locale;\n    }\n    return localeCode;\n  }, [fullLocale]);\n  return [getLocale, getLocaleCode];\n};\nexport default useLocale;","// 进制类型列表\r\nconst numberTypeList = [\r\n  { label: '二进制', value: 'BIN', placeholder: '输入只包含 0-1 的字符串' },\r\n  { label: '八进制', value: 'OCT',  placeholder: '输入只包含 0-7 的字符串' },\r\n  { label: '十进制', value: 'DEC', placeholder: '输入只包含 0-9 的字符串' },\r\n  { label: '十六进制', value: 'HEX', placeholder: '输入只包含 0-9 A-F 的字符串' },\r\n];\r\n\r\nconst emptyResult :NumberConvertResult = {\r\n  \"hex\": \"\",\r\n  \"bin\": \"\",\r\n  \"dec\": \"\",\r\n  \"oct\": \"\",\r\n};\r\n\r\nexport type NumberConvertResult = {\r\n  \"hex\": string,\r\n  \"bin\": string,\r\n  \"dec\": string,\r\n  \"oct\": string,\r\n}\r\n\r\nexport {\r\n  emptyResult,\r\n  numberTypeList\r\n}","import { Checkbox, Form, Input, Divider, message, Space, Radio, Button, ColorPicker } from \"antd\";\r\nimport { useState } from \"react\";\r\nconst { TextArea } = Input;\r\nimport { copyTextToClipboard } from \"./../../lib\"\r\nimport { } from \"./lib\"\r\nimport { numberTypeList, emptyResult, NumberConvertResult } from \"./data\"\r\nimport type { RadioChangeEvent } from 'antd';\r\nimport { translateDecimal } from \"./lib\"\r\nimport { insertIntervalString } from \"./../../lib\"\r\nimport { reverseString } from \"./../../lib/string\"\r\n\r\n\r\nconst ColorConvert = () => {\r\n\r\n  const [ value, setValue ] = useState(''); // 需要转换的颜色值 \r\n  const [ numberType, setNumberType ] = useState('DEC'); // 输入内容的数字类型,\r\n  const [ placeholder, setPlaceholder ] = useState(numberTypeList[2][\"placeholder\"]); // 数字类型的输入提示\r\n  const [ checked, setChecked ] = useState(false); // 输出大小写\r\n  const [ numberData, setNumberData ] = useState(emptyResult); // 转换的结果\r\n  const [ notice, contextHolder] = message.useMessage();\r\n  const [ humanRead, setHumanRead ] = useState(false); // 显示是否加入空格\r\n\r\n  const inputStyle = { cursor: \"pointer\" };\r\n\r\n  // 切换输入数据进制类型\r\n  const onNumberTypeChange = ({ target: { value } }: RadioChangeEvent) => {\r\n    setNumberType(value);\r\n    setValue(''); // 需要把内容清空,类型变了输入的内容也没意义了\r\n    setNumberData(emptyResult);\r\n    // 更新输入提示信息\r\n    const tips = numberTypeList.find(item => item.value === value)?.placeholder;\r\n    setPlaceholder(tips + \"\");\r\n  };\r\n\r\n  // 点击结果框,把结果复制到粘贴板\r\n  const inputClick = (e :React.MouseEvent<HTMLElement>) => {\r\n    const txt = (e.target as HTMLInputElement).value.trim();\r\n    if(txt != \"\") {\r\n      copyTextToClipboard(txt);\r\n      notice.success(\"复制到粘贴板成功！！！\");\r\n    }\r\n  };\r\n\r\n  const handleCheckboxChange = () => {\r\n    setChecked(!checked);\r\n    // 如果要专内容不为空，处理 显示字母的大小问题\r\n    if ( value.trim() != \"\") {\r\n      const result = {\r\n        \"hex\": (checked)? numberData.hex.toLowerCase() : numberData.hex.toUpperCase(),\r\n        \"bin\": numberData.bin,\r\n        \"oct\": numberData.oct,\r\n        \"dec\": numberData.dec,\r\n      };\r\n      setNumberData(result);\r\n    }\r\n  };\r\n\r\n  const handleHumanReadChange = () => {\r\n    setHumanRead(!humanRead);\r\n    if ( value.trim() != \"\") {\r\n      setNumberData(convertHumanRead(!humanRead, numberData));\r\n    }\r\n  }\r\n\r\n  const convertHumanRead = (flag :boolean, data :NumberConvertResult) => {\r\n    const result = {\r\n      \"hex\": (flag)? reverseString(insertIntervalString(reverseString(data.hex),2)).trim() : data.hex.replaceAll(\" \",\"\"),\r\n      \"bin\": (flag)? reverseString(insertIntervalString(reverseString(data.bin),4)).trim() : data.bin.replaceAll(\" \",\"\"),\r\n      \"oct\": (flag)? reverseString(insertIntervalString(reverseString(data.oct),4)).trim() : data.oct.replaceAll(\" \",\"\"),\r\n      \"dec\": (flag)? reverseString(insertIntervalString(reverseString(data.dec),4)).trim() : data.dec.replaceAll(\" \",\"\"),\r\n    };\r\n    return result\r\n  }\r\n\r\n  const textAreaChange = (e :React.ChangeEvent<HTMLTextAreaElement>) => {\r\n    const value = e.target.value.trim();\r\n    setValue(value);\r\n    // 输入4个符以上才处理\r\n    if (value != \"\") {\r\n      covertNumber(value);\r\n    } else {\r\n      setNumberData(emptyResult);\r\n    }\r\n  }\r\n\r\n  const upperLowerTranslate = (str :string) :string => {\r\n    return checked? str.toUpperCase() : str.toLowerCase()\r\n  }\r\n\r\n  const covertNumber = (value :string) => {\r\n    setValue(value);\r\n    const n = translateDecimal(value.replaceAll(\" \",\"\"),numberType);\r\n    if(n.toString() !== \"NaN\") {\r\n      const result = {\r\n        \"dec\": n.toString(),\r\n        \"bin\": n.toString(2),\r\n        \"oct\": n.toString(8),\r\n        \"hex\": upperLowerTranslate(n.toString(16)),\r\n      };\r\n      // 开启人类可读\r\n      if(humanRead) {\r\n        setNumberData(convertHumanRead(humanRead,result));\r\n      } else {\r\n        setNumberData(result);\r\n      }\r\n    } else {\r\n      notice.error(\"输入的数据格式错误!!!\");\r\n      setNumberData(emptyResult);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {contextHolder}\r\n\r\n      <Space>\r\n        <Radio.Group\r\n          optionType = \"button\" buttonStyle=\"solid\"\r\n          options = { numberTypeList } \r\n          onChange={ onNumberTypeChange } \r\n          value={ numberType } \r\n        />\r\n        <Checkbox onChange={ handleCheckboxChange } checked={ checked }>大写字符显示</Checkbox>\r\n        <Checkbox onChange={ handleHumanReadChange } checked={ humanRead }>结果插入空格</Checkbox>\r\n        <Button \r\n          onClick={ () => { setValue(''); setNumberData(emptyResult); } }\r\n          style={ {\"backgroundColor\" : \"#dc3545\",\"color\": \"#fff\" }} \r\n        >清除</Button>\r\n      </Space>\r\n\r\n      <TextArea\r\n        style={ { margin: \"5px 0 5px 0\" }}\r\n        value= { value }\r\n        onChange={ textAreaChange }\r\n        placeholder={ placeholder }\r\n        autoSize={{ minRows: 3, maxRows: 5 }}\r\n      />\r\n      <Divider dashed />\r\n      <Form name=\"basic\"labelCol={{ span: 2 }} autoComplete=\"off\">\r\n        <Form.Item label=\"二进制\">\r\n          <Input readOnly style={ inputStyle } onClick={ inputClick } value= { numberData.bin } />\r\n        </Form.Item>\r\n        <Form.Item label=\"八进制\">\r\n          <Input readOnly style={ inputStyle } onClick={ inputClick } value= { numberData.oct } />\r\n        </Form.Item>\r\n        <Form.Item label=\"十进制\">\r\n          <Input readOnly style={ inputStyle } onClick={ inputClick } value= { numberData.dec } />\r\n        </Form.Item>\r\n        <Form.Item label=\"十六进制\">\r\n          <Input readOnly style={ inputStyle } onClick={ inputClick } value= { numberData.hex } />\r\n        </Form.Item>\r\n      </Form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ColorConvert;","// 转换成十进制数\r\nconst translateDecimal = (value :string,numberType :string) :number => {\r\n  switch(numberType) {\r\n    case \"BIN\": return Number(\"0b\" + value);\r\n    case \"OCT\": return Number(\"0o\" + value);\r\n    case \"HEX\": return Number(\"0x\" + value);\r\n  }\r\n  return Number(value);\r\n}\r\n\r\nexport {\r\n  translateDecimal\r\n}","// 复制到粘贴板\r\nexport async function copyTextToClipboard(text: string) {\r\n  if (\"clipboard\" in navigator) {\r\n    return await navigator.clipboard.writeText(text);\r\n  } else {\r\n    return document.execCommand('copy', true, text);\r\n  }\r\n}\r\n\r\n// 防抖函数\r\nexport function debounce(operate:Function, delay:number) {\r\n  let time :any = null\r\n  let timer :any = null\r\n  let newTime = null\r\n  function task() {\r\n    newTime =+ new Date()\r\n    if(newTime - time < delay) {\r\n      timer = setTimeout(task, delay)\r\n    } else {\r\n      operate()\r\n      timer = null\r\n    }\r\n    time = newTime\r\n  }\r\n  return function () {\r\n    // 更新时间戳\r\n    time =+ new Date();\r\n    if(!timer) {\r\n      timer = setTimeout(task, delay)\r\n    }\r\n  }\r\n}\r\n\r\n// 每间隔多少字符插入指定了符\r\nexport function insertIntervalString(str :string, disNum :number = 4, insertStr:string  = \" \") {\r\n  return str.replace(new RegExp(\"(.{\" + disNum + \"})\", \"g\"), \"$1\" + insertStr);\r\n}\r\n","// 反转字符串\nexport const reverseString = (str :string) :string => {\n    return str.split('').reverse().join('');    // or reverse(str.split(''))\n}\n\n// 转字符串\nexport const Uint8ArrayToString = (data :Uint8Array) :string => {\n  let arr = [];\n  for (var i = 0; i < data.length; i++) {\n    arr.push(String.fromCharCode(data[i]))\n  }\n  return arr.join('');\n}\n\n// 字符串转Uint8Array\nexport const stringToUint8Array = (str :string) :Uint8Array => {\n  let arr = [];\n  for (var i = 0, j = str.length; i < j; ++i) {\n    arr.push(str.charCodeAt(i));\n  }\n  let tmpUint8Array = new Uint8Array(arr);\n  return tmpUint8Array\n}\n"],"names":["props","ref","AntdIcon","icon","componentName","defaultLocale","fullLocale","_a","locale","localeFromContext","Object","assign","localeCode","exist","numberTypeList","label","value","placeholder","emptyResult","TextArea","setValue","useState","numberType","setNumberType","setPlaceholder","checked","setChecked","numberData","setNumberData","notice","contextHolder","humanRead","setHumanRead","inputStyle","cursor","inputClick","e","txt","target","trim","success","convertHumanRead","flag","data","hex","replaceAll","bin","oct","dec","covertNumber","n","translateDecimal","toString","result","str","toUpperCase","toLowerCase","error","optionType","buttonStyle","options","onChange","tips","item","onClick","style","margin","autoSize","minRows","maxRows","dashed","name","labelCol","span","autoComplete","readOnly","Number","async","copyTextToClipboard","text","navigator","clipboard","writeText","document","execCommand","debounce","operate","delay","time","timer","newTime","task","Date","setTimeout","insertIntervalString","disNum","insertStr","replace","RegExp","reverseString","split","reverse","join","Uint8ArrayToString","arr","i","length","push","String","fromCharCode","stringToUint8Array","j","charCodeAt","Uint8Array"],"sourceRoot":""}