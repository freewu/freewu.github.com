{"version":3,"file":"2614.renderer.js","mappings":"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","sources":["webpack:///./src/renderer/App/Color/data.ts","webpack:///./src/renderer/App/Color/lib.ts"],"sourcesContent":["// 颜色类型列表\r\nconst colorTypeList = [\r\n  { label: '#HEX', value: 'HEX1' },\r\n  { label: 'HEX', value: 'HEX' },\r\n  { label: 'RGB', value: 'RGB' },\r\n  { label: 'RGBA', value: 'RGBA' },\r\n\r\n  { label: 'HSL', value: 'HSL' },\r\n  { label: 'HSLA', value: 'HSLA' },\r\n  { label: 'CMYK', value: 'CMYK' },\r\n  \r\n  { label: 'HSV', value: 'HSV' },\r\n  { label: 'LAB', value: 'LAB' },\r\n  { label: 'LCH', value: 'LCH' },\r\n  { label: 'XYZ', value: 'XYZ' },\r\n\r\n  { label: '颜色名称', value: 'TEXT' },\r\n];\r\n\r\nimport { \r\n  ChinesePainting, \r\n  ChineseTraditional, \r\n  JapaneseColor,\r\n  RalClassic,\r\n  CSSColor, \r\n} from \"./data/index\"\r\n\r\n// 颜色数据\r\nconst colorDataList = [\r\n  {\r\n    key: 'chinese-traditional',\r\n    label: `中国传统色彩`,\r\n    data: ChineseTraditional\r\n  },\r\n  {\r\n    key: 'chinese-painting',\r\n    label: `国画常用色彩`,\r\n    data: ChinesePainting\r\n  },\r\n  {\r\n    key: 'japanese-color',\r\n    label: `日式配色`,\r\n    data: JapaneseColor\r\n  },\r\n  {\r\n    key: 'ral-classic',\r\n    label: `Ral Classic`,\r\n    data: RalClassic\r\n  },\r\n  {\r\n    key: 'css-color',\r\n    label: `CSS颜色表`,\r\n    data: CSSColor\r\n  },\r\n];\r\n\r\nexport { colorTypeList, colorDataList };","import { hex } from \"color-convert\"\r\nimport { colorTypeList,colorDataList } from \"./data\"\r\n\r\n// 获取要写入到粘贴板的数据\r\nconst getColorString = (color :string,label :string,colorType :string, opacity :number) :string => {\r\n  switch(colorType) {\r\n    case 'TEXT': return label;\r\n    case 'HEX': return color.replace(\"#\",\"\");\r\n    case 'RGB': \r\n    const rgb = hex.rgb(color.replace(\"#\",\"\"));\r\n    return `rgb(${rgb[0]}, ${rgb[1]}, ${rgb[2]})`;\r\n    case 'RGBA': \r\n    const rgba = hex.rgb(color.replace(\"#\",\"\"));\r\n    return `rgba(${rgba[0]}, ${rgba[1]}, ${rgba[2]}, ${ opacity / 10 })`;\r\n    case 'HSL': \r\n    const hsl = hex.hsl(color.replace(\"#\",\"\"));\r\n    return `hsl(${hsl[0]}, ${hsl[1]}, ${hsl[2]})`;\r\n    case 'HSLA': \r\n    const hsla = hex.hsl(color.replace(\"#\",\"\"));\r\n    return `hsla(${hsla[0]}, ${hsla[1]}, ${hsla[2]}, ${ opacity / 10 })`;\r\n    case 'HSV': \r\n    const hsv = hex.hsv(color.replace(\"#\",\"\"));\r\n    return `hsv(${hsv[0]}, ${hsv[1]}, ${hsv[2]})`;\r\n    case 'CMYK': \r\n    const cmyk = hex.cmyk(color.replace(\"#\",\"\"));\r\n    return `cmyk(${cmyk[0]}, ${cmyk[1]}, ${cmyk[2]}, ${cmyk[3]})`;\r\n    case 'LAB': \r\n    const lab = hex.lab(color.replace(\"#\",\"\"));\r\n    return `lab(${lab[0]}, ${lab[1]}, ${lab[2]})`;\r\n    case 'LCH': \r\n    const lch = hex.lch(color.replace(\"#\",\"\"));\r\n    return `lch(${lch[0]}, ${lch[1]}, ${lch[2]})`;\r\n    case 'XYZ': \r\n    const xyz = hex.xyz(color.replace(\"#\",\"\"));\r\n    return `xyz(${xyz[0]}, ${xyz[1]}, ${xyz[2]})`;\r\n  }\r\n  return color;\r\n};\r\n\r\n// 选择颜色类型, 为了展示美观 小窗口不展示那么多颜色类型\r\nconst pickColorTypeList = () => {\r\n  //return colorTypeList;\r\n  // 缩放卡顿，先注释\r\n  if (window.innerWidth > 1200) return colorTypeList;\r\n  const a = colorTypeList.filter((v) => {\r\n    if(v.label == 'LAB' || v.label == 'LCH' || v.label == 'XYZ' || v.label == 'HSV') return false\r\n    return true;\r\n  });\r\n  return a;\r\n}\r\n\r\nconst DEFAULT_COLORPAD_ITEM = 'color:default-color-pad';\r\n\r\n// 获取默认显示的颜色板\r\nexport function getDefaultColorPad() :string  {\r\n  const defaultColorPad = localStorage.getItem(DEFAULT_COLORPAD_ITEM);\r\n  // 如果没有设置默认展示的颜色板，默认显示 chinese-traditional\r\n  return (defaultColorPad === null)? \"chinese-traditional\" : defaultColorPad;\r\n}\r\n\r\n// 设置默认显示的颜色板\r\nexport function setDefaultColorPad(pad: string) : void  {\r\n  localStorage.setItem(DEFAULT_COLORPAD_ITEM,pad);\r\n}\r\n\r\nconst DEFAULT_BATCHSWITCH_ITEM = 'color:default-batch-switch';\r\n\r\n// 获取是否默认打开批量取色\r\nexport function getDefaultBatchSwitch() :boolean  {\r\n  const flag = localStorage.getItem(DEFAULT_BATCHSWITCH_ITEM);\r\n  // 如果没有设置是否默认打开批量取色，默认 false\r\n  let a = (flag === null)? false : flag === \"true\";\r\n  return a;\r\n}\r\n\r\n// 设置是否默认打开批量取色\r\nexport function setDefaultBatchSwitch(flag: boolean) : void  {\r\n  localStorage.setItem(DEFAULT_BATCHSWITCH_ITEM, flag.toString());\r\n}\r\n\r\nconst DEFAULT_OPACITY_ITEM = 'color:default-opacity';\r\n\r\n// 获取默认不透明度\r\nexport function getDefaultOpacity() :number {\r\n  const opacity = localStorage.getItem(DEFAULT_OPACITY_ITEM);\r\n  // 如果没有设置默认不透明度，默认 0.9\r\n  if (null === opacity) return 9;\r\n  let num = parseInt(opacity);\r\n  if(num > 10 || num < 0) return 9;\r\n  return num;\r\n}\r\n\r\n// 设置默认不透明度\r\nexport function setDefaultOpacity(opacity :number) : void  {\r\n  localStorage.setItem(DEFAULT_OPACITY_ITEM, opacity.toString());\r\n}\r\n\r\nconst DEFAULT_PICK_MAX_ITEM = 'color:pick-max';\r\n\r\n// 获取默认最大取色个数\r\nexport function getDefaultPickMax() :number {\r\n  const max = localStorage.getItem(DEFAULT_PICK_MAX_ITEM);\r\n  // 如果没有设置默最大取色个数，默认 10\r\n  if (null === max) return 10;\r\n  let num = parseInt(max);\r\n  if(num > 20 || num < 5) return 10;\r\n  return num;\r\n}\r\n\r\n// 设置默认最大取色个数\r\nexport function setDefaultPickMax(max :number) : void  {\r\n  localStorage.setItem(DEFAULT_PICK_MAX_ITEM, max.toString());\r\n}\r\n\r\nexport {\r\n  getColorString,\r\n  pickColorTypeList\r\n}"],"names":["colorTypeList","label","value","colorDataList","key","data","ChineseTraditional","ChinesePainting","JapaneseColor","RalClassic","CSSColor","getColorString","color","colorType","opacity","replace","rgb","hex","rgba","hsl","hsla","hsv","cmyk","lab","lch","xyz","pickColorTypeList","window","innerWidth","v","DEFAULT_COLORPAD_ITEM","getDefaultColorPad","defaultColorPad","localStorage","getItem","setDefaultColorPad","pad","setItem","DEFAULT_BATCHSWITCH_ITEM","getDefaultBatchSwitch","flag","setDefaultBatchSwitch","toString","DEFAULT_OPACITY_ITEM","getDefaultOpacity","num","parseInt","setDefaultOpacity","DEFAULT_PICK_MAX_ITEM","getDefaultPickMax","max","setDefaultPickMax"],"sourceRoot":""}