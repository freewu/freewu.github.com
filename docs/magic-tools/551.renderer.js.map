{"version":3,"file":"551.renderer.js","mappings":"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","sources":["webpack://magic-tools/./node_modules/@ant-design/icons-svg/es/asn/SearchOutlined.js","webpack://magic-tools/./node_modules/@ant-design/icons/es/icons/SearchOutlined.js","webpack://magic-tools/./node_modules/antd/es/_util/statusUtils.js","webpack://magic-tools/./src/renderer/App/WeightConvert/data.ts","webpack://magic-tools/./src/renderer/App/WeightConvert/lib.ts","webpack://magic-tools/./src/renderer/App/WeightConvert/setting.tsx"],"sourcesContent":["// This icon file is generated automatically.\nvar SearchOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M909.6 854.5L649.9 594.8C690.2 542.7 712 479 712 412c0-80.2-31.3-155.4-87.9-212.1-56.6-56.7-132-87.9-212.1-87.9s-155.5 31.3-212.1 87.9C143.2 256.5 112 331.8 112 412c0 80.1 31.3 155.5 87.9 212.1C256.5 680.8 331.8 712 412 712c67 0 130.6-21.8 182.7-62l259.7 259.6a8.2 8.2 0 0011.6 0l43.6-43.5a8.2 8.2 0 000-11.6zM570.4 570.4C528 612.7 471.8 636 412 636s-116-23.3-158.4-65.6C211.3 528 188 471.8 188 412s23.3-116.1 65.6-158.4C296 211.3 352.2 188 412 188s116.1 23.2 158.4 65.6S636 352.2 636 412s-23.3 116.1-65.6 158.4z\" } }] }, \"name\": \"search\", \"theme\": \"outlined\" };\nexport default SearchOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport SearchOutlinedSvg from \"@ant-design/icons-svg/es/asn/SearchOutlined\";\nimport AntdIcon from '../components/AntdIcon';\nvar SearchOutlined = function SearchOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: SearchOutlinedSvg\n  }));\n};\nif (process.env.NODE_ENV !== 'production') {\n  SearchOutlined.displayName = 'SearchOutlined';\n}\nexport default /*#__PURE__*/React.forwardRef(SearchOutlined);","import classNames from 'classnames';\nconst InputStatuses = ['warning', 'error', ''];\nexport function getStatusClassNames(prefixCls, status, hasFeedback) {\n  return classNames({\n    [`${prefixCls}-status-success`]: status === 'success',\n    [`${prefixCls}-status-warning`]: status === 'warning',\n    [`${prefixCls}-status-error`]: status === 'error',\n    [`${prefixCls}-status-validating`]: status === 'validating',\n    [`${prefixCls}-has-feedback`]: hasFeedback\n  });\n}\nexport const getMergedStatus = (contextStatus, customStatus) => customStatus || contextStatus;","export const unitTypeList = [\n  { label: '公制', value: 'ms', placeholder: 'metric system'},\n  { label: '英制', value: 'iu', placeholder: 'Imperial units'},\n  { label: '市制', value: 'cn', placeholder: ''},\n];\n\nexport const typeList = [\n  { label: '千吨', value: 'kt', type:'ms', placeholder: 'kilo ton'},\n  { label: '吨', value: 't',  type:'ms', placeholder: 'ton' },\n  { label: '千克', value: 'kg', type:'ms', placeholder: 'kilo gram' },\n  { label: '克', value: 'g', type:'ms', placeholder: 'gram' },\n  { label: '毫克', value: 'mg', type:'ms', placeholder: 'milligram' },\n  { label: '微克', value: 'mcg', type:'ms', placeholder: 'micro gram' },\n  { label: '纳克', value: 'ng', type:'ms', placeholder: 'nanogram' },\n  //{ label: '皮克(pg)', value: 'pg', type:'ms', placeholder: 'picogram' },\n  //{ label: '飞克(fg)', value: 'fg', type:'ms', placeholder: '' },\n  //{ label: '阿克(ag)', value: 'ag', type:'ms', placeholder: '' },\n  { label: '克拉', value: 'ct', type:'ms', placeholder: '钻石的质量（重量）单位，现定1克拉等于0.2克或200毫克' },\n  \n\n  { label: '盎司', value: 'oz', type:'iu', placeholder: '1 盎司 = 1/16 磅（pound）= 28.349523125 克'},\n  { label: '磅', value: 'lb', type:'iu', placeholder: '1 磅 = 7000 格令 = 453.59237 克'},\n  { label: '英石', value: 'st', type:'iu', placeholder: '1 英石（stone）= 14 磅 = 6.35029318 千克'},\n  { label: '格令', value: 'gr', type:'iu', placeholder: '1 格令（grain）= 64.79891 毫克'},\n  { label: '打兰', value: 'dr', type:'iu', placeholder: '1 打兰（drachm）= 1/16 盎司（ounce） = 1.77 克'},\n  { label: '夸特', value: 'qr', type:'iu', placeholder: '1 夸特（quarter）= 2 英石 = 28 磅 = 12.7 千克'},\n  { label: '英担', value: 'hw', type:'iu', placeholder: '1 英担（hundredweight）= 4 夸特 = 112 磅 = 50.8 千克'},\n  { label: '美担', value: 'md', type:'iu', placeholder: '1 美担 = 45.359237 千克'},\n  { label: '英吨', value: 'longton', type:'iu', placeholder: '1 英吨（ton）= 20 英担 = 2240 磅 = 1016 千克 英吨（长吨long ton）是2240磅'},\n  { label: '美吨', value: 'shortton', type:'iu', placeholder: '美吨（短吨short ton）是2000磅（907千克）'},\n  \n\n  { label: '担', value: 'dan', type:'cn', placeholder: '' },\n  { label: '斤', value: 'jin', type:'cn', placeholder: '' },\n  { label: '两', value: 'liang', type:'cn', placeholder: '' },\n  { label: '钱', value: 'qian', type:'cn', placeholder: '' },\n  { label: '分', value: 'fen', type:'cn', placeholder: '' },\n  { label: '厘', value: 'li', type:'cn', placeholder: '' },\n  \n];\n","import { typeList } from \"./data\";\n\n// 获指定制式的距离类型列表\nexport const getTypeList = (ut :string) => {\n  return typeList.filter((v) => v.type === ut)\n}\n\nexport const getDefaultType = (ut :string) :string =>{\n  switch(ut) {\n    case 'iu': return getDefaultIUType();\n    case 'cn': return getDefaultCNType();\n  }\n  return getDefaultMSType();\n}\n\nexport const getTypePlaceholder = (type :string) :string | undefined => {\n  return typeList.find(item => item.value === type)?.placeholder;\n}\n\nconst DEFAULT_UNIT_TYPE = 'weight-convert:default-unit-type';\n\n// 获取默认制式\nexport function getDefaultUnitType() :string  {\n  const type = localStorage.getItem(DEFAULT_UNIT_TYPE);\n  return (type === null)? \"ms\" : type;\n}\n\n// 设置默认制式\nexport function setDefaultUnitType(type: string) : void  {\n  localStorage.setItem(DEFAULT_UNIT_TYPE,type);\n}\n\nconst DEFAULT_MS_TYPE = 'weight-convert:default-ms-type';\n\n// 获取默认公制单位\nexport function getDefaultMSType() :string  {\n  const type = localStorage.getItem(DEFAULT_MS_TYPE);\n  return (type === null)? \"kg\" : type;\n}\n\n// 设置默认公制单位\nexport function setDefaultMSType(type: string) : void  {\n  localStorage.setItem(DEFAULT_MS_TYPE,type);\n}\n\nconst DEFAULT_IU_TYPE = 'weight-convert:default-iu-type';\n\n// 获取默认英制单位\nexport function getDefaultIUType() :string  {\n  const type = localStorage.getItem(DEFAULT_IU_TYPE);\n  return (type === null)? \"oz\" : type;\n}\n\n// 设置默认英制单位\nexport function setDefaultIUType(type: string) : void  {\n  localStorage.setItem(DEFAULT_IU_TYPE,type);\n}\n\nconst DEFAULT_CN_TYPE = 'weight-convert:default-cn-type';\n\n// 获取默认市制单位\nexport function getDefaultCNType() :string  {\n  const type = localStorage.getItem(DEFAULT_CN_TYPE);\n  return (type === null)? \"jin\" : type;\n}\n\n// 设置默认市制单位\nexport function setDefaultCNType(type: string) : void  {\n  localStorage.setItem(DEFAULT_CN_TYPE,type);\n}","import { Select, Form, Divider } from \"antd\";\nimport { getDefaultUnitType,setDefaultUnitType, getTypeList } from \"./lib\";\nimport { useState } from \"react\";\nimport { typeList, unitTypeList } from \"./data\";\nimport { getDefaultMSType,setDefaultMSType } from \"./lib\";\nimport { getDefaultIUType,setDefaultIUType } from \"./lib\";\nimport { getDefaultCNType,setDefaultCNType } from \"./lib\";\n\nexport const WeightConvertSetting = () => {\n  \n  const [ type, setType ] = useState(getDefaultUnitType()); // 默认制式\n  const [ msType, setMSType ] = useState(getDefaultMSType()); // 默认公制单位\n  const [ iuType, setIUType ] = useState(getDefaultIUType()); // 默认英制单位\n  const [ cnType, setCNType ] = useState(getDefaultCNType()); // 默认市制单位\n\n  return (\n    <>\n      <Divider orientation=\"left\" plain>重量转换</Divider>\n      <Form.Item label=\"默认制式\">\n        <Select\n          value={ type }\n          style={{ width: 240 }}\n          onChange={ (value: string) => { setType(value); setDefaultUnitType(value); } }\n          options={ unitTypeList }\n        />\n      </Form.Item>\n      <Form.Item label=\"默认公制单位\">\n        <Select\n          value={ msType }\n          style={{ width: 240 }}\n          onChange={ (value: string) => { setMSType(value); setDefaultMSType(value); } }\n          options={ getTypeList('ms') }\n        />\n      </Form.Item>\n      <Form.Item label=\"默认英制单位\">\n        <Select\n          value={ iuType }\n          style={{ width: 240 }}\n          onChange={ (value: string) => { setIUType(value); setDefaultIUType(value); } }\n          options={ getTypeList('iu') }\n        />\n      </Form.Item>\n      <Form.Item label=\"默认市制单位\">\n        <Select\n          value={ cnType }\n          style={{ width: 240 }}\n          onChange={ (value: string) => { setCNType(value); setDefaultCNType(value); } }\n          options={ getTypeList('cn') }\n        />\n      </Form.Item>\n    </>\n  );\n}"],"names":["props","ref","AntdIcon","icon","getStatusClassNames","prefixCls","status","hasFeedback","getMergedStatus","contextStatus","customStatus","unitTypeList","label","value","placeholder","typeList","type","getTypeList","ut","v","getDefaultType","getDefaultIUType","getDefaultCNType","getDefaultMSType","getTypePlaceholder","item","DEFAULT_UNIT_TYPE","getDefaultUnitType","localStorage","getItem","setDefaultUnitType","setItem","DEFAULT_MS_TYPE","setDefaultMSType","DEFAULT_IU_TYPE","setDefaultIUType","DEFAULT_CN_TYPE","setDefaultCNType","WeightConvertSetting","setType","useState","msType","setMSType","iuType","setIUType","cnType","setCNType","orientation","plain","style","width","onChange","options"],"sourceRoot":""}