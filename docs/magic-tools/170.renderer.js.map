{"version":3,"file":"170.renderer.js","mappings":"4IACO,MAAMA,EAAiBC,IAC5B,MAAMC,EAAMD,EAAME,MAAM,MAClBC,EAAMF,EAAIG,OAEhB,OAAG,IAAMD,GAAkB,KAAXF,EAAI,GAAkB,EAC/BE,CAAG,EAKCE,EAAmBC,IAC9B,GAAG,KAAOA,EAAEC,OAAQ,MAAO,GAC3B,IAAIN,EAAoB,GAMxB,OALAK,EAAEJ,MAAM,MAAMM,KAAKC,IACd,KAAOA,EAAKF,QACbN,EAAIS,KAAKD,E,IAGNR,EAAIU,KAAK,KAAK,C","sources":["webpack:///./src/renderer/App/LineCount/lib.ts"],"sourcesContent":["// 计算行数\r\nexport const calcLineCount = (value :string) :number => {\r\n  const arr = value.split(\"\\n\")\r\n  const len = arr.length;\r\n  // 当只有一行时，内容只有一个 \\n 返回 0\r\n  if(1 === len && arr[0] === \"\") return 0;\r\n  return len;\r\n  // return ('' === value.trim())? 0 : len:  \r\n}\r\n\r\n// 移除空行\r\nexport const removeEmptyLine = (v :string) :string => {\r\n  if('' === v.trim()) return \"\";\r\n  let arr:Array<string> = [];\r\n  v.split(\"\\n\").map((line :string) => {\r\n    if('' !== line.trim() ) { \r\n      arr.push(line);\r\n    }\r\n  })\r\n  return arr.join(\"\\n\");\r\n}"],"names":["calcLineCount","value","arr","split","len","length","removeEmptyLine","v","trim","map","line","push","join"],"sourceRoot":""}