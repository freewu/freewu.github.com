{"version":3,"file":"4644.renderer.js","mappings":"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","sources":["webpack:///./node_modules/antd/es/badge/style/index.js","webpack:///./node_modules/antd/es/badge/Ribbon.js","webpack:///./node_modules/antd/es/badge/SingleNumber.js","webpack:///./node_modules/antd/es/badge/ScrollNumber.js","webpack:///./node_modules/antd/es/badge/index.js"],"sourcesContent":["import { Keyframes } from '@ant-design/cssinjs';\nimport { genComponentStyleHook, mergeToken, genPresetColor } from '../../theme/internal';\nimport { resetComponent } from '../../style';\nconst antStatusProcessing = new Keyframes('antStatusProcessing', {\n  '0%': {\n    transform: 'scale(0.8)',\n    opacity: 0.5\n  },\n  '100%': {\n    transform: 'scale(2.4)',\n    opacity: 0\n  }\n});\nconst antZoomBadgeIn = new Keyframes('antZoomBadgeIn', {\n  '0%': {\n    transform: 'scale(0) translate(50%, -50%)',\n    opacity: 0\n  },\n  '100%': {\n    transform: 'scale(1) translate(50%, -50%)'\n  }\n});\nconst antZoomBadgeOut = new Keyframes('antZoomBadgeOut', {\n  '0%': {\n    transform: 'scale(1) translate(50%, -50%)'\n  },\n  '100%': {\n    transform: 'scale(0) translate(50%, -50%)',\n    opacity: 0\n  }\n});\nconst antNoWrapperZoomBadgeIn = new Keyframes('antNoWrapperZoomBadgeIn', {\n  '0%': {\n    transform: 'scale(0)',\n    opacity: 0\n  },\n  '100%': {\n    transform: 'scale(1)'\n  }\n});\nconst antNoWrapperZoomBadgeOut = new Keyframes('antNoWrapperZoomBadgeOut', {\n  '0%': {\n    transform: 'scale(1)'\n  },\n  '100%': {\n    transform: 'scale(0)',\n    opacity: 0\n  }\n});\nconst antBadgeLoadingCircle = new Keyframes('antBadgeLoadingCircle', {\n  '0%': {\n    transformOrigin: '50%'\n  },\n  '100%': {\n    transform: 'translate(50%, -50%) rotate(360deg)',\n    transformOrigin: '50%'\n  }\n});\nconst genSharedBadgeStyle = token => {\n  const {\n    componentCls,\n    iconCls,\n    antCls,\n    badgeFontHeight,\n    badgeShadowSize,\n    badgeHeightSm,\n    motionDurationSlow,\n    badgeStatusSize,\n    marginXS,\n    badgeRibbonOffset\n  } = token;\n  const numberPrefixCls = `${antCls}-scroll-number`;\n  const ribbonPrefixCls = `${antCls}-ribbon`;\n  const ribbonWrapperPrefixCls = `${antCls}-ribbon-wrapper`;\n  const colorPreset = genPresetColor(token, (colorKey, _ref) => {\n    let {\n      darkColor\n    } = _ref;\n    return {\n      [`${componentCls}-color-${colorKey}`]: {\n        background: darkColor\n      }\n    };\n  });\n  const statusRibbonPreset = genPresetColor(token, (colorKey, _ref2) => {\n    let {\n      darkColor\n    } = _ref2;\n    return {\n      [`&${ribbonPrefixCls}-color-${colorKey}`]: {\n        background: darkColor,\n        color: darkColor\n      }\n    };\n  });\n  return {\n    [componentCls]: Object.assign(Object.assign(Object.assign(Object.assign({}, resetComponent(token)), {\n      position: 'relative',\n      display: 'inline-block',\n      width: 'fit-content',\n      lineHeight: 1,\n      [`${componentCls}-count`]: {\n        zIndex: token.badgeZIndex,\n        minWidth: token.badgeHeight,\n        height: token.badgeHeight,\n        color: token.badgeTextColor,\n        fontWeight: token.badgeFontWeight,\n        fontSize: token.badgeFontSize,\n        lineHeight: `${token.badgeHeight}px`,\n        whiteSpace: 'nowrap',\n        textAlign: 'center',\n        background: token.badgeColor,\n        borderRadius: token.badgeHeight / 2,\n        boxShadow: `0 0 0 ${badgeShadowSize}px ${token.badgeShadowColor}`,\n        transition: `background ${token.motionDurationMid}`,\n        a: {\n          color: token.badgeTextColor\n        },\n        'a:hover': {\n          color: token.badgeTextColor\n        },\n        'a:hover &': {\n          background: token.badgeColorHover\n        }\n      },\n      [`${componentCls}-count-sm`]: {\n        minWidth: badgeHeightSm,\n        height: badgeHeightSm,\n        fontSize: token.badgeFontSizeSm,\n        lineHeight: `${badgeHeightSm}px`,\n        borderRadius: badgeHeightSm / 2\n      },\n      [`${componentCls}-multiple-words`]: {\n        padding: `0 ${token.paddingXS}px`\n      },\n      [`${componentCls}-dot`]: {\n        zIndex: token.badgeZIndex,\n        width: token.badgeDotSize,\n        minWidth: token.badgeDotSize,\n        height: token.badgeDotSize,\n        background: token.badgeColor,\n        borderRadius: '100%',\n        boxShadow: `0 0 0 ${badgeShadowSize}px ${token.badgeShadowColor}`\n      },\n      [`${componentCls}-dot${numberPrefixCls}`]: {\n        transition: `background ${motionDurationSlow}`\n      },\n      [`${componentCls}-count, ${componentCls}-dot, ${numberPrefixCls}-custom-component`]: {\n        position: 'absolute',\n        top: 0,\n        insetInlineEnd: 0,\n        transform: 'translate(50%, -50%)',\n        transformOrigin: '100% 0%',\n        [`${iconCls}-spin`]: {\n          animationName: antBadgeLoadingCircle,\n          animationDuration: token.motionDurationMid,\n          animationIterationCount: 'infinite',\n          animationTimingFunction: 'linear'\n        }\n      },\n      [`&${componentCls}-status`]: {\n        lineHeight: 'inherit',\n        verticalAlign: 'baseline',\n        [`${componentCls}-status-dot`]: {\n          position: 'relative',\n          top: -1,\n          display: 'inline-block',\n          width: badgeStatusSize,\n          height: badgeStatusSize,\n          verticalAlign: 'middle',\n          borderRadius: '50%'\n        },\n        [`${componentCls}-status-success`]: {\n          backgroundColor: token.colorSuccess\n        },\n        [`${componentCls}-status-processing`]: {\n          position: 'relative',\n          color: token.colorPrimary,\n          backgroundColor: token.colorPrimary,\n          '&::after': {\n            position: 'absolute',\n            top: 0,\n            insetInlineStart: 0,\n            width: '100%',\n            height: '100%',\n            borderWidth: badgeShadowSize,\n            borderStyle: 'solid',\n            borderColor: 'inherit',\n            borderRadius: '50%',\n            animationName: antStatusProcessing,\n            animationDuration: token.badgeProcessingDuration,\n            animationIterationCount: 'infinite',\n            animationTimingFunction: 'ease-in-out',\n            content: '\"\"'\n          }\n        },\n        [`${componentCls}-status-default`]: {\n          backgroundColor: token.colorTextPlaceholder\n        },\n        [`${componentCls}-status-error`]: {\n          backgroundColor: token.colorError\n        },\n        [`${componentCls}-status-warning`]: {\n          backgroundColor: token.colorWarning\n        },\n        [`${componentCls}-status-text`]: {\n          marginInlineStart: marginXS,\n          color: token.colorText,\n          fontSize: token.fontSize\n        }\n      }\n    }), colorPreset), {\n      [`${componentCls}-zoom-appear, ${componentCls}-zoom-enter`]: {\n        animationName: antZoomBadgeIn,\n        animationDuration: token.motionDurationSlow,\n        animationTimingFunction: token.motionEaseOutBack,\n        animationFillMode: 'both'\n      },\n      [`${componentCls}-zoom-leave`]: {\n        animationName: antZoomBadgeOut,\n        animationDuration: token.motionDurationSlow,\n        animationTimingFunction: token.motionEaseOutBack,\n        animationFillMode: 'both'\n      },\n      [`&${componentCls}-not-a-wrapper`]: {\n        [`${componentCls}-zoom-appear, ${componentCls}-zoom-enter`]: {\n          animationName: antNoWrapperZoomBadgeIn,\n          animationDuration: token.motionDurationSlow,\n          animationTimingFunction: token.motionEaseOutBack\n        },\n        [`${componentCls}-zoom-leave`]: {\n          animationName: antNoWrapperZoomBadgeOut,\n          animationDuration: token.motionDurationSlow,\n          animationTimingFunction: token.motionEaseOutBack\n        },\n        [`&:not(${componentCls}-status)`]: {\n          verticalAlign: 'middle'\n        },\n        [`${numberPrefixCls}-custom-component, ${componentCls}-count`]: {\n          transform: 'none'\n        },\n        [`${numberPrefixCls}-custom-component, ${numberPrefixCls}`]: {\n          position: 'relative',\n          top: 'auto',\n          display: 'block',\n          transformOrigin: '50% 50%'\n        }\n      },\n      [`${numberPrefixCls}`]: {\n        overflow: 'hidden',\n        [`${numberPrefixCls}-only`]: {\n          position: 'relative',\n          display: 'inline-block',\n          height: token.badgeHeight,\n          transition: `all ${token.motionDurationSlow} ${token.motionEaseOutBack}`,\n          WebkitTransformStyle: 'preserve-3d',\n          WebkitBackfaceVisibility: 'hidden',\n          [`> p${numberPrefixCls}-only-unit`]: {\n            height: token.badgeHeight,\n            margin: 0,\n            WebkitTransformStyle: 'preserve-3d',\n            WebkitBackfaceVisibility: 'hidden'\n          }\n        },\n        [`${numberPrefixCls}-symbol`]: {\n          verticalAlign: 'top'\n        }\n      },\n      // ====================== RTL =======================\n      '&-rtl': {\n        direction: 'rtl',\n        [`${componentCls}-count, ${componentCls}-dot, ${numberPrefixCls}-custom-component`]: {\n          transform: 'translate(-50%, -50%)'\n        }\n      }\n    }),\n    [`${ribbonWrapperPrefixCls}`]: {\n      position: 'relative'\n    },\n    [`${ribbonPrefixCls}`]: Object.assign(Object.assign(Object.assign(Object.assign({}, resetComponent(token)), {\n      position: 'absolute',\n      top: marginXS,\n      padding: `0 ${token.paddingXS}px`,\n      color: token.colorPrimary,\n      lineHeight: `${badgeFontHeight}px`,\n      whiteSpace: 'nowrap',\n      backgroundColor: token.colorPrimary,\n      borderRadius: token.borderRadiusSM,\n      [`${ribbonPrefixCls}-text`]: {\n        color: token.colorTextLightSolid\n      },\n      [`${ribbonPrefixCls}-corner`]: {\n        position: 'absolute',\n        top: '100%',\n        width: badgeRibbonOffset,\n        height: badgeRibbonOffset,\n        color: 'currentcolor',\n        border: `${badgeRibbonOffset / 2}px solid`,\n        transform: token.badgeRibbonCornerTransform,\n        transformOrigin: 'top',\n        filter: token.badgeRibbonCornerFilter\n      }\n    }), statusRibbonPreset), {\n      [`&${ribbonPrefixCls}-placement-end`]: {\n        insetInlineEnd: -badgeRibbonOffset,\n        borderEndEndRadius: 0,\n        [`${ribbonPrefixCls}-corner`]: {\n          insetInlineEnd: 0,\n          borderInlineEndColor: 'transparent',\n          borderBlockEndColor: 'transparent'\n        }\n      },\n      [`&${ribbonPrefixCls}-placement-start`]: {\n        insetInlineStart: -badgeRibbonOffset,\n        borderEndStartRadius: 0,\n        [`${ribbonPrefixCls}-corner`]: {\n          insetInlineStart: 0,\n          borderBlockEndColor: 'transparent',\n          borderInlineStartColor: 'transparent'\n        }\n      },\n      // ====================== RTL =======================\n      '&-rtl': {\n        direction: 'rtl'\n      }\n    })\n  };\n};\n// ============================== Export ==============================\nexport default genComponentStyleHook('Badge', token => {\n  const {\n    fontSize,\n    lineHeight,\n    fontSizeSM,\n    lineWidth,\n    marginXS,\n    colorBorderBg\n  } = token;\n  const badgeFontHeight = Math.round(fontSize * lineHeight);\n  const badgeShadowSize = lineWidth;\n  const badgeZIndex = 'auto';\n  const badgeHeight = badgeFontHeight - 2 * badgeShadowSize;\n  const badgeTextColor = token.colorBgContainer;\n  const badgeFontWeight = 'normal';\n  const badgeFontSize = fontSizeSM;\n  const badgeColor = token.colorError;\n  const badgeColorHover = token.colorErrorHover;\n  const badgeHeightSm = fontSize;\n  const badgeDotSize = fontSizeSM / 2;\n  const badgeFontSizeSm = fontSizeSM;\n  const badgeStatusSize = fontSizeSM / 2;\n  const badgeToken = mergeToken(token, {\n    badgeFontHeight,\n    badgeShadowSize,\n    badgeZIndex,\n    badgeHeight,\n    badgeTextColor,\n    badgeFontWeight,\n    badgeFontSize,\n    badgeColor,\n    badgeColorHover,\n    badgeShadowColor: colorBorderBg,\n    badgeHeightSm,\n    badgeDotSize,\n    badgeFontSizeSm,\n    badgeStatusSize,\n    badgeProcessingDuration: '1.2s',\n    badgeRibbonOffset: marginXS,\n    // Follow token just by Design. Not related with token\n    badgeRibbonCornerTransform: 'scaleY(0.75)',\n    badgeRibbonCornerFilter: `brightness(75%)`\n  });\n  return [genSharedBadgeStyle(badgeToken)];\n});","import classNames from 'classnames';\nimport * as React from 'react';\nimport { ConfigContext } from '../config-provider';\nimport useStyle from './style';\nimport { isPresetColor } from '../_util/colors';\nconst Ribbon = _ref => {\n  let {\n    className,\n    prefixCls: customizePrefixCls,\n    style,\n    color,\n    children,\n    text,\n    placement = 'end'\n  } = _ref;\n  const {\n    getPrefixCls,\n    direction\n  } = React.useContext(ConfigContext);\n  const prefixCls = getPrefixCls('ribbon', customizePrefixCls);\n  const colorInPreset = isPresetColor(color, false);\n  const ribbonCls = classNames(prefixCls, `${prefixCls}-placement-${placement}`, {\n    [`${prefixCls}-rtl`]: direction === 'rtl',\n    [`${prefixCls}-color-${color}`]: colorInPreset\n  }, className);\n  const [wrapSSR, hashId] = useStyle(prefixCls);\n  const colorStyle = {};\n  const cornerColorStyle = {};\n  if (color && !colorInPreset) {\n    colorStyle.background = color;\n    cornerColorStyle.color = color;\n  }\n  return wrapSSR( /*#__PURE__*/React.createElement(\"div\", {\n    className: classNames(`${prefixCls}-wrapper`, hashId)\n  }, children, /*#__PURE__*/React.createElement(\"div\", {\n    className: classNames(ribbonCls, hashId),\n    style: Object.assign(Object.assign({}, colorStyle), style)\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: `${prefixCls}-text`\n  }, text), /*#__PURE__*/React.createElement(\"div\", {\n    className: `${prefixCls}-corner`,\n    style: cornerColorStyle\n  }))));\n};\nif (process.env.NODE_ENV !== 'production') {\n  Ribbon.displayName = 'Ribbon';\n}\nexport default Ribbon;","import classNames from 'classnames';\nimport * as React from 'react';\nfunction UnitNumber(_ref) {\n  let {\n    prefixCls,\n    value,\n    current,\n    offset = 0\n  } = _ref;\n  let style;\n  if (offset) {\n    style = {\n      position: 'absolute',\n      top: `${offset}00%`,\n      left: 0\n    };\n  }\n  return /*#__PURE__*/React.createElement(\"span\", {\n    style: style,\n    className: classNames(`${prefixCls}-only-unit`, {\n      current\n    })\n  }, value);\n}\nfunction getOffset(start, end, unit) {\n  let index = start;\n  let offset = 0;\n  while ((index + 10) % 10 !== end) {\n    index += unit;\n    offset += unit;\n  }\n  return offset;\n}\nexport default function SingleNumber(props) {\n  const {\n    prefixCls,\n    count: originCount,\n    value: originValue\n  } = props;\n  const value = Number(originValue);\n  const count = Math.abs(originCount);\n  const [prevValue, setPrevValue] = React.useState(value);\n  const [prevCount, setPrevCount] = React.useState(count);\n  // ============================= Events =============================\n  const onTransitionEnd = () => {\n    setPrevValue(value);\n    setPrevCount(count);\n  };\n  // Fallback if transition event not support\n  React.useEffect(() => {\n    const timeout = setTimeout(() => {\n      onTransitionEnd();\n    }, 1000);\n    return () => {\n      clearTimeout(timeout);\n    };\n  }, [value]);\n  // ============================= Render =============================\n  // Render unit list\n  let unitNodes;\n  let offsetStyle;\n  if (prevValue === value || Number.isNaN(value) || Number.isNaN(prevValue)) {\n    // Nothing to change\n    unitNodes = [/*#__PURE__*/React.createElement(UnitNumber, Object.assign({}, props, {\n      key: value,\n      current: true\n    }))];\n    offsetStyle = {\n      transition: 'none'\n    };\n  } else {\n    unitNodes = [];\n    // Fill basic number units\n    const end = value + 10;\n    const unitNumberList = [];\n    for (let index = value; index <= end; index += 1) {\n      unitNumberList.push(index);\n    }\n    // Fill with number unit nodes\n    const prevIndex = unitNumberList.findIndex(n => n % 10 === prevValue);\n    unitNodes = unitNumberList.map((n, index) => {\n      const singleUnit = n % 10;\n      return /*#__PURE__*/React.createElement(UnitNumber, Object.assign({}, props, {\n        key: n,\n        value: singleUnit,\n        offset: index - prevIndex,\n        current: index === prevIndex\n      }));\n    });\n    // Calculate container offset value\n    const unit = prevCount < count ? 1 : -1;\n    offsetStyle = {\n      transform: `translateY(${-getOffset(prevValue, value, unit)}00%)`\n    };\n  }\n  return /*#__PURE__*/React.createElement(\"span\", {\n    className: `${prefixCls}-only`,\n    style: offsetStyle,\n    onTransitionEnd: onTransitionEnd\n  }, unitNodes);\n}","var __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { ConfigContext } from '../config-provider';\nimport { cloneElement } from '../_util/reactNode';\nimport SingleNumber from './SingleNumber';\nconst ScrollNumber = /*#__PURE__*/React.forwardRef((_a, ref) => {\n  var {\n      prefixCls: customizePrefixCls,\n      count,\n      className,\n      motionClassName,\n      style,\n      title,\n      show,\n      component: Component = 'sup',\n      children\n    } = _a,\n    restProps = __rest(_a, [\"prefixCls\", \"count\", \"className\", \"motionClassName\", \"style\", \"title\", \"show\", \"component\", \"children\"]);\n  const {\n    getPrefixCls\n  } = React.useContext(ConfigContext);\n  const prefixCls = getPrefixCls('scroll-number', customizePrefixCls);\n  // ============================ Render ============================\n  const newProps = Object.assign(Object.assign({}, restProps), {\n    'data-show': show,\n    style,\n    className: classNames(prefixCls, className, motionClassName),\n    title: title\n  });\n  // Only integer need motion\n  let numberNodes = count;\n  if (count && Number(count) % 1 === 0) {\n    const numberList = String(count).split('');\n    numberNodes = numberList.map((num, i) => /*#__PURE__*/React.createElement(SingleNumber, {\n      prefixCls: prefixCls,\n      count: Number(count),\n      value: num,\n      // eslint-disable-next-line react/no-array-index-key\n      key: numberList.length - i\n    }));\n  }\n  // allow specify the border\n  // mock border-color by box-shadow for compatible with old usage:\n  // <Badge count={4} style={{ backgroundColor: '#fff', color: '#999', borderColor: '#d9d9d9' }} />\n  if (style && style.borderColor) {\n    newProps.style = Object.assign(Object.assign({}, style), {\n      boxShadow: `0 0 0 1px ${style.borderColor} inset`\n    });\n  }\n  if (children) {\n    return cloneElement(children, oriProps => ({\n      className: classNames(`${prefixCls}-custom-component`, oriProps === null || oriProps === void 0 ? void 0 : oriProps.className, motionClassName)\n    }));\n  }\n  return /*#__PURE__*/React.createElement(Component, Object.assign({}, newProps, {\n    ref: ref\n  }), numberNodes);\n});\nexport default ScrollNumber;","var __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport classNames from 'classnames';\nimport CSSMotion from 'rc-motion';\nimport * as React from 'react';\nimport { useMemo, useRef } from 'react';\nimport { ConfigContext } from '../config-provider';\nimport { isPresetColor } from '../_util/colors';\nimport { cloneElement } from '../_util/reactNode';\nimport Ribbon from './Ribbon';\nimport ScrollNumber from './ScrollNumber';\nimport useStyle from './style';\nconst InternalBadge = (props, ref) => {\n  const {\n      prefixCls: customizePrefixCls,\n      scrollNumberPrefixCls: customizeScrollNumberPrefixCls,\n      children,\n      status,\n      text,\n      color,\n      count = null,\n      overflowCount = 99,\n      dot = false,\n      size = 'default',\n      title,\n      offset,\n      style,\n      className,\n      rootClassName,\n      showZero = false\n    } = props,\n    restProps = __rest(props, [\"prefixCls\", \"scrollNumberPrefixCls\", \"children\", \"status\", \"text\", \"color\", \"count\", \"overflowCount\", \"dot\", \"size\", \"title\", \"offset\", \"style\", \"className\", \"rootClassName\", \"showZero\"]);\n  const {\n    getPrefixCls,\n    direction\n  } = React.useContext(ConfigContext);\n  const prefixCls = getPrefixCls('badge', customizePrefixCls);\n  // Style\n  const [wrapSSR, hashId] = useStyle(prefixCls);\n  // ================================ Misc ================================\n  const numberedDisplayCount = count > overflowCount ? `${overflowCount}+` : count;\n  const isZero = numberedDisplayCount === '0' || numberedDisplayCount === 0;\n  const ignoreCount = count === null || isZero && !showZero;\n  const hasStatus = (status !== null && status !== undefined || color !== null && color !== undefined) && ignoreCount;\n  const showAsDot = dot && !isZero;\n  const mergedCount = showAsDot ? '' : numberedDisplayCount;\n  const isHidden = useMemo(() => {\n    const isEmpty = mergedCount === null || mergedCount === undefined || mergedCount === '';\n    return (isEmpty || isZero && !showZero) && !showAsDot;\n  }, [mergedCount, isZero, showZero, showAsDot]);\n  // Count should be cache in case hidden change it\n  const countRef = useRef(count);\n  if (!isHidden) {\n    countRef.current = count;\n  }\n  const livingCount = countRef.current;\n  // We need cache count since remove motion should not change count display\n  const displayCountRef = useRef(mergedCount);\n  if (!isHidden) {\n    displayCountRef.current = mergedCount;\n  }\n  const displayCount = displayCountRef.current;\n  // We will cache the dot status to avoid shaking on leaved motion\n  const isDotRef = useRef(showAsDot);\n  if (!isHidden) {\n    isDotRef.current = showAsDot;\n  }\n  // =============================== Styles ===============================\n  const mergedStyle = useMemo(() => {\n    if (!offset) {\n      return Object.assign({}, style);\n    }\n    const offsetStyle = {\n      marginTop: offset[1]\n    };\n    if (direction === 'rtl') {\n      offsetStyle.left = parseInt(offset[0], 10);\n    } else {\n      offsetStyle.right = -parseInt(offset[0], 10);\n    }\n    return Object.assign(Object.assign({}, offsetStyle), style);\n  }, [direction, offset, style]);\n  // =============================== Render ===============================\n  // >>> Title\n  const titleNode = title !== null && title !== void 0 ? title : typeof livingCount === 'string' || typeof livingCount === 'number' ? livingCount : undefined;\n  // >>> Status Text\n  const statusTextNode = isHidden || !text ? null : /*#__PURE__*/React.createElement(\"span\", {\n    className: `${prefixCls}-status-text`\n  }, text);\n  // >>> Display Component\n  const displayNode = !livingCount || typeof livingCount !== 'object' ? undefined : cloneElement(livingCount, oriProps => ({\n    style: Object.assign(Object.assign({}, mergedStyle), oriProps.style)\n  }));\n  // InternalColor\n  const isInternalColor = isPresetColor(color, false);\n  // Shared styles\n  const statusCls = classNames({\n    [`${prefixCls}-status-dot`]: hasStatus,\n    [`${prefixCls}-status-${status}`]: !!status,\n    [`${prefixCls}-color-${color}`]: isInternalColor\n  });\n  const statusStyle = {};\n  if (color && !isInternalColor) {\n    statusStyle.color = color;\n    statusStyle.background = color;\n  }\n  const badgeClassName = classNames(prefixCls, {\n    [`${prefixCls}-status`]: hasStatus,\n    [`${prefixCls}-not-a-wrapper`]: !children,\n    [`${prefixCls}-rtl`]: direction === 'rtl'\n  }, className, rootClassName, hashId);\n  // <Badge status=\"success\" />\n  if (!children && hasStatus) {\n    const statusTextColor = mergedStyle.color;\n    return wrapSSR( /*#__PURE__*/React.createElement(\"span\", Object.assign({}, restProps, {\n      className: badgeClassName,\n      style: mergedStyle\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      className: statusCls,\n      style: statusStyle\n    }), text && /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        color: statusTextColor\n      },\n      className: `${prefixCls}-status-text`\n    }, text)));\n  }\n  return wrapSSR( /*#__PURE__*/React.createElement(\"span\", Object.assign({\n    ref: ref\n  }, restProps, {\n    className: badgeClassName\n  }), children, /*#__PURE__*/React.createElement(CSSMotion, {\n    visible: !isHidden,\n    motionName: `${prefixCls}-zoom`,\n    motionAppear: false,\n    motionDeadline: 1000\n  }, _ref => {\n    let {\n      className: motionClassName,\n      ref: scrollNumberRef\n    } = _ref;\n    const scrollNumberPrefixCls = getPrefixCls('scroll-number', customizeScrollNumberPrefixCls);\n    const isDot = isDotRef.current;\n    const scrollNumberCls = classNames({\n      [`${prefixCls}-dot`]: isDot,\n      [`${prefixCls}-count`]: !isDot,\n      [`${prefixCls}-count-sm`]: size === 'small',\n      [`${prefixCls}-multiple-words`]: !isDot && displayCount && displayCount.toString().length > 1,\n      [`${prefixCls}-status-${status}`]: !!status,\n      [`${prefixCls}-color-${color}`]: isInternalColor\n    });\n    let scrollNumberStyle = Object.assign({}, mergedStyle);\n    if (color && !isInternalColor) {\n      scrollNumberStyle = scrollNumberStyle || {};\n      scrollNumberStyle.background = color;\n    }\n    return /*#__PURE__*/React.createElement(ScrollNumber, {\n      prefixCls: scrollNumberPrefixCls,\n      show: !isHidden,\n      motionClassName: motionClassName,\n      className: scrollNumberCls,\n      count: displayCount,\n      title: titleNode,\n      style: scrollNumberStyle,\n      key: \"scrollNumber\",\n      ref: scrollNumberRef\n    }, displayNode);\n  }), statusTextNode));\n};\nconst Badge = /*#__PURE__*/React.forwardRef(InternalBadge);\nBadge.Ribbon = Ribbon;\nif (process.env.NODE_ENV !== 'production') {\n  Badge.displayName = 'Badge';\n}\nexport default Badge;"],"names":["antStatusProcessing","transform","opacity","antZoomBadgeIn","antZoomBadgeOut","antNoWrapperZoomBadgeIn","antNoWrapperZoomBadgeOut","antBadgeLoadingCircle","transformOrigin","genSharedBadgeStyle","token","componentCls","iconCls","antCls","badgeFontHeight","badgeShadowSize","badgeHeightSm","motionDurationSlow","badgeStatusSize","marginXS","badgeRibbonOffset","numberPrefixCls","ribbonPrefixCls","ribbonWrapperPrefixCls","colorPreset","genPresetColor","colorKey","_ref","darkColor","background","statusRibbonPreset","_ref2","color","Object","assign","position","display","width","lineHeight","zIndex","badgeZIndex","minWidth","badgeHeight","height","badgeTextColor","fontWeight","badgeFontWeight","fontSize","badgeFontSize","whiteSpace","textAlign","badgeColor","borderRadius","boxShadow","badgeShadowColor","transition","motionDurationMid","a","badgeColorHover","badgeFontSizeSm","padding","paddingXS","badgeDotSize","top","insetInlineEnd","animationName","animationDuration","animationIterationCount","animationTimingFunction","verticalAlign","backgroundColor","colorSuccess","colorPrimary","insetInlineStart","borderWidth","borderStyle","borderColor","badgeProcessingDuration","content","colorTextPlaceholder","colorError","colorWarning","marginInlineStart","colorText","motionEaseOutBack","animationFillMode","overflow","WebkitTransformStyle","WebkitBackfaceVisibility","margin","direction","borderRadiusSM","colorTextLightSolid","border","badgeRibbonCornerTransform","filter","badgeRibbonCornerFilter","borderEndEndRadius","borderInlineEndColor","borderBlockEndColor","borderEndStartRadius","borderInlineStartColor","genComponentStyleHook","fontSizeSM","lineWidth","colorBorderBg","Math","round","colorBgContainer","colorErrorHover","badgeToken","className","prefixCls","customizePrefixCls","style","children","text","placement","getPrefixCls","colorInPreset","ribbonCls","wrapSSR","hashId","colorStyle","cornerColorStyle","UnitNumber","value","current","offset","left","getOffset","start","end","unit","index","SingleNumber","props","count","originCount","originValue","Number","abs","prevValue","setPrevValue","prevCount","setPrevCount","onTransitionEnd","unitNodes","offsetStyle","timeout","setTimeout","clearTimeout","isNaN","key","unitNumberList","push","prevIndex","findIndex","n","map","singleUnit","__rest","s","e","t","p","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","i","length","propertyIsEnumerable","ScrollNumber","_a","ref","motionClassName","title","show","component","Component","restProps","newProps","numberNodes","numberList","String","split","num","oriProps","InternalBadge","scrollNumberPrefixCls","customizeScrollNumberPrefixCls","status","overflowCount","dot","size","rootClassName","showZero","numberedDisplayCount","isZero","hasStatus","showAsDot","mergedCount","isHidden","useMemo","countRef","useRef","livingCount","displayCountRef","displayCount","isDotRef","mergedStyle","marginTop","parseInt","right","titleNode","undefined","statusTextNode","displayNode","isInternalColor","statusCls","statusStyle","badgeClassName","statusTextColor","visible","motionName","motionAppear","motionDeadline","scrollNumberRef","isDot","scrollNumberCls","toString","scrollNumberStyle","Badge","Ribbon"],"sourceRoot":""}