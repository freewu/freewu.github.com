{"version":3,"file":"6612.renderer.js","mappings":"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","sources":["webpack://magic-tools/./node_modules/antd/es/_util/responsiveObserver.js","webpack://magic-tools/./node_modules/antd/es/grid/RowContext.js","webpack://magic-tools/./node_modules/antd/es/grid/row.js","webpack://magic-tools/./node_modules/antd/es/grid/style/index.js","webpack://magic-tools/./node_modules/antd/es/locale/useLocale.js","webpack://magic-tools/./node_modules/@ant-design/icons-svg/es/asn/ReloadOutlined.js","webpack://magic-tools/./node_modules/@ant-design/icons/es/icons/ReloadOutlined.js","webpack://magic-tools/./node_modules/qrcode.react/lib/esm/index.js","webpack://magic-tools/./node_modules/antd/es/qrcode/style/index.js","webpack://magic-tools/./node_modules/antd/es/qrcode/index.js"],"sourcesContent":["import React from 'react';\nimport { useToken } from '../theme/internal';\nexport const responsiveArray = ['xxl', 'xl', 'lg', 'md', 'sm', 'xs'];\nconst getResponsiveMap = token => ({\n  xs: `(max-width: ${token.screenXSMax}px)`,\n  sm: `(min-width: ${token.screenSM}px)`,\n  md: `(min-width: ${token.screenMD}px)`,\n  lg: `(min-width: ${token.screenLG}px)`,\n  xl: `(min-width: ${token.screenXL}px)`,\n  xxl: `(min-width: ${token.screenXXL}px)`\n});\n/**\n * Ensures that the breakpoints token are valid, in good order\n * For each breakpoint : screenMin <= screen <= screenMax and screenMax <= nextScreenMin\n */\nconst validateBreakpoints = token => {\n  const indexableToken = token;\n  const revBreakpoints = [].concat(responsiveArray).reverse();\n  revBreakpoints.forEach((breakpoint, i) => {\n    const breakpointUpper = breakpoint.toUpperCase();\n    const screenMin = `screen${breakpointUpper}Min`;\n    const screen = `screen${breakpointUpper}`;\n    if (!(indexableToken[screenMin] <= indexableToken[screen])) {\n      throw new Error(`${screenMin}<=${screen} fails : !(${indexableToken[screenMin]}<=${indexableToken[screen]})`);\n    }\n    if (i < revBreakpoints.length - 1) {\n      const screenMax = `screen${breakpointUpper}Max`;\n      if (!(indexableToken[screen] <= indexableToken[screenMax])) {\n        throw new Error(`${screen}<=${screenMax} fails : !(${indexableToken[screen]}<=${indexableToken[screenMax]})`);\n      }\n      const nextBreakpointUpperMin = revBreakpoints[i + 1].toUpperCase();\n      const nextScreenMin = `screen${nextBreakpointUpperMin}Min`;\n      if (!(indexableToken[screenMax] <= indexableToken[nextScreenMin])) {\n        throw new Error(`${screenMax}<=${nextScreenMin} fails : !(${indexableToken[screenMax]}<=${indexableToken[nextScreenMin]})`);\n      }\n    }\n  });\n  return token;\n};\nexport default function useResponsiveObserver() {\n  const [, token] = useToken();\n  const responsiveMap = getResponsiveMap(validateBreakpoints(token));\n  // To avoid repeat create instance, we add `useMemo` here.\n  return React.useMemo(() => {\n    const subscribers = new Map();\n    let subUid = -1;\n    let screens = {};\n    return {\n      matchHandlers: {},\n      dispatch(pointMap) {\n        screens = pointMap;\n        subscribers.forEach(func => func(screens));\n        return subscribers.size >= 1;\n      },\n      subscribe(func) {\n        if (!subscribers.size) this.register();\n        subUid += 1;\n        subscribers.set(subUid, func);\n        func(screens);\n        return subUid;\n      },\n      unsubscribe(paramToken) {\n        subscribers.delete(paramToken);\n        if (!subscribers.size) this.unregister();\n      },\n      unregister() {\n        Object.keys(responsiveMap).forEach(screen => {\n          const matchMediaQuery = responsiveMap[screen];\n          const handler = this.matchHandlers[matchMediaQuery];\n          handler === null || handler === void 0 ? void 0 : handler.mql.removeListener(handler === null || handler === void 0 ? void 0 : handler.listener);\n        });\n        subscribers.clear();\n      },\n      register() {\n        Object.keys(responsiveMap).forEach(screen => {\n          const matchMediaQuery = responsiveMap[screen];\n          const listener = _ref => {\n            let {\n              matches\n            } = _ref;\n            this.dispatch(Object.assign(Object.assign({}, screens), {\n              [screen]: matches\n            }));\n          };\n          const mql = window.matchMedia(matchMediaQuery);\n          mql.addListener(listener);\n          this.matchHandlers[matchMediaQuery] = {\n            mql,\n            listener\n          };\n          listener(mql);\n        });\n      },\n      responsiveMap\n    };\n  }, [token]);\n}","import { createContext } from 'react';\nconst RowContext = /*#__PURE__*/createContext({});\nexport default RowContext;","var __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { ConfigContext } from '../config-provider';\nimport useFlexGapSupport from '../_util/hooks/useFlexGapSupport';\nimport useResponsiveObserver, { responsiveArray } from '../_util/responsiveObserver';\nimport RowContext from './RowContext';\nimport { useRowStyle } from './style';\nconst RowAligns = ['top', 'middle', 'bottom', 'stretch'];\nconst RowJustify = ['start', 'end', 'center', 'space-around', 'space-between', 'space-evenly'];\nfunction useMergePropByScreen(oriProp, screen) {\n  const [prop, setProp] = React.useState(typeof oriProp === 'string' ? oriProp : '');\n  const calcMergeAlignOrJustify = () => {\n    if (typeof oriProp === 'string') {\n      setProp(oriProp);\n    }\n    if (typeof oriProp !== 'object') {\n      return;\n    }\n    for (let i = 0; i < responsiveArray.length; i++) {\n      const breakpoint = responsiveArray[i];\n      // if do not match, do nothing\n      if (!screen[breakpoint]) continue;\n      const curVal = oriProp[breakpoint];\n      if (curVal !== undefined) {\n        setProp(curVal);\n        return;\n      }\n    }\n  };\n  React.useEffect(() => {\n    calcMergeAlignOrJustify();\n  }, [JSON.stringify(oriProp), screen]);\n  return prop;\n}\nconst Row = /*#__PURE__*/React.forwardRef((props, ref) => {\n  const {\n      prefixCls: customizePrefixCls,\n      justify,\n      align,\n      className,\n      style,\n      children,\n      gutter = 0,\n      wrap\n    } = props,\n    others = __rest(props, [\"prefixCls\", \"justify\", \"align\", \"className\", \"style\", \"children\", \"gutter\", \"wrap\"]);\n  const {\n    getPrefixCls,\n    direction\n  } = React.useContext(ConfigContext);\n  const [screens, setScreens] = React.useState({\n    xs: true,\n    sm: true,\n    md: true,\n    lg: true,\n    xl: true,\n    xxl: true\n  });\n  // to save screens info when responsiveObserve callback had been call\n  const [curScreens, setCurScreens] = React.useState({\n    xs: false,\n    sm: false,\n    md: false,\n    lg: false,\n    xl: false,\n    xxl: false\n  });\n  // ================================== calc responsive data ==================================\n  const mergeAlign = useMergePropByScreen(align, curScreens);\n  const mergeJustify = useMergePropByScreen(justify, curScreens);\n  const supportFlexGap = useFlexGapSupport();\n  const gutterRef = React.useRef(gutter);\n  const responsiveObserver = useResponsiveObserver();\n  // ================================== Effect ==================================\n  React.useEffect(() => {\n    const token = responsiveObserver.subscribe(screen => {\n      setCurScreens(screen);\n      const currentGutter = gutterRef.current || 0;\n      if (!Array.isArray(currentGutter) && typeof currentGutter === 'object' || Array.isArray(currentGutter) && (typeof currentGutter[0] === 'object' || typeof currentGutter[1] === 'object')) {\n        setScreens(screen);\n      }\n    });\n    return () => responsiveObserver.unsubscribe(token);\n  }, []);\n  // ================================== Render ==================================\n  const getGutter = () => {\n    const results = [undefined, undefined];\n    const normalizedGutter = Array.isArray(gutter) ? gutter : [gutter, undefined];\n    normalizedGutter.forEach((g, index) => {\n      if (typeof g === 'object') {\n        for (let i = 0; i < responsiveArray.length; i++) {\n          const breakpoint = responsiveArray[i];\n          if (screens[breakpoint] && g[breakpoint] !== undefined) {\n            results[index] = g[breakpoint];\n            break;\n          }\n        }\n      } else {\n        results[index] = g;\n      }\n    });\n    return results;\n  };\n  const prefixCls = getPrefixCls('row', customizePrefixCls);\n  const [wrapSSR, hashId] = useRowStyle(prefixCls);\n  const gutters = getGutter();\n  const classes = classNames(prefixCls, {\n    [`${prefixCls}-no-wrap`]: wrap === false,\n    [`${prefixCls}-${mergeJustify}`]: mergeJustify,\n    [`${prefixCls}-${mergeAlign}`]: mergeAlign,\n    [`${prefixCls}-rtl`]: direction === 'rtl'\n  }, className, hashId);\n  // Add gutter related style\n  const rowStyle = {};\n  const horizontalGutter = gutters[0] != null && gutters[0] > 0 ? gutters[0] / -2 : undefined;\n  const verticalGutter = gutters[1] != null && gutters[1] > 0 ? gutters[1] / -2 : undefined;\n  if (horizontalGutter) {\n    rowStyle.marginLeft = horizontalGutter;\n    rowStyle.marginRight = horizontalGutter;\n  }\n  if (supportFlexGap) {\n    // Set gap direct if flex gap support\n    [, rowStyle.rowGap] = gutters;\n  } else if (verticalGutter) {\n    rowStyle.marginTop = verticalGutter;\n    rowStyle.marginBottom = verticalGutter;\n  }\n  // \"gutters\" is a new array in each rendering phase, it'll make 'React.useMemo' effectless.\n  // So we deconstruct \"gutters\" variable here.\n  const [gutterH, gutterV] = gutters;\n  const rowContext = React.useMemo(() => ({\n    gutter: [gutterH, gutterV],\n    wrap,\n    supportFlexGap\n  }), [gutterH, gutterV, wrap, supportFlexGap]);\n  return wrapSSR( /*#__PURE__*/React.createElement(RowContext.Provider, {\n    value: rowContext\n  }, /*#__PURE__*/React.createElement(\"div\", Object.assign({}, others, {\n    className: classes,\n    style: Object.assign(Object.assign({}, rowStyle), style),\n    ref: ref\n  }), children)));\n});\nif (process.env.NODE_ENV !== 'production') {\n  Row.displayName = 'Row';\n}\nexport default Row;","import { genComponentStyleHook, mergeToken } from '../../theme/internal';\n// ============================== Row-Shared ==============================\nconst genGridRowStyle = token => {\n  const {\n    componentCls\n  } = token;\n  return {\n    // Grid system\n    [componentCls]: {\n      display: 'flex',\n      flexFlow: 'row wrap',\n      minWidth: 0,\n      '&::before, &::after': {\n        display: 'flex'\n      },\n      '&-no-wrap': {\n        flexWrap: 'nowrap'\n      },\n      // The origin of the X-axis\n      '&-start': {\n        justifyContent: 'flex-start'\n      },\n      // The center of the X-axis\n      '&-center': {\n        justifyContent: 'center'\n      },\n      // The opposite of the X-axis\n      '&-end': {\n        justifyContent: 'flex-end'\n      },\n      '&-space-between': {\n        justifyContent: 'space-between'\n      },\n      '&-space-around': {\n        justifyContent: 'space-around'\n      },\n      '&-space-evenly': {\n        justifyContent: 'space-evenly'\n      },\n      // Align at the top\n      '&-top': {\n        alignItems: 'flex-start'\n      },\n      // Align at the center\n      '&-middle': {\n        alignItems: 'center'\n      },\n      '&-bottom': {\n        alignItems: 'flex-end'\n      }\n    }\n  };\n};\n// ============================== Col-Shared ==============================\nconst genGridColStyle = token => {\n  const {\n    componentCls\n  } = token;\n  return {\n    // Grid system\n    [componentCls]: {\n      position: 'relative',\n      maxWidth: '100%',\n      // Prevent columns from collapsing when empty\n      minHeight: 1\n    }\n  };\n};\nconst genLoopGridColumnsStyle = (token, sizeCls) => {\n  const {\n    componentCls,\n    gridColumns\n  } = token;\n  const gridColumnsStyle = {};\n  for (let i = gridColumns; i >= 0; i--) {\n    if (i === 0) {\n      gridColumnsStyle[`${componentCls}${sizeCls}-${i}`] = {\n        display: 'none'\n      };\n      gridColumnsStyle[`${componentCls}-push-${i}`] = {\n        insetInlineStart: 'auto'\n      };\n      gridColumnsStyle[`${componentCls}-pull-${i}`] = {\n        insetInlineEnd: 'auto'\n      };\n      gridColumnsStyle[`${componentCls}${sizeCls}-push-${i}`] = {\n        insetInlineStart: 'auto'\n      };\n      gridColumnsStyle[`${componentCls}${sizeCls}-pull-${i}`] = {\n        insetInlineEnd: 'auto'\n      };\n      gridColumnsStyle[`${componentCls}${sizeCls}-offset-${i}`] = {\n        marginInlineStart: 0\n      };\n      gridColumnsStyle[`${componentCls}${sizeCls}-order-${i}`] = {\n        order: 0\n      };\n    } else {\n      gridColumnsStyle[`${componentCls}${sizeCls}-${i}`] = {\n        display: 'block',\n        flex: `0 0 ${i / gridColumns * 100}%`,\n        maxWidth: `${i / gridColumns * 100}%`\n      };\n      gridColumnsStyle[`${componentCls}${sizeCls}-push-${i}`] = {\n        insetInlineStart: `${i / gridColumns * 100}%`\n      };\n      gridColumnsStyle[`${componentCls}${sizeCls}-pull-${i}`] = {\n        insetInlineEnd: `${i / gridColumns * 100}%`\n      };\n      gridColumnsStyle[`${componentCls}${sizeCls}-offset-${i}`] = {\n        marginInlineStart: `${i / gridColumns * 100}%`\n      };\n      gridColumnsStyle[`${componentCls}${sizeCls}-order-${i}`] = {\n        order: i\n      };\n    }\n  }\n  return gridColumnsStyle;\n};\nconst genGridStyle = (token, sizeCls) => genLoopGridColumnsStyle(token, sizeCls);\nconst genGridMediaStyle = (token, screenSize, sizeCls) => ({\n  [`@media (min-width: ${screenSize}px)`]: Object.assign({}, genGridStyle(token, sizeCls))\n});\n// ============================== Export ==============================\nexport const useRowStyle = genComponentStyleHook('Grid', token => [genGridRowStyle(token)]);\nexport const useColStyle = genComponentStyleHook('Grid', token => {\n  const gridToken = mergeToken(token, {\n    gridColumns: 24 // Row is divided into 24 parts in Grid\n  });\n\n  const gridMediaSizesMap = {\n    '-sm': gridToken.screenSMMin,\n    '-md': gridToken.screenMDMin,\n    '-lg': gridToken.screenLGMin,\n    '-xl': gridToken.screenXLMin,\n    '-xxl': gridToken.screenXXLMin\n  };\n  return [genGridColStyle(gridToken), genGridStyle(gridToken, ''), genGridStyle(gridToken, '-xs'), Object.keys(gridMediaSizesMap).map(key => genGridMediaStyle(gridToken, gridMediaSizesMap[key], key)).reduce((pre, cur) => Object.assign(Object.assign({}, pre), cur), {})];\n});","import * as React from 'react';\nimport LocaleContext from './context';\nimport defaultLocaleData from './en_US';\nconst useLocale = (componentName, defaultLocale) => {\n  const fullLocale = React.useContext(LocaleContext);\n  const getLocale = React.useMemo(() => {\n    var _a;\n    const locale = defaultLocale || defaultLocaleData[componentName];\n    const localeFromContext = (_a = fullLocale === null || fullLocale === void 0 ? void 0 : fullLocale[componentName]) !== null && _a !== void 0 ? _a : {};\n    return Object.assign(Object.assign({}, typeof locale === 'function' ? locale() : locale), localeFromContext || {});\n  }, [componentName, defaultLocale, fullLocale]);\n  const getLocaleCode = React.useMemo(() => {\n    const localeCode = fullLocale === null || fullLocale === void 0 ? void 0 : fullLocale.locale;\n    // Had use LocaleProvide but didn't set locale\n    if ((fullLocale === null || fullLocale === void 0 ? void 0 : fullLocale.exist) && !localeCode) {\n      return defaultLocaleData.locale;\n    }\n    return localeCode;\n  }, [fullLocale]);\n  return [getLocale, getLocaleCode];\n};\nexport default useLocale;","// This icon file is generated automatically.\nvar ReloadOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M909.1 209.3l-56.4 44.1C775.8 155.1 656.2 92 521.9 92 290 92 102.3 279.5 102 511.5 101.7 743.7 289.8 932 521.9 932c181.3 0 335.8-115 394.6-276.1 1.5-4.2-.7-8.9-4.9-10.3l-56.7-19.5a8 8 0 00-10.1 4.8c-1.8 5-3.8 10-5.9 14.9-17.3 41-42.1 77.8-73.7 109.4A344.77 344.77 0 01655.9 829c-42.3 17.9-87.4 27-133.8 27-46.5 0-91.5-9.1-133.8-27A341.5 341.5 0 01279 755.2a342.16 342.16 0 01-73.7-109.4c-17.9-42.4-27-87.4-27-133.9s9.1-91.5 27-133.9c17.3-41 42.1-77.8 73.7-109.4 31.6-31.6 68.4-56.4 109.3-73.8 42.3-17.9 87.4-27 133.8-27 46.5 0 91.5 9.1 133.8 27a341.5 341.5 0 01109.3 73.8c9.9 9.9 19.2 20.4 27.8 31.4l-60.2 47a8 8 0 003 14.1l175.6 43c5 1.2 9.9-2.6 9.9-7.7l.8-180.9c-.1-6.6-7.8-10.3-13-6.2z\" } }] }, \"name\": \"reload\", \"theme\": \"outlined\" };\nexport default ReloadOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport ReloadOutlinedSvg from \"@ant-design/icons-svg/es/asn/ReloadOutlined\";\nimport AntdIcon from '../components/AntdIcon';\nvar ReloadOutlined = function ReloadOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: ReloadOutlinedSvg\n  }));\n};\nif (process.env.NODE_ENV !== 'production') {\n  ReloadOutlined.displayName = 'ReloadOutlined';\n}\nexport default /*#__PURE__*/React.forwardRef(ReloadOutlined);","var __defProp = Object.defineProperty;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {}))\n    if (__hasOwnProp.call(b, prop))\n      __defNormalProp(a, prop, b[prop]);\n  if (__getOwnPropSymbols)\n    for (var prop of __getOwnPropSymbols(b)) {\n      if (__propIsEnum.call(b, prop))\n        __defNormalProp(a, prop, b[prop]);\n    }\n  return a;\n};\nvar __objRest = (source, exclude) => {\n  var target = {};\n  for (var prop in source)\n    if (__hasOwnProp.call(source, prop) && exclude.indexOf(prop) < 0)\n      target[prop] = source[prop];\n  if (source != null && __getOwnPropSymbols)\n    for (var prop of __getOwnPropSymbols(source)) {\n      if (exclude.indexOf(prop) < 0 && __propIsEnum.call(source, prop))\n        target[prop] = source[prop];\n    }\n  return target;\n};\n\n// src/index.tsx\nimport React, { useRef, useEffect, useState } from \"react\";\n\n// src/third-party/qrcodegen/index.ts\n/**\n * @license QR Code generator library (TypeScript)\n * Copyright (c) Project Nayuki.\n * SPDX-License-Identifier: MIT\n */\nvar qrcodegen;\n((qrcodegen2) => {\n  const _QrCode = class {\n    constructor(version, errorCorrectionLevel, dataCodewords, msk) {\n      this.version = version;\n      this.errorCorrectionLevel = errorCorrectionLevel;\n      this.modules = [];\n      this.isFunction = [];\n      if (version < _QrCode.MIN_VERSION || version > _QrCode.MAX_VERSION)\n        throw new RangeError(\"Version value out of range\");\n      if (msk < -1 || msk > 7)\n        throw new RangeError(\"Mask value out of range\");\n      this.size = version * 4 + 17;\n      let row = [];\n      for (let i = 0; i < this.size; i++)\n        row.push(false);\n      for (let i = 0; i < this.size; i++) {\n        this.modules.push(row.slice());\n        this.isFunction.push(row.slice());\n      }\n      this.drawFunctionPatterns();\n      const allCodewords = this.addEccAndInterleave(dataCodewords);\n      this.drawCodewords(allCodewords);\n      if (msk == -1) {\n        let minPenalty = 1e9;\n        for (let i = 0; i < 8; i++) {\n          this.applyMask(i);\n          this.drawFormatBits(i);\n          const penalty = this.getPenaltyScore();\n          if (penalty < minPenalty) {\n            msk = i;\n            minPenalty = penalty;\n          }\n          this.applyMask(i);\n        }\n      }\n      assert(0 <= msk && msk <= 7);\n      this.mask = msk;\n      this.applyMask(msk);\n      this.drawFormatBits(msk);\n      this.isFunction = [];\n    }\n    static encodeText(text, ecl) {\n      const segs = qrcodegen2.QrSegment.makeSegments(text);\n      return _QrCode.encodeSegments(segs, ecl);\n    }\n    static encodeBinary(data, ecl) {\n      const seg = qrcodegen2.QrSegment.makeBytes(data);\n      return _QrCode.encodeSegments([seg], ecl);\n    }\n    static encodeSegments(segs, ecl, minVersion = 1, maxVersion = 40, mask = -1, boostEcl = true) {\n      if (!(_QrCode.MIN_VERSION <= minVersion && minVersion <= maxVersion && maxVersion <= _QrCode.MAX_VERSION) || mask < -1 || mask > 7)\n        throw new RangeError(\"Invalid value\");\n      let version;\n      let dataUsedBits;\n      for (version = minVersion; ; version++) {\n        const dataCapacityBits2 = _QrCode.getNumDataCodewords(version, ecl) * 8;\n        const usedBits = QrSegment.getTotalBits(segs, version);\n        if (usedBits <= dataCapacityBits2) {\n          dataUsedBits = usedBits;\n          break;\n        }\n        if (version >= maxVersion)\n          throw new RangeError(\"Data too long\");\n      }\n      for (const newEcl of [_QrCode.Ecc.MEDIUM, _QrCode.Ecc.QUARTILE, _QrCode.Ecc.HIGH]) {\n        if (boostEcl && dataUsedBits <= _QrCode.getNumDataCodewords(version, newEcl) * 8)\n          ecl = newEcl;\n      }\n      let bb = [];\n      for (const seg of segs) {\n        appendBits(seg.mode.modeBits, 4, bb);\n        appendBits(seg.numChars, seg.mode.numCharCountBits(version), bb);\n        for (const b of seg.getData())\n          bb.push(b);\n      }\n      assert(bb.length == dataUsedBits);\n      const dataCapacityBits = _QrCode.getNumDataCodewords(version, ecl) * 8;\n      assert(bb.length <= dataCapacityBits);\n      appendBits(0, Math.min(4, dataCapacityBits - bb.length), bb);\n      appendBits(0, (8 - bb.length % 8) % 8, bb);\n      assert(bb.length % 8 == 0);\n      for (let padByte = 236; bb.length < dataCapacityBits; padByte ^= 236 ^ 17)\n        appendBits(padByte, 8, bb);\n      let dataCodewords = [];\n      while (dataCodewords.length * 8 < bb.length)\n        dataCodewords.push(0);\n      bb.forEach((b, i) => dataCodewords[i >>> 3] |= b << 7 - (i & 7));\n      return new _QrCode(version, ecl, dataCodewords, mask);\n    }\n    getModule(x, y) {\n      return 0 <= x && x < this.size && 0 <= y && y < this.size && this.modules[y][x];\n    }\n    getModules() {\n      return this.modules;\n    }\n    drawFunctionPatterns() {\n      for (let i = 0; i < this.size; i++) {\n        this.setFunctionModule(6, i, i % 2 == 0);\n        this.setFunctionModule(i, 6, i % 2 == 0);\n      }\n      this.drawFinderPattern(3, 3);\n      this.drawFinderPattern(this.size - 4, 3);\n      this.drawFinderPattern(3, this.size - 4);\n      const alignPatPos = this.getAlignmentPatternPositions();\n      const numAlign = alignPatPos.length;\n      for (let i = 0; i < numAlign; i++) {\n        for (let j = 0; j < numAlign; j++) {\n          if (!(i == 0 && j == 0 || i == 0 && j == numAlign - 1 || i == numAlign - 1 && j == 0))\n            this.drawAlignmentPattern(alignPatPos[i], alignPatPos[j]);\n        }\n      }\n      this.drawFormatBits(0);\n      this.drawVersion();\n    }\n    drawFormatBits(mask) {\n      const data = this.errorCorrectionLevel.formatBits << 3 | mask;\n      let rem = data;\n      for (let i = 0; i < 10; i++)\n        rem = rem << 1 ^ (rem >>> 9) * 1335;\n      const bits = (data << 10 | rem) ^ 21522;\n      assert(bits >>> 15 == 0);\n      for (let i = 0; i <= 5; i++)\n        this.setFunctionModule(8, i, getBit(bits, i));\n      this.setFunctionModule(8, 7, getBit(bits, 6));\n      this.setFunctionModule(8, 8, getBit(bits, 7));\n      this.setFunctionModule(7, 8, getBit(bits, 8));\n      for (let i = 9; i < 15; i++)\n        this.setFunctionModule(14 - i, 8, getBit(bits, i));\n      for (let i = 0; i < 8; i++)\n        this.setFunctionModule(this.size - 1 - i, 8, getBit(bits, i));\n      for (let i = 8; i < 15; i++)\n        this.setFunctionModule(8, this.size - 15 + i, getBit(bits, i));\n      this.setFunctionModule(8, this.size - 8, true);\n    }\n    drawVersion() {\n      if (this.version < 7)\n        return;\n      let rem = this.version;\n      for (let i = 0; i < 12; i++)\n        rem = rem << 1 ^ (rem >>> 11) * 7973;\n      const bits = this.version << 12 | rem;\n      assert(bits >>> 18 == 0);\n      for (let i = 0; i < 18; i++) {\n        const color = getBit(bits, i);\n        const a = this.size - 11 + i % 3;\n        const b = Math.floor(i / 3);\n        this.setFunctionModule(a, b, color);\n        this.setFunctionModule(b, a, color);\n      }\n    }\n    drawFinderPattern(x, y) {\n      for (let dy = -4; dy <= 4; dy++) {\n        for (let dx = -4; dx <= 4; dx++) {\n          const dist = Math.max(Math.abs(dx), Math.abs(dy));\n          const xx = x + dx;\n          const yy = y + dy;\n          if (0 <= xx && xx < this.size && 0 <= yy && yy < this.size)\n            this.setFunctionModule(xx, yy, dist != 2 && dist != 4);\n        }\n      }\n    }\n    drawAlignmentPattern(x, y) {\n      for (let dy = -2; dy <= 2; dy++) {\n        for (let dx = -2; dx <= 2; dx++)\n          this.setFunctionModule(x + dx, y + dy, Math.max(Math.abs(dx), Math.abs(dy)) != 1);\n      }\n    }\n    setFunctionModule(x, y, isDark) {\n      this.modules[y][x] = isDark;\n      this.isFunction[y][x] = true;\n    }\n    addEccAndInterleave(data) {\n      const ver = this.version;\n      const ecl = this.errorCorrectionLevel;\n      if (data.length != _QrCode.getNumDataCodewords(ver, ecl))\n        throw new RangeError(\"Invalid argument\");\n      const numBlocks = _QrCode.NUM_ERROR_CORRECTION_BLOCKS[ecl.ordinal][ver];\n      const blockEccLen = _QrCode.ECC_CODEWORDS_PER_BLOCK[ecl.ordinal][ver];\n      const rawCodewords = Math.floor(_QrCode.getNumRawDataModules(ver) / 8);\n      const numShortBlocks = numBlocks - rawCodewords % numBlocks;\n      const shortBlockLen = Math.floor(rawCodewords / numBlocks);\n      let blocks = [];\n      const rsDiv = _QrCode.reedSolomonComputeDivisor(blockEccLen);\n      for (let i = 0, k = 0; i < numBlocks; i++) {\n        let dat = data.slice(k, k + shortBlockLen - blockEccLen + (i < numShortBlocks ? 0 : 1));\n        k += dat.length;\n        const ecc = _QrCode.reedSolomonComputeRemainder(dat, rsDiv);\n        if (i < numShortBlocks)\n          dat.push(0);\n        blocks.push(dat.concat(ecc));\n      }\n      let result = [];\n      for (let i = 0; i < blocks[0].length; i++) {\n        blocks.forEach((block, j) => {\n          if (i != shortBlockLen - blockEccLen || j >= numShortBlocks)\n            result.push(block[i]);\n        });\n      }\n      assert(result.length == rawCodewords);\n      return result;\n    }\n    drawCodewords(data) {\n      if (data.length != Math.floor(_QrCode.getNumRawDataModules(this.version) / 8))\n        throw new RangeError(\"Invalid argument\");\n      let i = 0;\n      for (let right = this.size - 1; right >= 1; right -= 2) {\n        if (right == 6)\n          right = 5;\n        for (let vert = 0; vert < this.size; vert++) {\n          for (let j = 0; j < 2; j++) {\n            const x = right - j;\n            const upward = (right + 1 & 2) == 0;\n            const y = upward ? this.size - 1 - vert : vert;\n            if (!this.isFunction[y][x] && i < data.length * 8) {\n              this.modules[y][x] = getBit(data[i >>> 3], 7 - (i & 7));\n              i++;\n            }\n          }\n        }\n      }\n      assert(i == data.length * 8);\n    }\n    applyMask(mask) {\n      if (mask < 0 || mask > 7)\n        throw new RangeError(\"Mask value out of range\");\n      for (let y = 0; y < this.size; y++) {\n        for (let x = 0; x < this.size; x++) {\n          let invert;\n          switch (mask) {\n            case 0:\n              invert = (x + y) % 2 == 0;\n              break;\n            case 1:\n              invert = y % 2 == 0;\n              break;\n            case 2:\n              invert = x % 3 == 0;\n              break;\n            case 3:\n              invert = (x + y) % 3 == 0;\n              break;\n            case 4:\n              invert = (Math.floor(x / 3) + Math.floor(y / 2)) % 2 == 0;\n              break;\n            case 5:\n              invert = x * y % 2 + x * y % 3 == 0;\n              break;\n            case 6:\n              invert = (x * y % 2 + x * y % 3) % 2 == 0;\n              break;\n            case 7:\n              invert = ((x + y) % 2 + x * y % 3) % 2 == 0;\n              break;\n            default:\n              throw new Error(\"Unreachable\");\n          }\n          if (!this.isFunction[y][x] && invert)\n            this.modules[y][x] = !this.modules[y][x];\n        }\n      }\n    }\n    getPenaltyScore() {\n      let result = 0;\n      for (let y = 0; y < this.size; y++) {\n        let runColor = false;\n        let runX = 0;\n        let runHistory = [0, 0, 0, 0, 0, 0, 0];\n        for (let x = 0; x < this.size; x++) {\n          if (this.modules[y][x] == runColor) {\n            runX++;\n            if (runX == 5)\n              result += _QrCode.PENALTY_N1;\n            else if (runX > 5)\n              result++;\n          } else {\n            this.finderPenaltyAddHistory(runX, runHistory);\n            if (!runColor)\n              result += this.finderPenaltyCountPatterns(runHistory) * _QrCode.PENALTY_N3;\n            runColor = this.modules[y][x];\n            runX = 1;\n          }\n        }\n        result += this.finderPenaltyTerminateAndCount(runColor, runX, runHistory) * _QrCode.PENALTY_N3;\n      }\n      for (let x = 0; x < this.size; x++) {\n        let runColor = false;\n        let runY = 0;\n        let runHistory = [0, 0, 0, 0, 0, 0, 0];\n        for (let y = 0; y < this.size; y++) {\n          if (this.modules[y][x] == runColor) {\n            runY++;\n            if (runY == 5)\n              result += _QrCode.PENALTY_N1;\n            else if (runY > 5)\n              result++;\n          } else {\n            this.finderPenaltyAddHistory(runY, runHistory);\n            if (!runColor)\n              result += this.finderPenaltyCountPatterns(runHistory) * _QrCode.PENALTY_N3;\n            runColor = this.modules[y][x];\n            runY = 1;\n          }\n        }\n        result += this.finderPenaltyTerminateAndCount(runColor, runY, runHistory) * _QrCode.PENALTY_N3;\n      }\n      for (let y = 0; y < this.size - 1; y++) {\n        for (let x = 0; x < this.size - 1; x++) {\n          const color = this.modules[y][x];\n          if (color == this.modules[y][x + 1] && color == this.modules[y + 1][x] && color == this.modules[y + 1][x + 1])\n            result += _QrCode.PENALTY_N2;\n        }\n      }\n      let dark = 0;\n      for (const row of this.modules)\n        dark = row.reduce((sum, color) => sum + (color ? 1 : 0), dark);\n      const total = this.size * this.size;\n      const k = Math.ceil(Math.abs(dark * 20 - total * 10) / total) - 1;\n      assert(0 <= k && k <= 9);\n      result += k * _QrCode.PENALTY_N4;\n      assert(0 <= result && result <= 2568888);\n      return result;\n    }\n    getAlignmentPatternPositions() {\n      if (this.version == 1)\n        return [];\n      else {\n        const numAlign = Math.floor(this.version / 7) + 2;\n        const step = this.version == 32 ? 26 : Math.ceil((this.version * 4 + 4) / (numAlign * 2 - 2)) * 2;\n        let result = [6];\n        for (let pos = this.size - 7; result.length < numAlign; pos -= step)\n          result.splice(1, 0, pos);\n        return result;\n      }\n    }\n    static getNumRawDataModules(ver) {\n      if (ver < _QrCode.MIN_VERSION || ver > _QrCode.MAX_VERSION)\n        throw new RangeError(\"Version number out of range\");\n      let result = (16 * ver + 128) * ver + 64;\n      if (ver >= 2) {\n        const numAlign = Math.floor(ver / 7) + 2;\n        result -= (25 * numAlign - 10) * numAlign - 55;\n        if (ver >= 7)\n          result -= 36;\n      }\n      assert(208 <= result && result <= 29648);\n      return result;\n    }\n    static getNumDataCodewords(ver, ecl) {\n      return Math.floor(_QrCode.getNumRawDataModules(ver) / 8) - _QrCode.ECC_CODEWORDS_PER_BLOCK[ecl.ordinal][ver] * _QrCode.NUM_ERROR_CORRECTION_BLOCKS[ecl.ordinal][ver];\n    }\n    static reedSolomonComputeDivisor(degree) {\n      if (degree < 1 || degree > 255)\n        throw new RangeError(\"Degree out of range\");\n      let result = [];\n      for (let i = 0; i < degree - 1; i++)\n        result.push(0);\n      result.push(1);\n      let root = 1;\n      for (let i = 0; i < degree; i++) {\n        for (let j = 0; j < result.length; j++) {\n          result[j] = _QrCode.reedSolomonMultiply(result[j], root);\n          if (j + 1 < result.length)\n            result[j] ^= result[j + 1];\n        }\n        root = _QrCode.reedSolomonMultiply(root, 2);\n      }\n      return result;\n    }\n    static reedSolomonComputeRemainder(data, divisor) {\n      let result = divisor.map((_) => 0);\n      for (const b of data) {\n        const factor = b ^ result.shift();\n        result.push(0);\n        divisor.forEach((coef, i) => result[i] ^= _QrCode.reedSolomonMultiply(coef, factor));\n      }\n      return result;\n    }\n    static reedSolomonMultiply(x, y) {\n      if (x >>> 8 != 0 || y >>> 8 != 0)\n        throw new RangeError(\"Byte out of range\");\n      let z = 0;\n      for (let i = 7; i >= 0; i--) {\n        z = z << 1 ^ (z >>> 7) * 285;\n        z ^= (y >>> i & 1) * x;\n      }\n      assert(z >>> 8 == 0);\n      return z;\n    }\n    finderPenaltyCountPatterns(runHistory) {\n      const n = runHistory[1];\n      assert(n <= this.size * 3);\n      const core = n > 0 && runHistory[2] == n && runHistory[3] == n * 3 && runHistory[4] == n && runHistory[5] == n;\n      return (core && runHistory[0] >= n * 4 && runHistory[6] >= n ? 1 : 0) + (core && runHistory[6] >= n * 4 && runHistory[0] >= n ? 1 : 0);\n    }\n    finderPenaltyTerminateAndCount(currentRunColor, currentRunLength, runHistory) {\n      if (currentRunColor) {\n        this.finderPenaltyAddHistory(currentRunLength, runHistory);\n        currentRunLength = 0;\n      }\n      currentRunLength += this.size;\n      this.finderPenaltyAddHistory(currentRunLength, runHistory);\n      return this.finderPenaltyCountPatterns(runHistory);\n    }\n    finderPenaltyAddHistory(currentRunLength, runHistory) {\n      if (runHistory[0] == 0)\n        currentRunLength += this.size;\n      runHistory.pop();\n      runHistory.unshift(currentRunLength);\n    }\n  };\n  let QrCode = _QrCode;\n  QrCode.MIN_VERSION = 1;\n  QrCode.MAX_VERSION = 40;\n  QrCode.PENALTY_N1 = 3;\n  QrCode.PENALTY_N2 = 3;\n  QrCode.PENALTY_N3 = 40;\n  QrCode.PENALTY_N4 = 10;\n  QrCode.ECC_CODEWORDS_PER_BLOCK = [\n    [-1, 7, 10, 15, 20, 26, 18, 20, 24, 30, 18, 20, 24, 26, 30, 22, 24, 28, 30, 28, 28, 28, 28, 30, 30, 26, 28, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30],\n    [-1, 10, 16, 26, 18, 24, 16, 18, 22, 22, 26, 30, 22, 22, 24, 24, 28, 28, 26, 26, 26, 26, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28],\n    [-1, 13, 22, 18, 26, 18, 24, 18, 22, 20, 24, 28, 26, 24, 20, 30, 24, 28, 28, 26, 30, 28, 30, 30, 30, 30, 28, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30],\n    [-1, 17, 28, 22, 16, 22, 28, 26, 26, 24, 28, 24, 28, 22, 24, 24, 30, 28, 28, 26, 28, 30, 24, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30]\n  ];\n  QrCode.NUM_ERROR_CORRECTION_BLOCKS = [\n    [-1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 4, 4, 4, 4, 4, 6, 6, 6, 6, 7, 8, 8, 9, 9, 10, 12, 12, 12, 13, 14, 15, 16, 17, 18, 19, 19, 20, 21, 22, 24, 25],\n    [-1, 1, 1, 1, 2, 2, 4, 4, 4, 5, 5, 5, 8, 9, 9, 10, 10, 11, 13, 14, 16, 17, 17, 18, 20, 21, 23, 25, 26, 28, 29, 31, 33, 35, 37, 38, 40, 43, 45, 47, 49],\n    [-1, 1, 1, 2, 2, 4, 4, 6, 6, 8, 8, 8, 10, 12, 16, 12, 17, 16, 18, 21, 20, 23, 23, 25, 27, 29, 34, 34, 35, 38, 40, 43, 45, 48, 51, 53, 56, 59, 62, 65, 68],\n    [-1, 1, 1, 2, 4, 4, 4, 5, 6, 8, 8, 11, 11, 16, 16, 18, 16, 19, 21, 25, 25, 25, 34, 30, 32, 35, 37, 40, 42, 45, 48, 51, 54, 57, 60, 63, 66, 70, 74, 77, 81]\n  ];\n  qrcodegen2.QrCode = QrCode;\n  function appendBits(val, len, bb) {\n    if (len < 0 || len > 31 || val >>> len != 0)\n      throw new RangeError(\"Value out of range\");\n    for (let i = len - 1; i >= 0; i--)\n      bb.push(val >>> i & 1);\n  }\n  function getBit(x, i) {\n    return (x >>> i & 1) != 0;\n  }\n  function assert(cond) {\n    if (!cond)\n      throw new Error(\"Assertion error\");\n  }\n  const _QrSegment = class {\n    constructor(mode, numChars, bitData) {\n      this.mode = mode;\n      this.numChars = numChars;\n      this.bitData = bitData;\n      if (numChars < 0)\n        throw new RangeError(\"Invalid argument\");\n      this.bitData = bitData.slice();\n    }\n    static makeBytes(data) {\n      let bb = [];\n      for (const b of data)\n        appendBits(b, 8, bb);\n      return new _QrSegment(_QrSegment.Mode.BYTE, data.length, bb);\n    }\n    static makeNumeric(digits) {\n      if (!_QrSegment.isNumeric(digits))\n        throw new RangeError(\"String contains non-numeric characters\");\n      let bb = [];\n      for (let i = 0; i < digits.length; ) {\n        const n = Math.min(digits.length - i, 3);\n        appendBits(parseInt(digits.substr(i, n), 10), n * 3 + 1, bb);\n        i += n;\n      }\n      return new _QrSegment(_QrSegment.Mode.NUMERIC, digits.length, bb);\n    }\n    static makeAlphanumeric(text) {\n      if (!_QrSegment.isAlphanumeric(text))\n        throw new RangeError(\"String contains unencodable characters in alphanumeric mode\");\n      let bb = [];\n      let i;\n      for (i = 0; i + 2 <= text.length; i += 2) {\n        let temp = _QrSegment.ALPHANUMERIC_CHARSET.indexOf(text.charAt(i)) * 45;\n        temp += _QrSegment.ALPHANUMERIC_CHARSET.indexOf(text.charAt(i + 1));\n        appendBits(temp, 11, bb);\n      }\n      if (i < text.length)\n        appendBits(_QrSegment.ALPHANUMERIC_CHARSET.indexOf(text.charAt(i)), 6, bb);\n      return new _QrSegment(_QrSegment.Mode.ALPHANUMERIC, text.length, bb);\n    }\n    static makeSegments(text) {\n      if (text == \"\")\n        return [];\n      else if (_QrSegment.isNumeric(text))\n        return [_QrSegment.makeNumeric(text)];\n      else if (_QrSegment.isAlphanumeric(text))\n        return [_QrSegment.makeAlphanumeric(text)];\n      else\n        return [_QrSegment.makeBytes(_QrSegment.toUtf8ByteArray(text))];\n    }\n    static makeEci(assignVal) {\n      let bb = [];\n      if (assignVal < 0)\n        throw new RangeError(\"ECI assignment value out of range\");\n      else if (assignVal < 1 << 7)\n        appendBits(assignVal, 8, bb);\n      else if (assignVal < 1 << 14) {\n        appendBits(2, 2, bb);\n        appendBits(assignVal, 14, bb);\n      } else if (assignVal < 1e6) {\n        appendBits(6, 3, bb);\n        appendBits(assignVal, 21, bb);\n      } else\n        throw new RangeError(\"ECI assignment value out of range\");\n      return new _QrSegment(_QrSegment.Mode.ECI, 0, bb);\n    }\n    static isNumeric(text) {\n      return _QrSegment.NUMERIC_REGEX.test(text);\n    }\n    static isAlphanumeric(text) {\n      return _QrSegment.ALPHANUMERIC_REGEX.test(text);\n    }\n    getData() {\n      return this.bitData.slice();\n    }\n    static getTotalBits(segs, version) {\n      let result = 0;\n      for (const seg of segs) {\n        const ccbits = seg.mode.numCharCountBits(version);\n        if (seg.numChars >= 1 << ccbits)\n          return Infinity;\n        result += 4 + ccbits + seg.bitData.length;\n      }\n      return result;\n    }\n    static toUtf8ByteArray(str) {\n      str = encodeURI(str);\n      let result = [];\n      for (let i = 0; i < str.length; i++) {\n        if (str.charAt(i) != \"%\")\n          result.push(str.charCodeAt(i));\n        else {\n          result.push(parseInt(str.substr(i + 1, 2), 16));\n          i += 2;\n        }\n      }\n      return result;\n    }\n  };\n  let QrSegment = _QrSegment;\n  QrSegment.NUMERIC_REGEX = /^[0-9]*$/;\n  QrSegment.ALPHANUMERIC_REGEX = /^[A-Z0-9 $%*+.\\/:-]*$/;\n  QrSegment.ALPHANUMERIC_CHARSET = \"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ $%*+-./:\";\n  qrcodegen2.QrSegment = QrSegment;\n})(qrcodegen || (qrcodegen = {}));\n((qrcodegen2) => {\n  let QrCode;\n  ((QrCode2) => {\n    const _Ecc = class {\n      constructor(ordinal, formatBits) {\n        this.ordinal = ordinal;\n        this.formatBits = formatBits;\n      }\n    };\n    let Ecc = _Ecc;\n    Ecc.LOW = new _Ecc(0, 1);\n    Ecc.MEDIUM = new _Ecc(1, 0);\n    Ecc.QUARTILE = new _Ecc(2, 3);\n    Ecc.HIGH = new _Ecc(3, 2);\n    QrCode2.Ecc = Ecc;\n  })(QrCode = qrcodegen2.QrCode || (qrcodegen2.QrCode = {}));\n})(qrcodegen || (qrcodegen = {}));\n((qrcodegen2) => {\n  let QrSegment;\n  ((QrSegment2) => {\n    const _Mode = class {\n      constructor(modeBits, numBitsCharCount) {\n        this.modeBits = modeBits;\n        this.numBitsCharCount = numBitsCharCount;\n      }\n      numCharCountBits(ver) {\n        return this.numBitsCharCount[Math.floor((ver + 7) / 17)];\n      }\n    };\n    let Mode = _Mode;\n    Mode.NUMERIC = new _Mode(1, [10, 12, 14]);\n    Mode.ALPHANUMERIC = new _Mode(2, [9, 11, 13]);\n    Mode.BYTE = new _Mode(4, [8, 16, 16]);\n    Mode.KANJI = new _Mode(8, [8, 10, 12]);\n    Mode.ECI = new _Mode(7, [0, 0, 0]);\n    QrSegment2.Mode = Mode;\n  })(QrSegment = qrcodegen2.QrSegment || (qrcodegen2.QrSegment = {}));\n})(qrcodegen || (qrcodegen = {}));\nvar qrcodegen_default = qrcodegen;\n\n// src/index.tsx\n/**\n * @license qrcode.react\n * Copyright (c) Paul O'Shannessy\n * SPDX-License-Identifier: ISC\n */\nvar ERROR_LEVEL_MAP = {\n  L: qrcodegen_default.QrCode.Ecc.LOW,\n  M: qrcodegen_default.QrCode.Ecc.MEDIUM,\n  Q: qrcodegen_default.QrCode.Ecc.QUARTILE,\n  H: qrcodegen_default.QrCode.Ecc.HIGH\n};\nvar DEFAULT_SIZE = 128;\nvar DEFAULT_LEVEL = \"L\";\nvar DEFAULT_BGCOLOR = \"#FFFFFF\";\nvar DEFAULT_FGCOLOR = \"#000000\";\nvar DEFAULT_INCLUDEMARGIN = false;\nvar MARGIN_SIZE = 4;\nvar DEFAULT_IMG_SCALE = 0.1;\nfunction generatePath(modules, margin = 0) {\n  const ops = [];\n  modules.forEach(function(row, y) {\n    let start = null;\n    row.forEach(function(cell, x) {\n      if (!cell && start !== null) {\n        ops.push(`M${start + margin} ${y + margin}h${x - start}v1H${start + margin}z`);\n        start = null;\n        return;\n      }\n      if (x === row.length - 1) {\n        if (!cell) {\n          return;\n        }\n        if (start === null) {\n          ops.push(`M${x + margin},${y + margin} h1v1H${x + margin}z`);\n        } else {\n          ops.push(`M${start + margin},${y + margin} h${x + 1 - start}v1H${start + margin}z`);\n        }\n        return;\n      }\n      if (cell && start === null) {\n        start = x;\n      }\n    });\n  });\n  return ops.join(\"\");\n}\nfunction excavateModules(modules, excavation) {\n  return modules.slice().map((row, y) => {\n    if (y < excavation.y || y >= excavation.y + excavation.h) {\n      return row;\n    }\n    return row.map((cell, x) => {\n      if (x < excavation.x || x >= excavation.x + excavation.w) {\n        return cell;\n      }\n      return false;\n    });\n  });\n}\nfunction getImageSettings(cells, size, includeMargin, imageSettings) {\n  if (imageSettings == null) {\n    return null;\n  }\n  const margin = includeMargin ? MARGIN_SIZE : 0;\n  const numCells = cells.length + margin * 2;\n  const defaultSize = Math.floor(size * DEFAULT_IMG_SCALE);\n  const scale = numCells / size;\n  const w = (imageSettings.width || defaultSize) * scale;\n  const h = (imageSettings.height || defaultSize) * scale;\n  const x = imageSettings.x == null ? cells.length / 2 - w / 2 : imageSettings.x * scale;\n  const y = imageSettings.y == null ? cells.length / 2 - h / 2 : imageSettings.y * scale;\n  let excavation = null;\n  if (imageSettings.excavate) {\n    let floorX = Math.floor(x);\n    let floorY = Math.floor(y);\n    let ceilW = Math.ceil(w + x - floorX);\n    let ceilH = Math.ceil(h + y - floorY);\n    excavation = { x: floorX, y: floorY, w: ceilW, h: ceilH };\n  }\n  return { x, y, h, w, excavation };\n}\nvar SUPPORTS_PATH2D = function() {\n  try {\n    new Path2D().addPath(new Path2D());\n  } catch (e) {\n    return false;\n  }\n  return true;\n}();\nfunction QRCodeCanvas(props) {\n  const _a = props, {\n    value,\n    size = DEFAULT_SIZE,\n    level = DEFAULT_LEVEL,\n    bgColor = DEFAULT_BGCOLOR,\n    fgColor = DEFAULT_FGCOLOR,\n    includeMargin = DEFAULT_INCLUDEMARGIN,\n    style,\n    imageSettings\n  } = _a, otherProps = __objRest(_a, [\n    \"value\",\n    \"size\",\n    \"level\",\n    \"bgColor\",\n    \"fgColor\",\n    \"includeMargin\",\n    \"style\",\n    \"imageSettings\"\n  ]);\n  const imgSrc = imageSettings == null ? void 0 : imageSettings.src;\n  const _canvas = useRef(null);\n  const _image = useRef(null);\n  const [isImgLoaded, setIsImageLoaded] = useState(false);\n  useEffect(() => {\n    if (_canvas.current != null) {\n      const canvas = _canvas.current;\n      const ctx = canvas.getContext(\"2d\");\n      if (!ctx) {\n        return;\n      }\n      let cells = qrcodegen_default.QrCode.encodeText(value, ERROR_LEVEL_MAP[level]).getModules();\n      const margin = includeMargin ? MARGIN_SIZE : 0;\n      const numCells = cells.length + margin * 2;\n      const calculatedImageSettings = getImageSettings(cells, size, includeMargin, imageSettings);\n      const image = _image.current;\n      const haveImageToRender = calculatedImageSettings != null && image !== null && image.complete && image.naturalHeight !== 0 && image.naturalWidth !== 0;\n      if (haveImageToRender) {\n        if (calculatedImageSettings.excavation != null) {\n          cells = excavateModules(cells, calculatedImageSettings.excavation);\n        }\n      }\n      const pixelRatio = window.devicePixelRatio || 1;\n      canvas.height = canvas.width = size * pixelRatio;\n      const scale = size / numCells * pixelRatio;\n      ctx.scale(scale, scale);\n      ctx.fillStyle = bgColor;\n      ctx.fillRect(0, 0, numCells, numCells);\n      ctx.fillStyle = fgColor;\n      if (SUPPORTS_PATH2D) {\n        ctx.fill(new Path2D(generatePath(cells, margin)));\n      } else {\n        cells.forEach(function(row, rdx) {\n          row.forEach(function(cell, cdx) {\n            if (cell) {\n              ctx.fillRect(cdx + margin, rdx + margin, 1, 1);\n            }\n          });\n        });\n      }\n      if (haveImageToRender) {\n        ctx.drawImage(image, calculatedImageSettings.x + margin, calculatedImageSettings.y + margin, calculatedImageSettings.w, calculatedImageSettings.h);\n      }\n    }\n  });\n  useEffect(() => {\n    setIsImageLoaded(false);\n  }, [imgSrc]);\n  const canvasStyle = __spreadValues({ height: size, width: size }, style);\n  let img = null;\n  if (imgSrc != null) {\n    img = /* @__PURE__ */ React.createElement(\"img\", {\n      src: imgSrc,\n      key: imgSrc,\n      style: { display: \"none\" },\n      onLoad: () => {\n        setIsImageLoaded(true);\n      },\n      ref: _image\n    });\n  }\n  return /* @__PURE__ */ React.createElement(React.Fragment, null, /* @__PURE__ */ React.createElement(\"canvas\", __spreadValues({\n    style: canvasStyle,\n    height: size,\n    width: size,\n    ref: _canvas\n  }, otherProps)), img);\n}\nfunction QRCodeSVG(props) {\n  const _a = props, {\n    value,\n    size = DEFAULT_SIZE,\n    level = DEFAULT_LEVEL,\n    bgColor = DEFAULT_BGCOLOR,\n    fgColor = DEFAULT_FGCOLOR,\n    includeMargin = DEFAULT_INCLUDEMARGIN,\n    imageSettings\n  } = _a, otherProps = __objRest(_a, [\n    \"value\",\n    \"size\",\n    \"level\",\n    \"bgColor\",\n    \"fgColor\",\n    \"includeMargin\",\n    \"imageSettings\"\n  ]);\n  let cells = qrcodegen_default.QrCode.encodeText(value, ERROR_LEVEL_MAP[level]).getModules();\n  const margin = includeMargin ? MARGIN_SIZE : 0;\n  const numCells = cells.length + margin * 2;\n  const calculatedImageSettings = getImageSettings(cells, size, includeMargin, imageSettings);\n  let image = null;\n  if (imageSettings != null && calculatedImageSettings != null) {\n    if (calculatedImageSettings.excavation != null) {\n      cells = excavateModules(cells, calculatedImageSettings.excavation);\n    }\n    image = /* @__PURE__ */ React.createElement(\"image\", {\n      xlinkHref: imageSettings.src,\n      height: calculatedImageSettings.h,\n      width: calculatedImageSettings.w,\n      x: calculatedImageSettings.x + margin,\n      y: calculatedImageSettings.y + margin,\n      preserveAspectRatio: \"none\"\n    });\n  }\n  const fgPath = generatePath(cells, margin);\n  return /* @__PURE__ */ React.createElement(\"svg\", __spreadValues({\n    height: size,\n    width: size,\n    viewBox: `0 0 ${numCells} ${numCells}`\n  }, otherProps), /* @__PURE__ */ React.createElement(\"path\", {\n    fill: bgColor,\n    d: `M0,0 h${numCells}v${numCells}H0z`,\n    shapeRendering: \"crispEdges\"\n  }), /* @__PURE__ */ React.createElement(\"path\", {\n    fill: fgColor,\n    d: fgPath,\n    shapeRendering: \"crispEdges\"\n  }), image);\n}\nvar QRCode = (props) => {\n  const _a = props, { renderAs } = _a, otherProps = __objRest(_a, [\"renderAs\"]);\n  if (renderAs === \"svg\") {\n    return /* @__PURE__ */ React.createElement(QRCodeSVG, __spreadValues({}, otherProps));\n  }\n  return /* @__PURE__ */ React.createElement(QRCodeCanvas, __spreadValues({}, otherProps));\n};\nexport {\n  QRCodeCanvas,\n  QRCodeSVG,\n  QRCode as default\n};\n","import { mergeToken, genComponentStyleHook } from '../../theme/internal';\nimport { resetComponent } from '../../style';\nconst genQRCodeStyle = token => {\n  const {\n    componentCls\n  } = token;\n  return {\n    [componentCls]: Object.assign(Object.assign({}, resetComponent(token)), {\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      padding: token.paddingSM,\n      backgroundColor: token.colorWhite,\n      borderRadius: token.borderRadiusLG,\n      border: `${token.lineWidth}px ${token.lineType} ${token.colorSplit}`,\n      position: 'relative',\n      width: '100%',\n      height: '100%',\n      overflow: 'hidden',\n      [`& > ${componentCls}-mask`]: {\n        position: 'absolute',\n        insetBlockStart: 0,\n        insetInlineStart: 0,\n        zIndex: 10,\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center',\n        alignItems: 'center',\n        width: '100%',\n        height: '100%',\n        color: token.colorText,\n        lineHeight: token.lineHeight,\n        background: token.QRCodeMaskBackgroundColor,\n        textAlign: 'center',\n        [`& > ${componentCls}-expired`]: {\n          color: token.QRCodeExpiredTextColor\n        }\n      },\n      '&-icon': {\n        marginBlockEnd: token.marginXS,\n        fontSize: token.controlHeight\n      }\n    }),\n    [`${componentCls}-borderless`]: {\n      borderColor: 'transparent'\n    }\n  };\n};\nexport default genComponentStyleHook('QRCode', token => genQRCodeStyle(mergeToken(token, {\n  QRCodeExpiredTextColor: 'rgba(0, 0, 0, 0.88)',\n  QRCodeMaskBackgroundColor: 'rgba(255, 255, 255, 0.96)'\n})));","import { ReloadOutlined } from '@ant-design/icons';\nimport classNames from 'classnames';\nimport { QRCodeCanvas } from 'qrcode.react';\nimport React, { useContext, useMemo } from 'react';\nimport warning from '../_util/warning';\nimport Button from '../button';\nimport { ConfigContext } from '../config-provider';\nimport { useLocale } from '../locale';\nimport Spin from '../spin';\nimport theme from '../theme';\nimport useStyle from './style/index';\nconst {\n  useToken\n} = theme;\nconst QRCode = props => {\n  const {\n    value,\n    icon = '',\n    size = 160,\n    iconSize = 40,\n    color = '#000',\n    errorLevel = 'M',\n    status = 'active',\n    bordered = true,\n    onRefresh,\n    style,\n    className,\n    rootClassName,\n    prefixCls: customizePrefixCls,\n    bgColor = 'transparent'\n  } = props;\n  const {\n    getPrefixCls\n  } = useContext(ConfigContext);\n  const prefixCls = getPrefixCls('qrcode', customizePrefixCls);\n  const [wrapSSR, hashId] = useStyle(prefixCls);\n  const {\n    token\n  } = useToken();\n  const qrCodeProps = useMemo(() => {\n    const imageSettings = {\n      src: icon,\n      x: undefined,\n      y: undefined,\n      height: iconSize,\n      width: iconSize,\n      excavate: true\n    };\n    return {\n      value,\n      size: size - (token.paddingSM + token.lineWidth) * 2,\n      level: errorLevel,\n      bgColor,\n      fgColor: color,\n      imageSettings: icon ? imageSettings : undefined\n    };\n  }, [errorLevel, color, icon, iconSize, size, value, bgColor]);\n  const [locale] = useLocale('QRCode');\n  if (!value) {\n    if (process.env.NODE_ENV !== 'production') {\n      process.env.NODE_ENV !== \"production\" ? warning(false, 'QRCode', 'need to receive `value` props') : void 0;\n    }\n    return null;\n  }\n  if (process.env.NODE_ENV !== 'production') {\n    process.env.NODE_ENV !== \"production\" ? warning(!(icon && errorLevel === 'L'), 'QRCode', 'ErrorLevel `L` is not recommended to be used with `icon`, for scanning result would be affected by low level.') : void 0;\n  }\n  const cls = classNames(prefixCls, className, rootClassName, hashId, {\n    [`${prefixCls}-borderless`]: !bordered\n  });\n  return wrapSSR( /*#__PURE__*/React.createElement(\"div\", {\n    style: Object.assign(Object.assign({}, style), {\n      width: size,\n      height: size,\n      backgroundColor: bgColor\n    }),\n    className: cls\n  }, status !== 'active' && /*#__PURE__*/React.createElement(\"div\", {\n    className: `${prefixCls}-mask`\n  }, status === 'loading' && /*#__PURE__*/React.createElement(Spin, null), status === 'expired' && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"p\", {\n    className: `${prefixCls}-expired`\n  }, locale === null || locale === void 0 ? void 0 : locale.expired), onRefresh && /*#__PURE__*/React.createElement(Button, {\n    type: \"link\",\n    icon: /*#__PURE__*/React.createElement(ReloadOutlined, null),\n    onClick: onRefresh\n  }, locale === null || locale === void 0 ? void 0 : locale.refresh))), /*#__PURE__*/React.createElement(QRCodeCanvas, Object.assign({}, qrCodeProps))));\n};\nif (process.env.NODE_ENV !== 'production') {\n  QRCode.displayName = 'QRCode';\n}\nexport default QRCode;"],"names":["responsiveArray","getResponsiveMap","token","xs","screenXSMax","sm","screenSM","md","screenMD","lg","screenLG","xl","screenXL","xxl","screenXXL","validateBreakpoints","indexableToken","revBreakpoints","concat","reverse","forEach","breakpoint","i","breakpointUpper","toUpperCase","screenMin","screen","Error","length","screenMax","nextScreenMin","useResponsiveObserver","responsiveMap","subscribers","Map","subUid","screens","matchHandlers","dispatch","pointMap","func","size","subscribe","this","register","set","unsubscribe","paramToken","delete","unregister","Object","keys","matchMediaQuery","handler","mql","removeListener","listener","clear","_ref","matches","assign","window","matchMedia","addListener","createContext","__rest","s","e","t","p","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","propertyIsEnumerable","useMergePropByScreen","oriProp","prop","setProp","curVal","undefined","calcMergeAlignOrJustify","JSON","stringify","props","ref","prefixCls","customizePrefixCls","justify","align","className","style","children","gutter","wrap","others","getPrefixCls","direction","setScreens","curScreens","setCurScreens","mergeAlign","mergeJustify","supportFlexGap","gutterRef","responsiveObserver","currentGutter","current","Array","isArray","wrapSSR","hashId","gutters","results","g","index","getGutter","classes","rowStyle","horizontalGutter","verticalGutter","marginLeft","marginRight","rowGap","marginTop","marginBottom","gutterH","gutterV","rowContext","value","genGridRowStyle","componentCls","display","flexFlow","minWidth","flexWrap","justifyContent","alignItems","genGridColStyle","position","maxWidth","minHeight","genGridStyle","sizeCls","gridColumns","gridColumnsStyle","insetInlineStart","insetInlineEnd","marginInlineStart","order","flex","genLoopGridColumnsStyle","useRowStyle","useColStyle","gridToken","gridMediaSizesMap","screenSMMin","screenMDMin","screenLGMin","screenXLMin","screenXXLMin","map","key","screenSize","genGridMediaStyle","reduce","pre","cur","componentName","defaultLocale","fullLocale","_a","locale","localeFromContext","localeCode","exist","AntdIcon","icon","qrcodegen","__defProp","defineProperty","__getOwnPropSymbols","__hasOwnProp","__propIsEnum","__defNormalProp","obj","enumerable","configurable","writable","__spreadValues","a","b","__objRest","source","exclude","target","qrcodegen2","_QrCode","constructor","version","errorCorrectionLevel","dataCodewords","msk","modules","isFunction","MIN_VERSION","MAX_VERSION","RangeError","row","push","slice","drawFunctionPatterns","allCodewords","addEccAndInterleave","drawCodewords","minPenalty","applyMask","drawFormatBits","penalty","getPenaltyScore","assert","mask","static","text","ecl","segs","QrSegment","makeSegments","encodeSegments","data","seg","makeBytes","minVersion","maxVersion","boostEcl","dataUsedBits","dataCapacityBits2","getNumDataCodewords","usedBits","getTotalBits","newEcl","Ecc","MEDIUM","QUARTILE","HIGH","bb","appendBits","mode","modeBits","numChars","numCharCountBits","getData","dataCapacityBits","Math","min","padByte","getModule","x","y","getModules","setFunctionModule","drawFinderPattern","alignPatPos","getAlignmentPatternPositions","numAlign","j","drawAlignmentPattern","drawVersion","formatBits","rem","bits","getBit","color","floor","dy","dx","dist","max","abs","xx","yy","isDark","ver","numBlocks","NUM_ERROR_CORRECTION_BLOCKS","ordinal","blockEccLen","ECC_CODEWORDS_PER_BLOCK","rawCodewords","getNumRawDataModules","numShortBlocks","shortBlockLen","blocks","rsDiv","reedSolomonComputeDivisor","k","dat","ecc","reedSolomonComputeRemainder","result","block","right","vert","invert","runColor","runX","runHistory","PENALTY_N1","finderPenaltyAddHistory","finderPenaltyCountPatterns","PENALTY_N3","finderPenaltyTerminateAndCount","runY","PENALTY_N2","dark","sum","total","ceil","PENALTY_N4","step","pos","splice","degree","root","reedSolomonMultiply","divisor","_","factor","shift","coef","z","n","core","currentRunColor","currentRunLength","pop","unshift","QrCode","val","len","cond","_QrSegment","bitData","Mode","BYTE","digits","isNumeric","parseInt","substr","NUMERIC","isAlphanumeric","temp","ALPHANUMERIC_CHARSET","charAt","ALPHANUMERIC","makeNumeric","makeAlphanumeric","toUtf8ByteArray","assignVal","ECI","NUMERIC_REGEX","test","ALPHANUMERIC_REGEX","ccbits","Infinity","str","encodeURI","charCodeAt","QrCode2","_Ecc","LOW","QrSegment2","_Mode","numBitsCharCount","KANJI","qrcodegen_default","ERROR_LEVEL_MAP","L","M","Q","H","DEFAULT_SIZE","DEFAULT_LEVEL","DEFAULT_BGCOLOR","DEFAULT_FGCOLOR","DEFAULT_INCLUDEMARGIN","MARGIN_SIZE","DEFAULT_IMG_SCALE","generatePath","margin","ops","start","cell","join","excavateModules","excavation","h","w","getImageSettings","cells","includeMargin","imageSettings","numCells","defaultSize","scale","width","height","excavate","floorX","floorY","SUPPORTS_PATH2D","Path2D","addPath","QRCodeCanvas","level","bgColor","fgColor","otherProps","imgSrc","src","_canvas","useRef","_image","isImgLoaded","setIsImageLoaded","useState","useEffect","canvas","ctx","getContext","encodeText","calculatedImageSettings","image","haveImageToRender","complete","naturalHeight","naturalWidth","pixelRatio","devicePixelRatio","fillStyle","fillRect","fill","rdx","cdx","drawImage","canvasStyle","img","onLoad","genComponentStyleHook","padding","paddingSM","backgroundColor","colorWhite","borderRadius","borderRadiusLG","border","lineWidth","lineType","colorSplit","overflow","insetBlockStart","zIndex","flexDirection","colorText","lineHeight","background","QRCodeMaskBackgroundColor","textAlign","QRCodeExpiredTextColor","marginBlockEnd","marginXS","fontSize","controlHeight","borderColor","genQRCodeStyle","useToken","theme","iconSize","errorLevel","status","bordered","onRefresh","rootClassName","useContext","qrCodeProps","useMemo","useLocale","cls","expired","type","onClick","refresh"],"sourceRoot":""}