{"version":3,"file":"9530.renderer.js","mappings":"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","sources":["webpack://magic-tools/./node_modules/@ant-design/icons-svg/es/asn/CloseOutlined.js","webpack://magic-tools/./node_modules/@ant-design/icons/es/icons/CloseOutlined.js","webpack://magic-tools/./node_modules/antd/es/col/index.js","webpack://magic-tools/./node_modules/antd/es/row/index.js","webpack://magic-tools/./src/renderer/App/ByteConvert/data.ts","webpack://magic-tools/./src/renderer/App/ByteConvert/index.tsx","webpack://magic-tools/./src/renderer/App/ByteConvert/lib.ts","webpack://magic-tools/./src/renderer/lib/index.ts"],"sourcesContent":["// This icon file is generated automatically.\nvar CloseOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M563.8 512l262.5-312.9c4.4-5.2.7-13.1-6.1-13.1h-79.8c-4.7 0-9.2 2.1-12.3 5.7L511.6 449.8 295.1 191.7c-3-3.6-7.5-5.7-12.3-5.7H203c-6.8 0-10.5 7.9-6.1 13.1L459.4 512 196.9 824.9A7.95 7.95 0 00203 838h79.8c4.7 0 9.2-2.1 12.3-5.7l216.5-258.1 216.5 258.1c3 3.6 7.5 5.7 12.3 5.7h79.8c6.8 0 10.5-7.9 6.1-13.1L563.8 512z\" } }] }, \"name\": \"close\", \"theme\": \"outlined\" };\nexport default CloseOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport CloseOutlinedSvg from \"@ant-design/icons-svg/es/asn/CloseOutlined\";\nimport AntdIcon from '../components/AntdIcon';\nvar CloseOutlined = function CloseOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: CloseOutlinedSvg\n  }));\n};\nif (process.env.NODE_ENV !== 'production') {\n  CloseOutlined.displayName = 'CloseOutlined';\n}\nexport default /*#__PURE__*/React.forwardRef(CloseOutlined);","import { Col } from '../grid';\nexport default Col;","import { Row } from '../grid';\nexport default Row;","export const typeList = [\n  { label: 'B', value: 'B', placeholder: '字节 byte' },\n  { label: 'KB', value: 'KB', placeholder: '千字节 Kilo Byte' },\n  { label: 'MB', value: 'MB', placeholder: '兆字节 Mega Byte' },\n  { label: 'GB', value: 'GB', placeholder: '吉字节 Giga Byte' },\n  { label: 'TB', value: 'TB', placeholder: '太字节 Trillion Byte' },\n  { label: 'PB', value: 'PB', placeholder: '拍字节 Peta Byte' },\n  { label: 'EB', value: 'EB', placeholder: '艾字节 Exa Byte' },\n  { label: 'ZB', value: 'ZB', placeholder: '泽字节 Zetta Byte' },\n  { label: 'YB', value: 'YB', placeholder: '尧字节 Yotta Byte' },\n];\n\nexport const emptyResult :ByteConvertResult = {\n  \"b\": \"\",\n  \"kb\": \"\",\n  \"mb\": \"\",\n  \"gb\": \"\",\n  \"tb\": \"\",\n  \"pb\": \"\",\n  \"eb\": \"\",\n  \"zb\": \"\",\n  \"yb\": \"\",\n};\n\nexport type ByteConvertResult = {\n  \"b\": string,\n  \"kb\": string,\n  \"mb\": string,\n  \"gb\": string,\n  \"tb\": string,\n  \"pb\": string,\n  \"eb\": string,\n  \"zb\": string,\n  \"yb\": string,\n}\n","import { Checkbox, Form, Input, Divider, message, Space, Radio, Button, Row, Col } from \"antd\";\nimport { useState } from \"react\";\nconst { TextArea } = Input;\nimport { copyTextToClipboard } from \"./../../lib\"\nimport { } from \"./lib\"\nimport { typeList, emptyResult, ByteConvertResult } from \"./data\"\nimport type { RadioChangeEvent } from 'antd';\nimport { convertToByte, convertFromByte, getDefaultType } from \"./lib\"\nimport { InputStatus } from \"antd/es/_util/statusUtils\";\n\nconst ByteConvert = () => {\n  const t = getDefaultType();\n  const getPlaceholder = (type :string) :string | undefined => {\n    return typeList.find(item => item.value === type)?.placeholder;\n  }\n\n  const [ value, setValue ] = useState(''); // 输入数量\n  const [ status, setStatus ] = useState(''); // 输入是否合法\n  const [ b, setB ] = useState(0); // 数量\n  const [ type, setType ] = useState(t); // 类型,\n  const [ placeholder, setPlaceholder ] = useState(getPlaceholder(t)); // 数字类型的输入提示\n  const [ data, setData ] = useState(emptyResult); // 转换的结果\n  const [ notice, contextHolder] = message.useMessage();\n\n  const inputStyle = { cursor: \"pointer\" };\n\n  // 切换类型\n  const onTypeChange = ({ target: { value : t } }: RadioChangeEvent) => {\n    setType(t);\n    setPlaceholder(getPlaceholder(t));\n    if( value !== \"\" && /^\\d+$/.test(value)) setB(convertToByte(parseInt(value), t));\n  };\n\n  // 点击结果框,把结果复制到粘贴板\n  const inputClick = (e :React.MouseEvent<HTMLElement>) => {\n    const txt = (e.target as HTMLInputElement).value.trim();\n    if(txt != \"\") {\n      copyTextToClipboard(txt);\n      notice.success(\"复制到粘贴板成功！！！\");\n    }\n  };\n\n  const textAreaChange = (e :React.ChangeEvent<HTMLTextAreaElement>) => {\n    const value = e.target.value.trim();\n    setValue(value);\n    if(\"\" == value) {\n      setStatus('');\n      return ; // 没有内家直接返回不做下面的处理\n    }\n    if(/^\\d+$/.test(value)) {\n      setB(convertToByte(parseInt(value), type));\n      setStatus('')\n    } else {\n      setB(0);\n      setStatus('error');\n    }\n  }\n\n  const f = (v :number) :string => {\n    if(0 === v) return '';\n    return v.toString();\n  }\n\n  return (\n    <div>\n      {contextHolder}\n\n      <Space>\n        <Radio.Group\n          optionType = \"button\" buttonStyle=\"solid\"\n          options = { typeList } \n          onChange={ onTypeChange } \n          value={ type } \n        />\n        <Button \n          onClick={ () => { setValue(''); setB(0); setStatus(''); } }\n          style={ {\"backgroundColor\" : \"#dc3545\",\"color\": \"#fff\" }} \n        >清除</Button>\n      </Space>\n\n      <TextArea\n        status= { status as InputStatus }\n        style={ { margin: \"5px 0 5px 0\" }}\n        value= { value }\n        onChange={ textAreaChange }\n        placeholder={ placeholder }\n        autoSize={{ minRows: 3, maxRows: 3 }}\n      />\n\n      <Row wrap>\n        <Col span={12}>\n          <Divider dashed plain>字节 ( Byte )</Divider>\n          <Form name=\"basic1\" labelCol={{ span: 8 }} autoComplete=\"off\">\n            <Form.Item label=\"B (Byte)\">\n              <Input readOnly style={ inputStyle } onClick={ inputClick } value= { f(convertFromByte(b,'')) } />\n            </Form.Item>\n            <Form.Item label=\"KB (Kilo Byte)\">\n              <Input readOnly style={ inputStyle } onClick={ inputClick } value= { f(convertFromByte(b,'KB')) } />\n            </Form.Item>\n            <Form.Item label=\"MB (Mega Byte)\">\n              <Input readOnly style={ inputStyle } onClick={ inputClick } value= { f(convertFromByte(b,'MB')) } />\n            </Form.Item>\n            <Form.Item label=\"GB (Giga Byte)\">\n              <Input readOnly style={ inputStyle } onClick={ inputClick } value= { f(convertFromByte(b,'GB')) }/>\n            </Form.Item>\n            <Form.Item label=\"TB (Trillion Byte)\">\n              <Input readOnly style={ inputStyle } onClick={ inputClick } value= { f(convertFromByte(b,'TB')) } />\n            </Form.Item>\n            <Form.Item label=\"PB (Peta Byte)\">\n              <Input readOnly style={ inputStyle } onClick={ inputClick } value= { f(convertFromByte(b,'PB')) } />\n            </Form.Item>\n            <Form.Item label=\"EB (Exa Byte)\">\n              <Input readOnly style={ inputStyle } onClick={ inputClick } value= { f(convertFromByte(b,'EB')) } />\n            </Form.Item>\n            <Form.Item label=\"ZB (Zetta Byte)\">\n              <Input readOnly style={ inputStyle } onClick={ inputClick } value= { f(convertFromByte(b,'ZB')) } />\n            </Form.Item>\n            <Form.Item label=\"YB Yotta Byte\">\n              <Input readOnly style={ inputStyle } onClick={ inputClick } value= { f(convertFromByte(b,'YB')) } />\n            </Form.Item>\n          </Form>\n        </Col>\n        <Col span={12}>\n          <Divider dashed plain>位 ( bit )</Divider>\n          <Form name=\"basic2\" labelCol={{ span: 8 }} autoComplete=\"off\">\n          <Form.Item label=\"b (bit)\">\n              <Input readOnly style={ inputStyle } onClick={ inputClick } value= { f(convertFromByte(b * 8,'')) } />\n            </Form.Item>\n            <Form.Item label=\"Kb (Kilo bit)\">\n              <Input readOnly style={ inputStyle } onClick={ inputClick } value= { f(convertFromByte(b * 8,'KB')) } />\n            </Form.Item>\n            <Form.Item label=\"Mb (Mega bit)\">\n              <Input readOnly style={ inputStyle } onClick={ inputClick } value= { f(convertFromByte(b * 8,'MB')) } />\n            </Form.Item>\n            <Form.Item label=\"Gb (Giga bit)\">\n              <Input readOnly style={ inputStyle } onClick={ inputClick } value= { f(convertFromByte(b * 8,'GB')) }/>\n            </Form.Item>\n            <Form.Item label=\"Tb (Trillion bit)\">\n              <Input readOnly style={ inputStyle } onClick={ inputClick } value= { f(convertFromByte(b * 8,'TB')) } />\n            </Form.Item>\n            <Form.Item label=\"Pb (Peta bit)\">\n              <Input readOnly style={ inputStyle } onClick={ inputClick } value= { f(convertFromByte(b * 8,'PB')) } />\n            </Form.Item>\n            <Form.Item label=\"Eb (Exa bit)\">\n              <Input readOnly style={ inputStyle } onClick={ inputClick } value= { f(convertFromByte(b * 8,'EB')) } />\n            </Form.Item>\n            <Form.Item label=\"Zb (Zetta bit)\">\n              <Input readOnly style={ inputStyle } onClick={ inputClick } value= { f(convertFromByte(b * 8,'ZB')) } />\n            </Form.Item>\n            <Form.Item label=\"Yb Yotta bit\">\n              <Input readOnly style={ inputStyle } onClick={ inputClick } value= { f(convertFromByte(b * 8,'YB')) } />\n            </Form.Item>\n          </Form>\n        </Col>\n      </Row>\n    </div>\n  );\n}\n\nexport default ByteConvert;","// 转成可读字节  1024 => 1 KB  2 * 1024 * 1024 => 2 MB\nexport const bytesToSize = (bytes :number) :string => {\n  if (bytes === 0) return '0 B';\n  let k = 1024,\n  sizes = ['B', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'],\n  i = Math.floor(Math.log(bytes) / Math.log(k));\n  return (bytes / Math.pow(k, i)). toFixed(2) + ' ' + sizes[i];\n}\n\n// 转换成字节数据  (1,KB) => 1024  (2,MB) => 2 * 1024 * 1024  \nexport const convertToByte = (num :number,type :string) :number => {  \n  switch(type.toUpperCase()) {\n    case \"B\": return num;\n    case \"KB\": return num * 1024;\n    case \"MB\": return num * 1024 * 1024;\n    case \"GB\": return num * 1024 * 1024 * 1024;\n    case \"TB\": return num * 1024 * 1024 * 1024 * 1024;\n    case \"PB\": return num * 1024 * 1024 * 1024 * 1024 * 1024;\n    case \"EB\": return num * 1024 * 1024 * 1024 * 1024 * 1024 * 1024;\n    case \"ZB\": return num * 1024 * 1024 * 1024 * 1024 * 1024 * 1024 * 1024;\n    case \"YB\": return num * 1024 * 1024 * 1024 * 1024 * 1024 * 1024 * 1024 * 1024;\n  }\n  return num;\n}\n\n// 转换成字节数据  (1,KB) => 1024  (2,MB) => 2 * 1024 * 1024  \nexport const convertFromByte = (num :number,type :string) :number => {  \n  switch(type.toUpperCase()) {\n    case \"B\": return num;\n    case \"KB\": return num / 1024;\n    case \"MB\": return num / 1024 / 1024;\n    case \"GB\": return num / 1024 / 1024 / 1024;\n    case \"TB\": return num / 1024 / 1024 / 1024 / 1024;\n    case \"PB\": return num / 1024 / 1024 / 1024 / 1024 / 1024;\n    case \"EB\": return num / 1024 / 1024 / 1024 / 1024 / 1024 / 1024;\n    case \"ZB\": return num / 1024 / 1024 / 1024 / 1024 / 1024 / 1024 / 1024;\n    case \"YB\": return num / 1024 / 1024 / 1024 / 1024 / 1024 / 1024 / 1024 / 1024;\n  }\n  return num;\n}\n\nconst DEFAULT_TYPE = 'byte-convert:default-type';\n\n// 获取默认类型\nexport function getDefaultType() :string  {\n    const type = localStorage.getItem(DEFAULT_TYPE);\n    return (type === null)? \"GB\" : type;\n}\n\n// 设置默认类型\nexport function setDefaultType(type: string) : void  {\n    localStorage.setItem(DEFAULT_TYPE,type);\n}","// 复制到粘贴板\r\nexport async function copyTextToClipboard(text: string) {\r\n  if (\"clipboard\" in navigator) {\r\n    return await navigator.clipboard.writeText(text);\r\n  } else {\r\n    return document.execCommand('copy', true, text);\r\n  }\r\n}\r\n\r\n// 防抖函数\r\nexport function debounce(operate:Function, delay:number) {\r\n  let time :any = null\r\n  let timer :any = null\r\n  let newTime = null\r\n  function task() {\r\n    newTime =+ new Date()\r\n    if(newTime - time < delay) {\r\n      timer = setTimeout(task, delay)\r\n    } else {\r\n      operate()\r\n      timer = null\r\n    }\r\n    time = newTime\r\n  }\r\n  return function () {\r\n    // 更新时间戳\r\n    time =+ new Date();\r\n    if(!timer) {\r\n      timer = setTimeout(task, delay)\r\n    }\r\n  }\r\n}\r\n\r\n// 每间隔多少字符插入指定了符\r\nexport function insertIntervalString(str :string, disNum :number = 4, insertStr:string  = \" \") {\r\n  return str.replace(new RegExp(\"(.{\" + disNum + \"})\", \"g\"), \"$1\" + insertStr);\r\n}\r\n"],"names":["props","ref","AntdIcon","icon","typeList","label","value","placeholder","emptyResult","TextArea","t","getDefaultType","getPlaceholder","type","item","setValue","useState","status","setStatus","b","setB","setType","setPlaceholder","data","setData","notice","contextHolder","inputStyle","cursor","inputClick","e","txt","target","trim","success","f","v","toString","optionType","buttonStyle","options","onChange","test","convertToByte","parseInt","onClick","style","margin","autoSize","minRows","maxRows","wrap","span","dashed","plain","name","labelCol","autoComplete","readOnly","convertFromByte","bytesToSize","bytes","i","Math","floor","log","pow","toFixed","num","toUpperCase","DEFAULT_TYPE","localStorage","getItem","setDefaultType","setItem","async","copyTextToClipboard","text","navigator","clipboard","writeText","document","execCommand","debounce","operate","delay","time","timer","newTime","task","Date","setTimeout","insertIntervalString","str","disNum","insertStr","replace","RegExp"],"sourceRoot":""}