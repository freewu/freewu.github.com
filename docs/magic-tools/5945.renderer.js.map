{"version":3,"file":"5945.renderer.js","mappings":"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","sources":["webpack://magic-tools/./node_modules/@ant-design/icons-svg/es/asn/SearchOutlined.js","webpack://magic-tools/./node_modules/@ant-design/icons/es/icons/SearchOutlined.js","webpack://magic-tools/./node_modules/antd/es/_util/statusUtils.js","webpack://magic-tools/./src/renderer/App/VolumeConvert/data.ts","webpack://magic-tools/./src/renderer/App/VolumeConvert/lib.ts","webpack://magic-tools/./src/renderer/App/VolumeConvert/setting.tsx"],"sourcesContent":["// This icon file is generated automatically.\nvar SearchOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M909.6 854.5L649.9 594.8C690.2 542.7 712 479 712 412c0-80.2-31.3-155.4-87.9-212.1-56.6-56.7-132-87.9-212.1-87.9s-155.5 31.3-212.1 87.9C143.2 256.5 112 331.8 112 412c0 80.1 31.3 155.5 87.9 212.1C256.5 680.8 331.8 712 412 712c67 0 130.6-21.8 182.7-62l259.7 259.6a8.2 8.2 0 0011.6 0l43.6-43.5a8.2 8.2 0 000-11.6zM570.4 570.4C528 612.7 471.8 636 412 636s-116-23.3-158.4-65.6C211.3 528 188 471.8 188 412s23.3-116.1 65.6-158.4C296 211.3 352.2 188 412 188s116.1 23.2 158.4 65.6S636 352.2 636 412s-23.3 116.1-65.6 158.4z\" } }] }, \"name\": \"search\", \"theme\": \"outlined\" };\nexport default SearchOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport SearchOutlinedSvg from \"@ant-design/icons-svg/es/asn/SearchOutlined\";\nimport AntdIcon from '../components/AntdIcon';\nvar SearchOutlined = function SearchOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: SearchOutlinedSvg\n  }));\n};\nif (process.env.NODE_ENV !== 'production') {\n  SearchOutlined.displayName = 'SearchOutlined';\n}\nexport default /*#__PURE__*/React.forwardRef(SearchOutlined);","import classNames from 'classnames';\nconst InputStatuses = ['warning', 'error', ''];\nexport function getStatusClassNames(prefixCls, status, hasFeedback) {\n  return classNames({\n    [`${prefixCls}-status-success`]: status === 'success',\n    [`${prefixCls}-status-warning`]: status === 'warning',\n    [`${prefixCls}-status-error`]: status === 'error',\n    [`${prefixCls}-status-validating`]: status === 'validating',\n    [`${prefixCls}-has-feedback`]: hasFeedback\n  });\n}\nexport const getMergedStatus = (contextStatus, customStatus) => customStatus || contextStatus;","export const unitTypeList = [\n  { label: '公制', value: 'ms', placeholder: 'metric system'},\n  { label: '英制', value: 'iu', placeholder: 'Imperial units'},\n  { label: '美制', value: 'us', placeholder: ''},\n  { label: '市制', value: 'cn', placeholder: ''},\n];\n\n/**\n1 美制液量盎司 = 1.8046875\t立方英寸 = 29.5735295625 毫升 ounce \n1 美制液量打兰 = 1/8 美制液量盎司 = 3.6966912 毫升 dram \n1 美制茶匙 = 1/6 美制液量盎司 = 4.92892159 毫升 teaspoon\n1 美制汤匙 = 1/2 美制液量盎司 = 14.7867648 毫升 tablespoon\n1 美制及耳 = 4 美制液量盎司 = 118.294118 毫升 gill\n1 美制杯 = 8 美制液量盎司 = 236.588236 毫升 cup\n1 美制品脱 = 16 美制液量盎司 = 473.176473 毫升 pint\n1 美制夸脱 = 32 美制液量盎司 = 946.352946 毫升 quart\n1 美制加仑 = 128 美制液量盎司 = 3785.41178 毫升 gallon\n\n1 立方英寸 = 16.387064 毫升\n1 立方英尺 = 28316.8466 毫升\n1 立方码 = 764554.858 毫升\n\n1 英制液量盎司 = 28.4130625 毫升 = 1.733871455 立方英寸 = 0.960759940 美制液量盎司\n1 英制加仑 = 160 英制液量盎司 = 4 英制夸脱 = 4546.09 毫升\n1 英制夸脱 = 40 英制液量盎司 = 2 英制品脱  = 1136.5225 毫升\n1 英制品脱 = 20 英制液量盎司= 2 英制杯 = 568.26125 毫升\n1 英制杯 = 10 英制液量盎司 = 2 英制及耳= 284.130625 毫升\n1 英制及耳 = 5 英制液量盎司 = 10 英制汤匙 = 142.0653125 毫升\n1 英制汤匙 = 1/2 英制液量盎司 = 3 英制茶匙 = 14.2065375 毫升\n1 英制茶匙 = 1/6 英制液量盎司 = 4.7355125 毫升\n1 英制液量打兰 = 1/8 英制液量盎司 = 3.5516328125 毫升\n*/\n\nexport const typeList = [\n  { label: '升', value: 'l', type:'ms', placeholder: '1 升 = 1000 毫升'},\n  { label: '毫升',   value: 'ml',  type:'ms', placeholder: '1 升 = 1000 毫升' },\n  //{ label: '立方千米', value: 'km3', type:'ms', placeholder: 'km³' },\n  { label: '立方米', value: 'm3', type:'ms', placeholder: 'm³ 1 立方米   = 1000000 毫升 = 1000 升' },\n  { label: '立方分米', value: 'dm3', type:'ms', placeholder: 'dm³ 1 立方分米 = 1000 毫升 = 1 升' },\n  { label: '立方厘米', value: 'cm3', type:'ms', placeholder: 'cm³ 1 立方厘米 = 1 毫升' },\n  { label: '立方毫米', value: 'mm3', type:'ms', placeholder: 'mm³ 1 立方毫米 = 0.001 毫升' },\n\n  { label: '盎司 ', value: 'us-ounce', type:'us', placeholder: '1 美制液量盎司 = 1.8046875\t立方英寸 = 29.5735295625 毫升 ounce '},\n  { label: '加仑 ', value: 'us-gallon', type:'us', placeholder: '1 美制加仑 = 128 美制液量盎司 = 3785.41178 毫升 gallon'},\n  { label: '打兰 ', value: 'us-dram', type:'us', placeholder: '1 美制液量打兰 = 1/8 美制液量盎司 = 3.6966912 毫升 dram '},\n  { label: '茶匙 ', value: 'us-teaspoon', type:'us', placeholder: '1 美制茶匙 = 1/6 美制液量盎司 = 4.92892159 毫升 teaspoon'},\n  { label: '汤匙 ', value: 'us-tablespoon', type:'us', placeholder: '1 美制汤匙 = 1/2 美制液量盎司 = 14.7867648 毫升 tablespoon'},\n  { label: '及耳 ', value: 'us-gill', type:'us', placeholder: '1 美制及耳 = 4 美制液量盎司 = 118.294118 毫升 gill'},\n  { label: '杯 ', value: 'us-cup', type:'us', placeholder: '1 美制杯 = 8 美制液量盎司 = 236.588236 毫升 cup'},\n  { label: '品脱 ', value: 'us-pint', type:'us', placeholder: '1 美制品脱 = 16 美制液量盎司 = 473.176473 毫升 pint'},\n  { label: '夸脱 ', value: 'us-quart', type:'us', placeholder: '1 美制夸脱 = 32 美制液量盎司 = 946.352946 毫升 quart'},\n\n  { label: '盎司 ', value: 'iu-ounce', type:'iu', placeholder: '1 英制液量盎司 = 28.4130625 毫升 = 1.733871455 立方英寸 = 0.960759940 美制液量盎司'},\n  { label: '加仑 ', value: 'iu-gallon', type:'iu', placeholder: '1 英制加仑 = 160 英制液量盎司 = 4 英制夸脱 = 4546.09 毫升'},\n  { label: '打兰 ', value: 'iu-dram', type:'iu', placeholder: '1 英制液量打兰 = 1/8 英制液量盎司 = 3.5516328125 毫升'},\n  { label: '茶匙 ', value: 'iu-teaspoon', type:'iu', placeholder: '1 英制茶匙 = 1/6 英制液量盎司 = 4.7355125 毫升'},\n  { label: '汤匙 ', value: 'iu-tablespoon', type:'iu', placeholder: '1 英制汤匙 = 1/2 英制液量盎司 = 3 英制茶匙 = 14.2065375 毫升'},\n  { label: '及耳 ', value: 'iu-gill', type:'iu', placeholder: '1 英制及耳 = 5 英制液量盎司 = 10 英制汤匙 = 142.0653125 毫升'},\n  { label: '杯 ', value: 'iu-cup', type:'iu', placeholder: '1 英制杯 = 10 英制液量盎司 = 2 英制及耳= 284.130625 毫升'},\n  { label: '品脱 ', value: 'iu-pint', type:'iu', placeholder: '1 英制品脱 = 20 英制液量盎司= 2 英制杯 = 568.26125 毫升'},\n  { label: '夸脱 ', value: 'iu-quart', type:'iu', placeholder: '1 英制夸脱 = 40 英制液量盎司 = 2 英制品脱  = 1136.5225 毫升'},\n \n  { label: '立方英寸 ', value: 'iu-inch3', type:'iu', placeholder: '1 立方英寸 = 16.387064 毫升'},\n  { label: '立方英尺 ', value: 'iu-foot3', type:'iu', placeholder: '1 立方英尺 = 28316.8466 毫升'},\n  { label: '立方码 ', value: 'iu-yard3', type:'iu', placeholder: '1 立方码 = 764554.858 毫升'},\n\n  { label: '石', value: 'dan', type:'cn', placeholder: '1市石 =\t10市斗 =\t100市升 =\t1000市合(gě) =\t1,0000勺 =\t10,0000撮 =\t100升'},\n  { label: '斗', value: 'dou', type:'cn', placeholder: '0.1市石 =\t1市斗 =\t10市升 =\t100市合 =\t1000勺 =\t1,0000撮 = 10升'},\n  { label: '升', value: 'sheng', type:'cn', placeholder: '市制容积的基本单位为升，一升合国际单位制一公升，由于两个单位大小一样，所以，国际单位制的公升也简称为升'},\n  { label: '合', value: 'he', type:'cn', placeholder: '0.001市石 =\t0.01市斗 =\t0.1市 =\t1市合 =\t10勺 =\t100撮 =\t0.1升'},\n  { label: '勺', value: 'shao', type:'cn', placeholder: '0.0001市石 =\t0.001市斗 =\t0.01市升 =\t0.1市合 =\t1勺 =\t10撮 =\t0.01升'},\n  { label: '撮', value: 'cuo', type:'cn', placeholder: '0.00001市石 =\t0.0001市斗 =\t0.001市升 =\t0.01市合 =\t0.1勺 =\t1撮 =\t0.001升'},\n];","import { typeList } from \"./data\";\n\n// 获指定制式的距离类型列表\nexport const getTypeList = (ut :string) => {\n  return typeList.filter((v) => v.type === ut)\n}\n\nexport const getDefaultType = (ut :string) :string =>{\n  switch(ut) {\n    case 'iu': return getDefaultIUType();\n    case 'cn': return getDefaultCNType();\n    case 'us': return getDefaultUSType();\n  }\n  return getDefaultMSType();\n}\n\nexport const getTypePlaceholder = (type :string) :string | undefined => {\n  return typeList.find(item => item.value === type)?.placeholder;\n}\n\nconst DEFAULT_UNIT_TYPE = 'volume-convert:default-unit-type';\n\n// 获取默认制式\nexport function getDefaultUnitType() :string  {\n  const type = localStorage.getItem(DEFAULT_UNIT_TYPE);\n  return (type === null)? \"ms\" : type;\n}\n\n// 设置默认制式\nexport function setDefaultUnitType(type: string) : void  {\n  localStorage.setItem(DEFAULT_UNIT_TYPE,type);\n}\n\nconst DEFAULT_MS_TYPE = 'volume-convert:default-ms-type';\n\n// 获取默认公制单位\nexport function getDefaultMSType() :string  {\n  const type = localStorage.getItem(DEFAULT_MS_TYPE);\n  return (type === null)? \"l\" : type;\n}\n\n// 设置默认公制单位\nexport function setDefaultMSType(type: string) : void  {\n  localStorage.setItem(DEFAULT_MS_TYPE,type);\n}\n\nconst DEFAULT_IU_TYPE = 'volume-convert:default-iu-type';\n\n// 获取默认英制单位\nexport function getDefaultIUType() :string  {\n  const type = localStorage.getItem(DEFAULT_IU_TYPE);\n  return (type === null)? \"iu-ounce\" : type;\n}\n\n// 设置默认英制单位\nexport function setDefaultIUType(type: string) : void  {\n  localStorage.setItem(DEFAULT_IU_TYPE,type);\n}\n\nconst DEFAULT_CN_TYPE = 'volume-convert:default-cn-type';\n\n// 获取默认市制单位\nexport function getDefaultCNType() :string  {\n  const type = localStorage.getItem(DEFAULT_CN_TYPE);\n  return (type === null)? \"dou\" : type;\n}\n\n// 设置默认市制单位\nexport function setDefaultCNType(type: string) : void  {\n  localStorage.setItem(DEFAULT_CN_TYPE,type);\n}\n\n\nconst DEFAULT_US_TYPE = 'volume-convert:default-us-type';\n\n// 获取默认美制单位\nexport function getDefaultUSType() :string  {\n  const type = localStorage.getItem(DEFAULT_US_TYPE);\n  return (type === null)? \"us-ounce\" : type;\n}\n\n// 设置默认美制单位\nexport function setDefaultUSType(type: string) : void  {\n  localStorage.setItem(DEFAULT_US_TYPE,type);\n}\n","import { Select, Form, Divider } from \"antd\";\nimport { getDefaultUnitType,setDefaultUnitType, getTypeList } from \"./lib\";\nimport { useState } from \"react\";\nimport { typeList, unitTypeList } from \"./data\";\nimport { getDefaultMSType,setDefaultMSType } from \"./lib\";\nimport { getDefaultIUType,setDefaultIUType } from \"./lib\";\nimport { getDefaultCNType,setDefaultCNType } from \"./lib\";\nimport { getDefaultUSType,setDefaultUSType } from \"./lib\";\n\nexport const VolumeConvertSetting = () => {\n  \n  const [ type, setType ] = useState(getDefaultUnitType()); // 默认制式\n  const [ msType, setMSType ] = useState(getDefaultMSType()); // 默认公制单位\n  const [ iuType, setIUType ] = useState(getDefaultIUType()); // 默认英制单位\n  const [ usType, setUSType ] = useState(getDefaultUSType()); // 默认美制单位\n  const [ cnType, setCNType ] = useState(getDefaultCNType()); // 默认市制单位\n\n  return (\n    <>\n      <Divider orientation=\"left\" plain>容积转换</Divider>\n      <Form.Item label=\"默认制式\">\n        <Select\n          value={ type }\n          style={{ width: 240 }}\n          onChange={ (value: string) => { setType(value); setDefaultUnitType(value); } }\n          options={ unitTypeList }\n        />\n      </Form.Item>\n      <Form.Item label=\"默认公制单位\">\n        <Select\n          value={ msType }\n          style={{ width: 240 }}\n          onChange={ (value: string) => { setMSType(value); setDefaultMSType(value); } }\n          options={ getTypeList('ms') }\n        />\n      </Form.Item>\n      <Form.Item label=\"默认英制单位\">\n        <Select\n          value={ iuType }\n          style={{ width: 240 }}\n          onChange={ (value: string) => { setIUType(value); setDefaultIUType(value); } }\n          options={ getTypeList('iu') }\n        />\n      </Form.Item>\n      <Form.Item label=\"默认美制单位\">\n        <Select\n          value={ usType }\n          style={{ width: 240 }}\n          onChange={ (value: string) => { setUSType(value); setDefaultUSType(value); } }\n          options={ getTypeList('us') }\n        />\n      </Form.Item>\n      <Form.Item label=\"默认市制单位\">\n        <Select\n          value={ cnType }\n          style={{ width: 240 }}\n          onChange={ (value: string) => { setCNType(value); setDefaultCNType(value); } }\n          options={ getTypeList('cn') }\n        />\n      </Form.Item>\n    </>\n  );\n}"],"names":["props","ref","AntdIcon","icon","getStatusClassNames","prefixCls","status","hasFeedback","getMergedStatus","contextStatus","customStatus","unitTypeList","label","value","placeholder","typeList","type","getTypeList","ut","v","getDefaultType","getDefaultIUType","getDefaultCNType","getDefaultUSType","getDefaultMSType","getTypePlaceholder","item","DEFAULT_UNIT_TYPE","getDefaultUnitType","localStorage","getItem","setDefaultUnitType","setItem","DEFAULT_MS_TYPE","setDefaultMSType","DEFAULT_IU_TYPE","setDefaultIUType","DEFAULT_CN_TYPE","setDefaultCNType","DEFAULT_US_TYPE","setDefaultUSType","VolumeConvertSetting","setType","useState","msType","setMSType","iuType","setIUType","usType","setUSType","cnType","setCNType","orientation","plain","style","width","onChange","options"],"sourceRoot":""}