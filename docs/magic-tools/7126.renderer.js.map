{"version":3,"file":"7126.renderer.js","mappings":"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","sources":["webpack://magic-tools/./src/renderer/App/AreaConvert/data.ts","webpack://magic-tools/./src/renderer/App/AreaConvert/lib.ts"],"sourcesContent":["export const unitTypeList = [\n  { label: '公制', value: 'ms', placeholder: 'metric system'},\n  { label: '英制', value: 'iu', placeholder: 'Imperial units'},\n  { label: '市制', value: 'cn', placeholder: ''},\n  { label: '日式', value: 'jp', placeholder: ''},\n];\n\nexport const typeList = [\n  { label: '平方公里', value: 'km2', type:'ms', placeholder: '1 平方公里km² = 1000000 平方米 m²'},\n  { label: '公顷', value: 'gq', type:'ms', placeholder: '1 公顷 = 10000 平方米 m²'},\n  { label: '公亩', value: 'gm', type:'ms', placeholder: '1 公亩 = 100 平方米 m²'},\n  { label: '平方米',   value: 'm2',  type:'ms', placeholder: '1 平方米 m² = 0.0001 公顷 = 0.01 公亩' },\n  { label: '平方分米', value: 'dm2', type:'ms', placeholder: '1 平方分米 dm² = 0.01 平方米 m²' },\n  { label: '平方厘米', value: 'cm2', type:'ms', placeholder: '1 平方厘米 cm² = 0.0001 平方米 m²' },\n  { label: '平方毫米', value: 'mm2', type:'ms', placeholder: '1 平方毫米 mm² = 0.000001 平方米 m²' },\n\n  { label: '平方英里', value: 'mile2', type:'iu', placeholder: '1 平方英里 = 2590000 平方米 m²'},\n  { label: '英亩', value: 'ym', type:'iu', placeholder: '1 英亩 = 4046.85642 平方米 m²'},\n  { label: '路得', value: 'ld', type:'iu', placeholder: '1 路得 = 1011.7136203 平方米m²'},\n  { label: '平方杆', value: 'g', type:'iu', placeholder: '1 平方杆 = 25.2928469 平方米m²'},\n  { label: '平方码', value: 'yard2', type:'iu', placeholder: '1 平方码 = 0.83612736 平方米 m²'},\n  { label: '平方英尺', value: 'foot2', type:'iu', placeholder: '1 平方英尺 = 0.09290304 平方米 m²'},\n  { label: '平方英寸', value: 'inch2', type:'iu', placeholder: '1 平方英寸 = 0.00064516 平方米 m²'},\n\n  { label: '坪', value: 'jp-ping', type:'jp', placeholder: '1 坪 = 3.30578622 平方米 m²'},\n  { label: '叠', value: 'jp-die', type:'jp', placeholder: '1 叠 = 1.62 平方米 m²'},\n  { label: '町', value: 'jp-ding', type:'jp', placeholder: '1 町 = 0.00991736 平方米 m²'},\n  { label: '段', value: 'jp-duan', type:'jp', placeholder: '1 段 = 0.00099174 平方米 m²'},\n  { label: '亩', value: 'jp-mu', type:'jp', placeholder: '1 亩 = 0.00009917 平方米 m²'},\n\n  { label: '顷', value: 'qin', type:'cn', placeholder: '1顷 = 100亩 = 66666 平方米 m²'},\n  { label: '亩', value: 'mu', type:'cn', placeholder: '1亩 = 666.66 平方米 m²'},\n  { label: '分', value: 'fen', type:'cn', placeholder: '1分 = 0.1亩 = 66.666 平方米 m²'},\n  { label: '厘', value: 'li', type:'cn', placeholder: '1厘 = 0.01亩 = 6.6666 平方米 m² '},\n  { label: '毫', value: 'hao', type:'cn', placeholder: '1毫 = 0.001亩 = 0.66666 平方米 m²'},\n  { label: '平方丈', value: 'zhuang2', type:'cn', placeholder: '1平方丈 = 100平方尺 = 11.11平方米'},\n  { label: '平方尺', value: 'chi2', type:'cn', placeholder: '1平方尺 = 0.1111平方米'},\n  { label: '平方寸', value: 'cun2', type:'cn', placeholder: '1平方寸 = 0.01平方尺 = 0.001111平方米'},\n];","import { typeList } from \"./data\";\n\n// 获指定制式的距离类型列表\nexport const getTypeList = (ut :string) => {\n  return typeList.filter((v) => v.type === ut)\n}\n\nexport const getDefaultType = (ut :string) :string =>{\n  switch(ut) {\n    case 'iu': return getDefaultIUType();\n    case 'cn': return getDefaultCNType();\n    case 'jp': return getDefaultJPType();\n  }\n  return getDefaultMSType();\n}\n\nexport const getTypePlaceholder = (type :string) :string | undefined => {\n  return typeList.find(item => item.value === type)?.placeholder;\n}\n\nconst DEFAULT_UNIT_TYPE = 'area-convert:default-unit-type';\n\n// 获取默认制式\nexport function getDefaultUnitType() :string  {\n  const type = localStorage.getItem(DEFAULT_UNIT_TYPE);\n  return (type === null)? \"ms\" : type;\n}\n\n// 设置默认制式\nexport function setDefaultUnitType(type: string) : void  {\n  localStorage.setItem(DEFAULT_UNIT_TYPE,type);\n}\n\nconst DEFAULT_MS_TYPE = 'area-convert:default-ms-type';\n\n// 获取默认公制单位\nexport function getDefaultMSType() :string  {\n  const type = localStorage.getItem(DEFAULT_MS_TYPE);\n  return (type === null)? \"m2\" : type;\n}\n\n// 设置默认公制单位\nexport function setDefaultMSType(type: string) : void  {\n  localStorage.setItem(DEFAULT_MS_TYPE,type);\n}\n\nconst DEFAULT_IU_TYPE = 'area-convert:default-iu-type';\n\n// 获取默认英制单位\nexport function getDefaultIUType() :string  {\n  const type = localStorage.getItem(DEFAULT_IU_TYPE);\n  return (type === null)? \"foot2\" : type;\n}\n\n// 设置默认英制单位\nexport function setDefaultIUType(type: string) : void  {\n  localStorage.setItem(DEFAULT_IU_TYPE,type);\n}\n\nconst DEFAULT_CN_TYPE = 'area-convert:default-cn-type';\n\n// 获取默认市制单位\nexport function getDefaultCNType() :string  {\n  const type = localStorage.getItem(DEFAULT_CN_TYPE);\n  return (type === null)? \"mu\" : type;\n}\n\n// 设置默认市制单位\nexport function setDefaultCNType(type: string) : void  {\n  localStorage.setItem(DEFAULT_CN_TYPE,type);\n}\n\nconst DEFAULT_JP_TYPE = 'area-convert:default-jp-type';\n\n// 获取默认日式单位\nexport function getDefaultJPType() :string  {\n  const type = localStorage.getItem(DEFAULT_CN_TYPE);\n  return (type === null)? \"jp-ping\" : type;\n}\n\n// 设置默认日式单位\nexport function setDefaultJPType(type: string) : void  {\n  localStorage.setItem(DEFAULT_CN_TYPE,type);\n}\n\n\n"],"names":["unitTypeList","label","value","placeholder","typeList","type","getTypeList","ut","v","getDefaultType","getDefaultIUType","getDefaultCNType","getDefaultJPType","getDefaultMSType","getTypePlaceholder","item","DEFAULT_UNIT_TYPE","getDefaultUnitType","localStorage","getItem","setDefaultUnitType","setItem","DEFAULT_MS_TYPE","setDefaultMSType","DEFAULT_IU_TYPE","setDefaultIUType","DEFAULT_CN_TYPE","setDefaultCNType","setDefaultJPType"],"sourceRoot":""}